plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.3.11'
    id 'org.jetbrains.kotlin.jvm' version '1.2.51'
    id "org.jetbrains.grammarkit" version "2018.2"
}
apply plugin: 'org.jetbrains.grammarkit'

// import is optional to make task creation easier
import org.jetbrains.grammarkit.tasks.*
group 'org.nim'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

sourceSets {
    generated {
        java {
            srcDirs  "${buildDir}/generated"
        }
    }
    main {
        compileClasspath += generated.output
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
intellij {
    pluginName = 'nim-plugin'
    instrumentCode = false
    version '2018.2.4'
}
patchPluginXml {
    changeNotes """
      Add change notes here.<br>
      <em>most HTML tags may be used</em>"""
}



task generateNimLexer(type: GenerateLexer) {
    // source flex file
    File rootSrc = project.sourceSets.main.java.srcDirs[0];
    source = new File(rootSrc, "org/nim/grammar/nim.flex").path

    // target directory for lexer
    targetDir = new File(project.buildDir, "/generated/org/nim/grammar/").path

    // target classname, target file will be targetDir/targetClass.java
    targetClass = "NimLexer"

    // optional, path to the task-specific skeleton file. Default: none
    //skeleton = '/some/specific/skeleton'

    // if set, plugin will remove a lexer output file before generating new one. Default: false
    purgeOldFiles = true
}

task generateNimParser(type: GenerateParser) {
    // source bnf file
    File rootSrc = project.sourceSets.main.java.srcDirs[0];
    source =  new File(rootSrc, "org/nim/grammar/nim.bnf").path

    // optional, task-specific root for the generated files. Default: none
    targetRoot = new File(project.buildDir, "/generated/").path

    // path to a parser file, relative to the targetRoot
    pathToParser = '/org/nim/grammar/NimParser.java'

    // path to a directory with generated psi files, relative to the targetRoot
    pathToPsiRoot = '/org/nim/psi'

    // if set, plugin will remove a parser output file and psi output directory before generating new ones. Default: false
    purgeOldFiles = true
    
    doLast {
        
    }
}