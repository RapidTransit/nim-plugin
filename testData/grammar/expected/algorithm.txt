Nim file
  PsiComment(NimTokenType.<single_line_comment>)('#')
  PsiWhiteSpace('\n')
  PsiComment(NimTokenType.<single_line_comment>)('#')
  PsiWhiteSpace('\n')
  PsiComment(NimTokenType.<single_line_comment>)('#            Nim's Runtime Library')
  PsiWhiteSpace('\n')
  PsiComment(NimTokenType.<single_line_comment>)('#        (c) Copyright 2015 Andreas Rumpf')
  PsiWhiteSpace('\n')
  PsiComment(NimTokenType.<single_line_comment>)('#')
  PsiWhiteSpace('\n')
  PsiComment(NimTokenType.<single_line_comment>)('#    See the file "copying.txt", included in this')
  PsiWhiteSpace('\n')
  PsiComment(NimTokenType.<single_line_comment>)('#    distribution, for details about the copyright.')
  PsiWhiteSpace('\n')
  PsiComment(NimTokenType.<single_line_comment>)('#')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  PsiComment(NimTokenType.<single_line_comment>)('## This module implements some common generic algorithms.')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimTypeBlockImpl(TYPE_BLOCK)
      PsiElement(NimTokenType.type)('type')
      NimIndentationImpl(INDENTATION)
        PsiElement(NimTokenType.INDENT)('\n  ')
      NimTypeDeclarationImpl(TYPE_DECLARATION)
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('SortOrder')
        PsiElement(NimTokenType.*)('*')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        NimEnumDeclarationImpl(ENUM_DECLARATION)
          PsiElement(NimTokenType.enum)('enum')
          NimIndentationImpl(INDENTATION)
            PsiElement(NimTokenType.INDENT)('\n    ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('Descending')
          PsiElement(NimTokenType.,)(',')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('Ascending')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.`)('`')
      PsiElement(NimTokenType.BACK_TICK_IDENTIFIER)('*')
      PsiElement(NimTokenType.`)('`')
      PsiElement(NimTokenType.*)('*')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParamterNamesImpl(PARAMTER_NAMES)
            PsiElement(NimTokenType.IDENTIFIER)('x')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParamterNamesImpl(PARAMTER_NAMES)
            PsiElement(NimTokenType.IDENTIFIER)('order')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('SortOrder')
        PsiElement(NimTokenType.))(')')
      NimReturnTypeImpl(RETURN_TYPE)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
      PsiWhiteSpace(' ')
      NimPragmaImpl(PRAGMA)
        PsiElement(NimTokenType.{.)('{.')
        PsiElement(NimTokenType.IDENTIFIER)('inline')
        PsiElement(NimTokenType..})('.}')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('## flips ``x`` if ``order == Descending``.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('## If ``order == Ascending`` then ``x`` is returned.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('## ``x`` is supposed to be the result of a comparator, i.e.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('## | ``< 0`` for *less than*,')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('## | ``== 0`` for *equal*,')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('## | ``> 0`` for *greater than*.')
      NimIndentationImpl(INDENTATION)
        PsiElement(NimTokenType.INDENT)('\n  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarSpecImpl(VAR_SPEC)
            NimVarDefinitionImpl(VAR_DEFINITION)
              PsiElement(NimTokenType.IDENTIFIER)('y')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimAddExpressionImpl(ADD_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('order')
                PsiElement(NimTokenType..)('.')
                PsiElement(NimTokenType.IDENTIFIER)('ord')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.-)('-')
              PsiWhiteSpace(' ')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('1')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        NimAddExpressionImpl(ADD_EXPRESSION)
          NimParanExpressionImpl(PARAN_EXPRESSION)
            PsiElement(NimTokenType.()('(')
            NimOp7ExpressionImpl(OP_7_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.xor)('xor')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('y')
            PsiElement(NimTokenType.))(')')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.-)('-')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('y')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      NimDedentationImpl(DEDENTATION)
        <empty list>
  PsiElement(NimTokenType.template)('template')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.IDENTIFIER)('fillImpl')
  PsiElement(NimTokenType.[)('[')
  PsiElement(NimTokenType.IDENTIFIER)('T')
  PsiElement(NimTokenType.])(']')
  PsiElement(NimTokenType.()('(')
  PsiElement(NimTokenType.IDENTIFIER)('a')
  PsiElement(NimTokenType.:)(':')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.var)('var')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.IDENTIFIER)('openArray')
  PsiElement(NimTokenType.[)('[')
  PsiElement(NimTokenType.IDENTIFIER)('T')
  PsiElement(NimTokenType.])(']')
  PsiElement(NimTokenType.,)(',')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.IDENTIFIER)('first')
  PsiElement(NimTokenType.,)(',')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.IDENTIFIER)('last')
  PsiElement(NimTokenType.:)(':')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.IDENTIFIER)('int')
  PsiElement(NimTokenType.,)(',')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.IDENTIFIER)('value')
  PsiElement(NimTokenType.:)(':')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.IDENTIFIER)('T')
  PsiElement(NimTokenType.))(')')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.=)('=')
  PsiElement(NimTokenType.INDENT)('\n  ')
  PsiElement(NimTokenType.var)('var')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.IDENTIFIER)('x')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.=)('=')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.IDENTIFIER)('first')
  PsiWhiteSpace('\n')
  PsiWhiteSpace(' ')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.while)('while')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.IDENTIFIER)('x')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.LT_EQUAL)('<=')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.IDENTIFIER)('last')
  PsiElement(NimTokenType.:)(':')
  PsiElement(NimTokenType.INDENT)('\n    ')
  PsiElement(NimTokenType.IDENTIFIER)('a')
  PsiElement(NimTokenType.[)('[')
  PsiElement(NimTokenType.IDENTIFIER)('x')
  PsiElement(NimTokenType.])(']')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.=)('=')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.IDENTIFIER)('value')
  PsiWhiteSpace('\n')
  PsiWhiteSpace(' ')
  PsiWhiteSpace(' ')
  PsiWhiteSpace(' ')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.IDENTIFIER)('inc')
  PsiElement(NimTokenType.()('(')
  PsiElement(NimTokenType.IDENTIFIER)('x')
  PsiErrorElement:<left hand expr list>, <statement>, NimTokenType.(, NimTokenType.), NimTokenType.*, NimTokenType.+, NimTokenType.,, NimTokenType.-, NimTokenType.., NimTokenType..., NimTokenType./, NimTokenType.<, NimTokenType.=, NimTokenType.>, NimTokenType.DEDENT, NimTokenType.EQUALS, NimTokenType.GT_EQUAL, NimTokenType.LT_EQUAL, NimTokenType.NOT_EQUAL, NimTokenType.[, NimTokenType.and, NimTokenType.div, NimTokenType.in, NimTokenType.is, NimTokenType.isnot, NimTokenType.mod, NimTokenType.not, NimTokenType.notin, NimTokenType.of, NimTokenType.or, NimTokenType.shl, NimTokenType.shr or NimTokenType.xor expected, got ')'
    PsiElement(NimTokenType.))(')')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('fill')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('first')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('last')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('Natural')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('value')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## fills the slice ``a[first..last]`` with ``value``.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<example>)('runnableExamples:')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('var a: array[6, int]')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('a.fill(1, 3, 9)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('doAssert a == [0, 9, 9, 9, 0, 0]')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.IDENTIFIER)('fillImpl')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('first')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('last')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('value')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('fill')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('value')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## fills the container ``a`` with ``value``.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<example>)('runnableExamples:')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('var a: array[6, int]')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('a.fill(9)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('doAssert a == [9, 9, 9, 9, 9, 9]')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.IDENTIFIER)('fillImpl')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('high')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('value')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('reverse')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('first')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('last')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('Natural')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## reverses the slice ``a[first..last]``.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<example>)('runnableExamples:')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('var a = [1, 2, 3, 4, 5, 6]')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('a.reverse(1, 3)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('doAssert a == [1, 4, 3, 2, 5, 6]')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('first')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('y')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('last')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.<)('<')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('y')
        PsiElement(NimTokenType.:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.IDENTIFIER)('swap')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('y')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('dec')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('y')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('inc')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('reverse')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## reverses the contents of the container ``a``.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<example>)('runnableExamples:')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('var a = [1, 2, 3, 4, 5, 6]')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('a.reverse()')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('doAssert  a == [6, 5, 4, 3, 2, 1]')
        PsiElement(NimTokenType.INDENT)('\n  ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('reverse')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('max')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.,)(',')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('high')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('reversed')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.[)('[')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('first')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('Natural')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('last')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('seq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## returns the reverse of the slice ``a[first..last]``.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<example>)('runnableExamples:')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('let')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('a = [1, 2, 3, 4, 5, 6]')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('b = reversed(a, 1, 3)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('doAssert b == @[4, 3, 2]')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.IDENTIFIER)('assert')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('last')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.GT_EQUAL)('>=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('first')
        PsiElement(NimTokenType.-)('-')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('last')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.-)('-')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('first')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('first')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('newSeq')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.+)('+')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.GT_EQUAL)('>=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('dec')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('inc')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('reversed')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('seq')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## returns the reverse of the container ``a``.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<example>)('runnableExamples:')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('let')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('a = [1, 2, 3, 4, 5, 6]')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('b = reversed(a)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('doAssert b == @[6, 5, 4, 3, 2, 1]')
        PsiElement(NimTokenType.INDENT)('\n  ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('reversed')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('high')
        PsiElement(NimTokenType.))(')')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('K')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('key')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('K')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('y')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('K')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.{.)('{.')
        PsiElement(NimTokenType.IDENTIFIER)('closure')
        PsiElement(NimTokenType..})('.}')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## Binary search for ``key`` in ``a``. Returns -1 if not found.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## ``cmp`` is the comparator function to use, the expected return values are')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## the same as that of system.cmp.')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.EQUALS)('==')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.return)('return')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.-)('-')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.let)('let')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType..)('.')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.EQUALS)('==')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.()('(')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('key')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.EQUALS)('==')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.INDENT)('\n      ')
        PsiElement(NimTokenType.return)('return')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0\n    ')
        PsiElement(NimTokenType.else)('else')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n      ')
        PsiElement(NimTokenType.return)('return')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.-)('-')
        PsiElement(NimTokenType.INT_LIT)('1')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.and)('and')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.-)('-')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.EQUALS)('==')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('# when `len` is a power of 2, a faster shr can be used.')
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('step')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('len')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.shr)('shr')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmpRes')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('step')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.>)('>')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n      ')
        PsiElement(NimTokenType.let)('let')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.or)('or')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('step')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmpRes')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('key')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.if)('if')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmpRes')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.EQUALS)('==')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n        ')
        PsiElement(NimTokenType.return)('return')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmpRes')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.<)('<')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n        ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('i\n      ')
        PsiElement(NimTokenType.IDENTIFIER)('step')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('step')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.shr)('shr')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1\n    ')
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('result')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('key')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.NOT_EQUAL)('!=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.-)('-')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.INT_LIT)('1\n  ')
        PsiElement(NimTokenType.else)('else')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmpRes')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.<)('<')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n      ')
        PsiElement(NimTokenType.var)('var')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('mid')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.+)('+')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.shr)('shr')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmpRes')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('mid')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('key')
        PsiElement(NimTokenType.))(')')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmpRes')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.EQUALS)('==')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n        ')
        PsiElement(NimTokenType.return)('return')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('mid')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.if)('if')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmpRes')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.<)('<')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n        ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('mid')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.+)('+')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1\n      ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.else)('else')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n        ')
        PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('mid\n    ')
        PsiElement(NimTokenType.if)('if')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.GT_EQUAL)('>=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.or)('or')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiElement(NimTokenType.])(']')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('key')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.NOT_EQUAL)('!=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.-)('-')
        PsiElement(NimTokenType.INT_LIT)('1')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('key')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.))(')')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## Binary search for ``key`` in ``a``. Returns -1 if not found.')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('key')
        PsiElement(NimTokenType.,)(',')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('smartBinarySearch')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.[)('[')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('key')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.{.)('{.')
        PsiElement(NimTokenType.IDENTIFIER)('deprecated')
        PsiElement(NimTokenType..})('.}')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## **Deprecated since version 0.18.1**; Use ``binarySearch`` instead.')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('key')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.CONST)('const')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.IDENTIFIER)('onlySafeCode')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('true')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('K')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('key')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('K')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.proc)('proc')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('k')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('K')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.{.)('{.')
        PsiElement(NimTokenType.IDENTIFIER)('closure')
        PsiElement(NimTokenType..})('.}')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## returns a position to the first element in the ``a`` that is greater than')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## ``key``, or last if no such element is found.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## In other words if you have a sorted sequence and you call')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## ``insert(thing, elm, lowerBound(thing, elm))``')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## the sequence will still be sorted.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## The first version uses ``cmp`` to compare the elements.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## The expected return values are the same as that of ``system.cmp``.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## The second version uses the default comparison function ``cmp``.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## .. code-block:: nim')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##   var arr = @[1,2,3,5,6,7,8,9]')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##   arr.insert(4, arr.lowerBound(4))')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##   # after running the above arr is `[1,2,3,4,5,6,7,8,9]`')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('low')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('count')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('high')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.-)('-')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('low')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.+)('+')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('step')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('pos')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('count')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.NOT_EQUAL)('!=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('step')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('count')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.shr)('shr')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('pos')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.+)('+')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('step')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('pos')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('key')
        PsiElement(NimTokenType.))(')')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.<)('<')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n      ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('pos')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.+)('+')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('count')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.-)('-')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('step')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.+)('+')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1\n    ')
        PsiElement(NimTokenType.else)('else')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n      ')
        PsiElement(NimTokenType.IDENTIFIER)('count')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('step')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('key')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.,)(',')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('key')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('upperBound')
        PsiElement(NimTokenType.*)('*')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('K')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('key')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('K')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.proc)('proc')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('k')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('K')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.{.)('{.')
        PsiElement(NimTokenType.IDENTIFIER)('closure')
        PsiElement(NimTokenType..})('.}')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## returns a position to the first element in the ``a`` that is not less')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## (i.e. greater or equal to) than ``key``, or last if no such element is found.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## In other words if you have a sorted sequence and you call')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## ``insert(thing, elm, upperBound(thing, elm))``')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## the sequence will still be sorted.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## The first version uses ``cmp`` to compare the elements. The expected')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## return values are the same as that of ``system.cmp``.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## The second version uses the default comparison function ``cmp``.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## .. code-block:: nim')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##   var arr = @[1,2,3,4,6,7,8,9]')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##   arr.insert(5, arr.upperBound(4))')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##   # after running the above arr is `[1,2,3,4,5,6,7,8,9]`')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('low')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('count')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('high')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.-)('-')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('low')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.+)('+')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('step')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('pos')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('count')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.NOT_EQUAL)('!=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.IDENTIFIER)('step')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('count')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.shr)('shr')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('pos')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.+)('+')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('step')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('pos')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('key')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.LT_EQUAL)('<=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n      ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('pos')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.+)('+')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('count')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.-)('-')
        PsiElement(NimTokenType.=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('step')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.+)('+')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1\n    ')
        PsiElement(NimTokenType.else)('else')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n      ')
        PsiElement(NimTokenType.IDENTIFIER)('count')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('step')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('upperBound')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('key')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('T')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('upperBound')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('key')
        PsiElement(NimTokenType.,)(',')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.template)('template')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.`)('`')
        PsiElement(NimTokenType.BACK_TICK_IDENTIFIER)('<-')
        PsiElement(NimTokenType.`)('`')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.()('(')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.when)('when')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('false')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('b\n  ')
        PsiElement(NimTokenType.elif)('elif')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('onlySafeCode')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.IDENTIFIER)('shallowCopy')
        PsiElement(NimTokenType.()('(')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiElement(NimTokenType.))(')\n  ')
        PsiElement(NimTokenType.else)('else')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.IDENTIFIER)('copyMem')
        PsiElement(NimTokenType.()('(')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('addr')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('addr')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.,)(',')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('sizeof')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('merge')
        PsiElement(NimTokenType.[)('[')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('lo')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('m')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('hi')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('y')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('T')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.{.)('{.')
        PsiElement(NimTokenType.IDENTIFIER)('closure')
        PsiElement(NimTokenType..})('.}')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('order')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('SortOrder')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('# optimization: If max(left) <= min(right) there is nothing to do!')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('# 1 2 3 4  ## 5 6 7 8')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('# -> O(n) for sorted arrays.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('# On random data this safes up to 40% of merge calls')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('m')
        PsiElement(NimTokenType.])(']')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('m')
        PsiElement(NimTokenType.+)('+')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.*)('*')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('order')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.LT_EQUAL)('<=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.return)('return')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('j')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('lo')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('# copy a[j..m] into b:')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('assert')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('j')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.LT_EQUAL)('<=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('m')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.when)('when')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('onlySafeCode')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('bb')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('j')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.LT_EQUAL)('<=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('m')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n      ')
        PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('bb')
        PsiElement(NimTokenType.])(']')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.<)('<')
        PsiElement(NimTokenType.-)('-')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('j')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('inc')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('bb')
        PsiElement(NimTokenType.))(')')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('inc')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('j')
        PsiElement(NimTokenType.))(')\n  ')
        PsiElement(NimTokenType.else)('else')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.IDENTIFIER)('copyMem')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('addr')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('addr')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('j')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('sizeof')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('T')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('m')
        PsiElement(NimTokenType.-)('-')
        PsiElement(NimTokenType.IDENTIFIER)('j')
        PsiElement(NimTokenType.+)('+')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.))(')')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('j')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('m')
        PsiElement(NimTokenType.+)('+')
        PsiElement(NimTokenType.INT_LIT)('1\n  ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('k')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('lo')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('# copy proper element back:')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('k')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.<)('<')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('j')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.and)('and')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('j')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.LT_EQUAL)('<=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('hi')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('j')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.*)('*')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('order')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.LT_EQUAL)('<=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n      ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('k')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.<)('<')
        PsiElement(NimTokenType.-)('-')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('b')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('inc')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiElement(NimTokenType.))(')\n    ')
        PsiElement(NimTokenType.else)('else')
        PsiElement(NimTokenType.:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.INDENT)('\n      ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('k')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.<)('<')
        PsiElement(NimTokenType.-)('-')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('j')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('inc')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('j')
        PsiElement(NimTokenType.))(')\n    ')
        PsiElement(NimTokenType.IDENTIFIER)('inc')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('k')
        PsiElement(NimTokenType.))(')')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('# copy rest of b:')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.when)('when')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('onlySafeCode')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('k')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.<)('<')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('j')
        PsiElement(NimTokenType.:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.INDENT)('\n      ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('k')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.<)('<')
        PsiElement(NimTokenType.-)('-')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('inc')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('k')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('inc')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiElement(NimTokenType.))(')\n  ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.else)('else')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('k')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.<)('<')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('j')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('copyMem')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('addr')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('k')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('addr')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('sizeof')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('T')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('j')
        PsiElement(NimTokenType.-)('-')
        PsiElement(NimTokenType.IDENTIFIER)('k')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.func)('func')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('sort')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('y')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.{.)('{.')
        PsiElement(NimTokenType.IDENTIFIER)('closure')
        PsiElement(NimTokenType..})('.}')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('order')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('SortOrder')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('Ascending')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## Default Nim sort (an implementation of merge sort). The sorting')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## is guaranteed to be stable and the worst case is guaranteed to')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## be O(n log n).')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## The current implementation uses an iterative')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## mergesort to achieve this. It uses a temporary sequence of')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## length ``a.len div 2``. If you do not wish to provide your own')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## ``cmp``, you may use ``system.cmp`` or instead call the overloaded')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## version of ``sort``, which uses ``system.cmp``.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## .. code-block:: nim')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##    sort(myIntArray, system.cmp[int])')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##    # do not use cmp[string] here as we want to use the specialized')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##    # overload:')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##    sort(myStrArray, system.cmp)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## You can inline adhoc comparison procs with the `do notation')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## <manual.html#procedures-do-notation>`_. Example:')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## .. code-block:: nim')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##   people.sort do (x, y: Person) -> int:')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##     result = cmp(x.surname, y.surname)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##     if result == 0:')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##       result = cmp(x.name, y.name)')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.var)('var')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('n')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('seq')
        PsiElement(NimTokenType.[)('[')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('newSeq')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('n')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.div)('div')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('2')
        PsiElement(NimTokenType.))(')')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('s')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('s')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.<)('<')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('n')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('m')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('n')
        PsiElement(NimTokenType.-)('-')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiElement(NimTokenType.-)('-')
        PsiElement(NimTokenType.IDENTIFIER)('s')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('m')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.GT_EQUAL)('>=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n      ')
        PsiElement(NimTokenType.IDENTIFIER)('merge')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiElement(NimTokenType.,)(',')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('max')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('m')
        PsiElement(NimTokenType.-)('-')
        PsiElement(NimTokenType.IDENTIFIER)('s')
        PsiElement(NimTokenType.+)('+')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.))(')')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('m')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('m')
        PsiElement(NimTokenType.+)('+')
        PsiElement(NimTokenType.IDENTIFIER)('s')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('order')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('dec')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('m')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('s')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.INT_LIT)('2')
        PsiElement(NimTokenType.))(')\n    ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('s')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('s')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.INT_LIT)('2')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('sort')
        PsiElement(NimTokenType.*)('*')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('order')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('SortOrder')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('Ascending')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('sort')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('system')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.[)('[')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('order')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## Shortcut version of ``sort`` that uses ``system.cmp[T]`` as the comparison function.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('sorted')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.proc)('proc')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('y')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.{.)('{.')
        PsiElement(NimTokenType.IDENTIFIER)('closure')
        PsiElement(NimTokenType..})('.}')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('order')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('SortOrder')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('Ascending')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('seq')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## returns ``a`` sorted by ``cmp`` in the specified ``order``.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<example>)('runnableExamples:')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('let')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('a = [2, 3, 1, 5, 4]')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('b = sorted(a, system.cmp)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('c = sorted(a, system.cmp, Descending)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('doAssert b == @[1, 2, 3, 4, 5]')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<doc_runnable>)('doAssert c == @[5, 4, 3, 2, 1]')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('newSeq')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.for)('for')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.in)('in')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType...)('..')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('high')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiElement(NimTokenType.])(']\n  ')
        PsiElement(NimTokenType.IDENTIFIER)('sort')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('order')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('sorted')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('order')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('SortOrder')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('Ascending')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('seq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## Shortcut version of ``sorted`` that uses ``system.cmp[T]`` as the comparison function.')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.IDENTIFIER)('sorted')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('system')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('order')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.template)('template')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('sortedByIt')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('seq1')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('op')
        PsiElement(NimTokenType.:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('untyped')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('untyped')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## Convenience template around the ``sorted`` proc to reduce typing.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## The template injects the ``it`` variable which you can use directly in an')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## expression. Example:')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## .. code-block:: nim')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##   type Person = tuple[name: string, age: int]')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##   var')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##     p1: Person = (name: "p1", age: 60)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##     p2: Person = (name: "p2", age: 20)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##     p3: Person = (name: "p3", age: 30)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##     p4: Person = (name: "p4", age: 30)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##     people = @[p1,p2,p4,p3]')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##   echo people.sortedByIt(it.name)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## Because the underlying ``cmp()`` is defined for tuples you can do')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## a nested sort like in the following example:')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## .. code-block:: nim')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##   echo people.sortedByIt((it.age, it.name))')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('sorted')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('seq1')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.proc)('proc')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('y')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('type')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('seq1')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('it')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.{.)('{.')
        PsiElement(NimTokenType.IDENTIFIER)('inject')
        PsiElement(NimTokenType..})('.}')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.let)('let')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('a')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('op')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('it')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('y')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.let)('let')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('op')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.))(')\n  ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.func)('func')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('isSorted')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.proc)('proc')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('y')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.{.)('{.')
        PsiElement(NimTokenType.IDENTIFIER)('closure')
        PsiElement(NimTokenType..})('.}')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('order')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('SortOrder')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('Ascending')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('bool')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## checks to see whether ``a`` is already sorted in ``order``')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## using ``cmp`` for the comparison. Parameters identical')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## to ``sort``.')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('true')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.for)('for')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.in)('in')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType...)('..')
        PsiElement(NimTokenType.<)('<')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.-)('-')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiElement(NimTokenType.+)('+')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.*)('*')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('order')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.>)('>')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n      ')
        PsiElement(NimTokenType.return)('return')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('false')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('isSorted')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openarray')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('order')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('SortOrder')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('Ascending')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('bool')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## Shortcut version of ``isSorted`` that uses ``system.cmp[T]`` as the comparison function.')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.IDENTIFIER)('isSorted')
        PsiElement(NimTokenType.()('(')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('system')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('cmp')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('order')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('product')
        PsiElement(NimTokenType.*)('*')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('openArray')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('seq')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('seq')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('seq')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## produces the Cartesian product of the array. Warning: complexity')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiComment(NimTokenType.<single_line_comment>)('## may explode.')
        PsiElement(NimTokenType.INDENT)('\n  ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('newSeq')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('seq')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.))(')')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.EQUALS)('==')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.return)('return\n  ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.EQUALS)('==')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.@)('@')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.return)('return\n  ')
        PsiElement(NimTokenType.var)('var')
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.IDENTIFIER)('indexes')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('newSeq')
        PsiElement(NimTokenType.[)('[')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('initial')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('newSeq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('index')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0\n  ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('next')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('newSeq')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.()('(')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('next')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('setLen')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.for)('for')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.in)('in')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType...)('..')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiElement(NimTokenType.-)('-')
        PsiElement(NimTokenType.INT_LIT)('1')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiElement(NimTokenType.])(']')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.EQUALS)('==')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.return)('return')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('initial')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.-)('-')
        PsiElement(NimTokenType.INT_LIT)('1\n  ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('indexes')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('initial')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('true')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n    ')
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('indexes')
        PsiElement(NimTokenType.[)('[')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('index')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.EQUALS)('==')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.-)('-')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n      ')
        PsiElement(NimTokenType.IDENTIFIER)('indexes')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('index')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('initial')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('index')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('index')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.+)('+')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('index')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.EQUALS)('==')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('x')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.return)('return')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('indexes')
        PsiElement(NimTokenType.[)('[')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.IDENTIFIER)('index')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.-)('-')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1\n    ')
        PsiElement(NimTokenType.for)('for')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('ni')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.in)('in')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('indexes')
        PsiElement(NimTokenType.:)(':')
        PsiElement(NimTokenType.INDENT)('\n      ')
        PsiElement(NimTokenType.IDENTIFIER)('next')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('ni')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('ni')
        PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiElement(NimTokenType.])(']\n    ')
        PsiElement(NimTokenType.var)('var')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('res')
        PsiElement(NimTokenType.:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('seq')
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('shallowCopy')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('res')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('next')
        PsiElement(NimTokenType.))(')')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiElement(NimTokenType..)('.')
        PsiElement(NimTokenType.IDENTIFIER)('add')
        PsiElement(NimTokenType.()('(')
        PsiElement(NimTokenType.IDENTIFIER)('res')
        PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('index')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('0')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('indexes')
      PsiElement(DUMMY_BLOCK)
        PsiElement(NimTokenType.[)('[')
        PsiElement(NimTokenType.IDENTIFIER)('index')
        PsiElement(NimTokenType.])(']')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.-)('-')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('nextPermutation')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DUMMY_BLOCK)
      PsiElement(NimTokenType.*)('*')
      PsiElement(NimTokenType.[)('[')
      PsiElement(NimTokenType.IDENTIFIER)('T')
      PsiElement(NimTokenType.])(']')
      PsiElement(NimTokenType.()('(')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType.:)(':')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.var)('var')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('openarray')
      PsiElement(NimTokenType.[)('[')
    PsiElement(DUMMY_BLOCK)
      PsiElement(NimTokenType.IDENTIFIER)('T')
      PsiElement(NimTokenType.])(']')
      PsiElement(NimTokenType.))(')')
      PsiElement(NimTokenType.:)(':')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('bool')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.{.)('{.')
      PsiElement(NimTokenType.IDENTIFIER)('discardable')
      PsiElement(NimTokenType..})('.}')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('## calculates the next lexicographic permutation, directly modifying ``x``.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('## The result is whether a permutation happened, otherwise we have reached')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('## the last-ordered permutation.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('## .. code-block:: nim')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('##     var v = @[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('##     v.nextPermutation()')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('##     echo v # @[0, 1, 2, 3, 4, 5, 6, 7, 9, 8]')
      PsiElement(NimTokenType.INDENT)('\n  ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(NimTokenType.if)('if')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType..)('.')
      PsiElement(NimTokenType.IDENTIFIER)('len')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.<)('<')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.INT_LIT)('2')
      PsiElement(NimTokenType.:)(':')
      PsiElement(NimTokenType.INDENT)('\n    ')
      PsiElement(NimTokenType.return)('return')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('false')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.var)('var')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType..)('.')
      PsiElement(NimTokenType.IDENTIFIER)('high')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.while)('while')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.>)('>')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.INT_LIT)('0')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.and)('and')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType.[)('[')
      PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiElement(NimTokenType.-)('-')
      PsiElement(NimTokenType.INT_LIT)('1')
      PsiElement(NimTokenType.])(']')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.GT_EQUAL)('>=')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
    PsiElement(DUMMY_BLOCK)
      PsiElement(NimTokenType.[)('[')
      PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiElement(NimTokenType.])(']')
      PsiElement(NimTokenType.:)(':')
      PsiElement(NimTokenType.INDENT)('\n    ')
      PsiElement(NimTokenType.IDENTIFIER)('dec')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.if)('if')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('i')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.EQUALS)('==')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.INT_LIT)('0')
      PsiElement(NimTokenType.:)(':')
      PsiElement(NimTokenType.INDENT)('\n    ')
      PsiElement(NimTokenType.return)('return')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('false')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.var)('var')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('j')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType..)('.')
      PsiElement(NimTokenType.IDENTIFIER)('high')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.while)('while')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('j')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.GT_EQUAL)('>=')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.and)('and')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType.[)('[')
    PsiElement(DUMMY_BLOCK)
      PsiElement(NimTokenType.IDENTIFIER)('j')
      PsiElement(NimTokenType.])(']')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.LT_EQUAL)('<=')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType.[)('[')
      PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiElement(NimTokenType.-)('-')
      PsiElement(NimTokenType.INT_LIT)('1')
      PsiElement(NimTokenType.])(']')
      PsiElement(NimTokenType.:)(':')
    PsiElement(DUMMY_BLOCK)
      PsiElement(NimTokenType.INDENT)('\n    ')
      PsiElement(NimTokenType.IDENTIFIER)('dec')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('j')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('swap')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType.[)('[')
      PsiElement(NimTokenType.IDENTIFIER)('j')
      PsiElement(NimTokenType.])(']')
      PsiElement(NimTokenType.,)(',')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType.[)('[')
      PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiElement(NimTokenType.-)('-')
      PsiElement(NimTokenType.INT_LIT)('1')
      PsiElement(NimTokenType.])(']')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType..)('.')
      PsiElement(NimTokenType.IDENTIFIER)('reverse')
      PsiElement(NimTokenType.()('(')
    PsiElement(DUMMY_BLOCK)
      PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiElement(NimTokenType.,)(',')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType..)('.')
      PsiElement(NimTokenType.IDENTIFIER)('high')
      PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('result')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('true')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
    PsiElement(DUMMY_BLOCK)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('prevPermutation')
      PsiElement(NimTokenType.*)('*')
      PsiElement(NimTokenType.[)('[')
      PsiElement(NimTokenType.IDENTIFIER)('T')
      PsiElement(NimTokenType.])(']')
      PsiElement(NimTokenType.()('(')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType.:)(':')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.var)('var')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('openarray')
      PsiElement(NimTokenType.[)('[')
      PsiElement(NimTokenType.IDENTIFIER)('T')
      PsiElement(NimTokenType.])(']')
      PsiElement(NimTokenType.))(')')
      PsiElement(NimTokenType.:)(':')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('bool')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.{.)('{.')
      PsiElement(NimTokenType.IDENTIFIER)('discardable')
      PsiElement(NimTokenType..})('.}')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('## calculates the previous lexicographic permutation, directly modifying')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('## ``x``. The result is whether a permutation happened, otherwise we have')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('## reached the first-ordered permutation.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('## .. code-block:: nim')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('##     var v = @[0, 1, 2, 3, 4, 5, 6, 7, 9, 8]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('##     v.prevPermutation()')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('##     echo v # @[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]')
      PsiElement(NimTokenType.INDENT)('\n  ')
      PsiElement(NimTokenType.if)('if')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType..)('.')
      PsiElement(NimTokenType.IDENTIFIER)('len')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.<)('<')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.INT_LIT)('2')
      PsiElement(NimTokenType.:)(':')
      PsiElement(NimTokenType.INDENT)('\n    ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(NimTokenType.return)('return')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('false')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.var)('var')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType..)('.')
      PsiElement(NimTokenType.IDENTIFIER)('high')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.while)('while')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.>)('>')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.INT_LIT)('0')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.and)('and')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType.[)('[')
      PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiElement(NimTokenType.-)('-')
      PsiElement(NimTokenType.INT_LIT)('1')
      PsiElement(NimTokenType.])(']')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.LT_EQUAL)('<=')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType.[)('[')
      PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiElement(NimTokenType.])(']')
      PsiElement(NimTokenType.:)(':')
      PsiElement(NimTokenType.INDENT)('\n    ')
      PsiElement(NimTokenType.IDENTIFIER)('dec')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(NimTokenType.if)('if')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.EQUALS)('==')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.INT_LIT)('0')
      PsiElement(NimTokenType.:)(':')
      PsiElement(NimTokenType.INDENT)('\n    ')
      PsiElement(NimTokenType.return)('return')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('false')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
    PsiElement(DUMMY_BLOCK)
      PsiElement(NimTokenType..)('.')
      PsiElement(NimTokenType.IDENTIFIER)('reverse')
      PsiElement(NimTokenType.()('(')
      PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiElement(NimTokenType.,)(',')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType..)('.')
      PsiElement(NimTokenType.IDENTIFIER)('high')
      PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.var)('var')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('j')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType..)('.')
      PsiElement(NimTokenType.IDENTIFIER)('high')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.while)('while')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('j')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.GT_EQUAL)('>=')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.and)('and')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType.[)('[')
      PsiElement(NimTokenType.IDENTIFIER)('j')
      PsiElement(NimTokenType.-)('-')
      PsiElement(NimTokenType.INT_LIT)('1')
      PsiElement(NimTokenType.])(']')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.<)('<')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType.[)('[')
      PsiElement(NimTokenType.IDENTIFIER)('i')
    PsiElement(DUMMY_BLOCK)
      PsiElement(NimTokenType.-)('-')
      PsiElement(NimTokenType.INT_LIT)('1')
      PsiElement(NimTokenType.])(']')
      PsiElement(NimTokenType.:)(':')
      PsiElement(NimTokenType.INDENT)('\n    ')
      PsiElement(NimTokenType.IDENTIFIER)('dec')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('j')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('swap')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
    PsiElement(DUMMY_BLOCK)
      PsiElement(NimTokenType.[)('[')
      PsiElement(NimTokenType.IDENTIFIER)('i')
      PsiElement(NimTokenType.-)('-')
      PsiElement(NimTokenType.INT_LIT)('1')
      PsiElement(NimTokenType.])(']')
      PsiElement(NimTokenType.,)(',')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('x')
      PsiElement(NimTokenType.[)('[')
      PsiElement(NimTokenType.IDENTIFIER)('j')
      PsiElement(NimTokenType.])(']')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('result')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('true')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiElement(NimTokenType.when)('when')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('isMainModule')
      PsiElement(NimTokenType.:)(':')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiComment(NimTokenType.<single_line_comment>)('# Tests for lowerBound')
      PsiElement(NimTokenType.INDENT)('\n  ')
      PsiElement(NimTokenType.var)('var')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('arr')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.@)('@')
      PsiElement(NimTokenType.[)('[')
      PsiElement(NimTokenType.INT_LIT)('1')
      PsiElement(NimTokenType.,)(',')
      PsiElement(NimTokenType.INT_LIT)('2')
      PsiElement(NimTokenType.,)(',')
      PsiElement(NimTokenType.INT_LIT)('3')
      PsiElement(NimTokenType.,)(',')
      PsiElement(NimTokenType.INT_LIT)('5')
    PsiElement(DUMMY_BLOCK)
      PsiElement(NimTokenType.,)(',')
      PsiElement(NimTokenType.INT_LIT)('6')
      PsiElement(NimTokenType.,)(',')
      PsiElement(NimTokenType.INT_LIT)('7')
      PsiElement(NimTokenType.,)(',')
      PsiElement(NimTokenType.INT_LIT)('8')
      PsiElement(NimTokenType.,)(',')
      PsiElement(NimTokenType.INT_LIT)('9')
      PsiElement(NimTokenType.])(']')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('assert')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('arr')
      PsiElement(NimTokenType..)('.')
      PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
      PsiElement(NimTokenType.()('(')
      PsiElement(NimTokenType.INT_LIT)('0')
      PsiElement(NimTokenType.))(')')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.EQUALS)('==')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.INT_LIT)('0')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('assert')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('arr')
    PsiElement(DUMMY_BLOCK)
      PsiElement(NimTokenType..)('.')
      PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
      PsiElement(NimTokenType.()('(')
      PsiElement(NimTokenType.INT_LIT)('4')
      PsiElement(NimTokenType.))(')')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.EQUALS)('==')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.INT_LIT)('3')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('assert')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('arr')
      PsiElement(NimTokenType..)('.')
    PsiElement(DUMMY_BLOCK)
      PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
      PsiElement(NimTokenType.()('(')
      PsiElement(NimTokenType.INT_LIT)('5')
      PsiElement(NimTokenType.))(')')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.EQUALS)('==')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.INT_LIT)('3')
      PsiWhiteSpace('\n')
      PsiWhiteSpace(' ')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('assert')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('arr')
      PsiElement(NimTokenType..)('.')
      PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
  PsiElement(DUMMY_BLOCK)
    PsiElement(NimTokenType.()('(')
    PsiElement(NimTokenType.INT_LIT)('10')
    PsiElement(NimTokenType.))(')')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.EQUALS)('==')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.INT_LIT)('8')
    PsiWhiteSpace('\n')
    PsiWhiteSpace(' ')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.IDENTIFIER)('arr')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.=)('=')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.@)('@')
    PsiElement(NimTokenType.[)('[')
    PsiElement(NimTokenType.INT_LIT)('1')
  PsiElement(DUMMY_BLOCK)
    PsiElement(NimTokenType.,)(',')
    PsiElement(NimTokenType.INT_LIT)('5')
    PsiElement(NimTokenType.,)(',')
    PsiElement(NimTokenType.INT_LIT)('10')
    PsiElement(NimTokenType.])(']')
    PsiWhiteSpace('\n')
    PsiWhiteSpace(' ')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.IDENTIFIER)('assert')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.IDENTIFIER)('arr')
    PsiElement(NimTokenType..)('.')
    PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
    PsiElement(NimTokenType.()('(')
  PsiElement(DUMMY_BLOCK)
    PsiElement(NimTokenType.INT_LIT)('4')
    PsiElement(NimTokenType.))(')')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.EQUALS)('==')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.INT_LIT)('1')
    PsiWhiteSpace('\n')
    PsiWhiteSpace(' ')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.IDENTIFIER)('assert')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.IDENTIFIER)('arr')
    PsiElement(NimTokenType..)('.')
    PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
    PsiElement(NimTokenType.()('(')
    PsiElement(NimTokenType.INT_LIT)('5')
  PsiElement(DUMMY_BLOCK)
    PsiElement(NimTokenType.))(')')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.EQUALS)('==')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.INT_LIT)('1')
    PsiWhiteSpace('\n')
    PsiWhiteSpace(' ')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.IDENTIFIER)('assert')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.IDENTIFIER)('arr')
    PsiElement(NimTokenType..)('.')
    PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
    PsiElement(NimTokenType.()('(')
    PsiElement(NimTokenType.INT_LIT)('6')
    PsiElement(NimTokenType.))(')')
  PsiElement(DUMMY_BLOCK)
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.EQUALS)('==')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.INT_LIT)('2')
    PsiWhiteSpace('\n')
    PsiWhiteSpace(' ')
    PsiWhiteSpace(' ')
    PsiComment(NimTokenType.<single_line_comment>)('# Tests for isSorted')
    PsiWhiteSpace('\n')
    PsiWhiteSpace(' ')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.var)('var')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.IDENTIFIER)('srt1')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.=)('=')
    PsiWhiteSpace(' ')
    PsiElement(NimTokenType.[)('[')
    PsiElement(NimTokenType.INT_LIT)('1')
    PsiElement(NimTokenType.,)(',')
    PsiElement(NimTokenType.INT_LIT)('2')
    PsiElement(NimTokenType.,)(',')
  PsiElement(DUMMY_BLOCK)
    PsiElement(NimTokenType.INT_LIT)('3')
    PsiElement(NimTokenType.,)(',')
    PsiElement(NimTokenType.INT_LIT)('4')
    PsiElement(NimTokenType.,)(',')
    PsiElement(NimTokenType.INT_LIT)('4')
    PsiElement(NimTokenType.,)(',')
    PsiElement(NimTokenType.INT_LIT)('4')
    PsiElement(NimTokenType.,)(',')
    PsiElement(NimTokenType.INT_LIT)('4')
    PsiElement(NimTokenType.,)(',')
  PsiElement(NimTokenType.INT_LIT)('5')
  PsiElement(NimTokenType.])(']')
  PsiWhiteSpace('\n')
  PsiWhiteSpace(' ')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.var)('var')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.IDENTIFIER)('srt2')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.=)('=')
  PsiWhiteSpace(' ')
  PsiElement(NimTokenType.[)('[')
  PsiElement(BAD_CHARACTER)('"iello","hello"]\n  var srt3 = [1.0,1.0,1.0]\n  var srt4: seq[int]\n  assert srt1.isSorted(cmp) == true\n  assert srt2.isSorted(cmp) == false\n  assert srt3.isSorted(cmp) == true\n  assert srt4.isSorted(cmp) == true\n  var srtseq = newSeq[int]()\n  assert srtseq.isSorted(cmp) == true\n  # Tests for reversed\n  var arr1 = @[0,1,2,3,4]\n  assert arr1.reversed() == @[4,3,2,1,0]\n  for i in 0 .. high(arr1):\n    assert arr1.reversed(0, i) == arr1.reversed()[high(arr1) - i .. high(arr1)]\n    assert arr1.reversed(i, high(arr1)) == arr1.reversed()[0 .. high(arr1) - i]\n\n\nproc rotateInternal[T](arg: var openarray[T]; first, middle, last: int): int =\n  ## A port of std::rotate from c++. Ported from `this reference <http://www.cplusplus.com/reference/algorithm/rotate/>`_.\n  result = first + last - middle\n\n  if first == middle or middle == last:\n    return\n\n  assert first < middle\n  assert middle < last\n\n  # m prefix for mutable\n  var\n    mFirst = first\n    mMiddle = middle\n    next = middle\n\n  swap(arg[mFirst], arg[next])\n  mFirst += 1\n  next += 1\n  if mFirst == mMiddle:\n    mMiddle = next\n\n  while next != last:\n    swap(arg[mFirst], arg[next])\n    mFirst += 1\n    next += 1\n    if mFirst == mMiddle:\n      mMiddle = next\n\n  next = mMiddle\n  while next != last:\n    swap(arg[mFirst], arg[next])\n    mFirst += 1\n    next += 1\n    if mFirst == mMiddle:\n      mMiddle = next\n    elif next == last:\n      next = mMiddle\n\nproc rotatedInternal[T](arg: openarray[T]; first, middle, last: int): seq[T] =\n  result = newSeq[T](arg.len)\n  for i in 0 ..< first:\n    result[i] = arg[i]\n  let N = last - middle\n  let M = middle - first\n  for i in 0 ..< N:\n    result[first+i] = arg[middle+i]\n  for i in 0 ..< M:\n    result[first+N+i] = arg[first+i]\n  for i in last ..< arg.len:\n    result[i] = arg[i]\n\nproc rotateLeft*[T](arg: var openarray[T]; slice: HSlice[int, int]; dist: int): int {.discardable.} =\n  ## performs a left rotation on a range of elements. If you want to rotate\n  ## right, use a negative ``dist``. Specifically, ``rotateLeft`` rotates\n  ## the elements at ``slice`` by ``dist`` positions.\n  ##\n  ## | The element at index ``slice.a + dist`` will be at index ``slice.a``.\n  ## | The element at index ``slice.b`` will be at ``slice.a + dist -1``.\n  ## | The element at index ``slice.a`` will be at ``slice.b + 1 - dist``.\n  ## | The element at index ``slice.a + dist - 1`` will be at ``slice.b``.\n  ##\n  ## Elements outside of ``slice`` will be left unchanged.\n  ## The time complexity is linear to ``slice.b - slice.a + 1``.\n  ##\n  ## ``slice``\n  ##   The indices of the element range that should be rotated.\n  ##\n  ## ``dist``\n  ##   The distance in amount of elements that the data should be rotated.\n  ##   Can be negative, can be any number.\n  ##\n  ## .. code-block:: nim\n  ##\n  ##   var list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n  ##   list.rotateLeft(1 .. 8, 3)\n  ##   doAssert list == [0, 4, 5, 6, 7, 8, 1, 2, 3, 9, 10]\n  let sliceLen = slice.b + 1 - slice.a\n  let distLeft = ((dist mod sliceLen) + sliceLen) mod sliceLen\n  arg.rotateInternal(slice.a, slice.a+distLeft, slice.b + 1)\n\nproc rotateLeft*[T](arg: var openarray[T]; dist: int): int {.discardable.} =\n  ## Default arguments for slice, so that this procedure operates on the entire\n  ## ``arg``, and not just on a part of it.\n  runnableExamples:\n      var a = [1, 2, 3, 4, 5]\n      a.rotateLeft(2)\n      doAssert a == [3, 4, 5, 1, 2]\n  let arglen = arg.len\n  let distLeft = ((dist mod arglen) + arglen) mod arglen\n  arg.rotateInternal(0, distLeft, arglen)\n\nproc rotatedLeft*[T](arg: openarray[T]; slice: HSlice[int, int], dist: int): seq[T] =\n  ## Same as ``rotateLeft``, just with the difference that it does\n  ## not modify the argument. It creates a new ``seq`` instead.\n  let sliceLen = slice.b + 1 - slice.a\n  let distLeft = ((dist mod sliceLen) + sliceLen) mod sliceLen\n  arg.rotatedInternal(slice.a, slice.a+distLeft, slice.b+1)\n\nproc rotatedLeft*[T](arg: openarray[T]; dist: int): seq[T] =\n  ## Same as ``rotateLeft``, just with the difference that it does\n  ## not modify the argument. It creates a new ``seq`` instead.\n  let arglen = arg.len\n  let distLeft = ((dist mod arglen) + arglen) mod arglen\n  arg.rotatedInternal(0, distLeft, arg.len)\n\nwhen isMainModule:\n  var list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n  let list2 = list.rotatedLeft(1 ..< 9, 3)\n  let expected = [0, 4, 5, 6, 7, 8, 1, 2, 3, 9, 10]\n\n  doAssert list.rotateLeft(1 ..< 9, 3) == 6\n  doAssert list == expected\n  doAssert list2 == @expected\n\n  var s0,s1,s2,s3,s4,s5 = "xxxabcdefgxxx"\n\n  doAssert s0.rotateLeft(3 ..< 10, 3) == 7\n  doAssert s0 == "xxxdefgabcxxx"\n  doAssert s1.rotateLeft(3 ..< 10, 2) == 8\n  doAssert s1 == "xxxcdefgabxxx"\n  doAssert s2.rotateLeft(3 ..< 10, 4) == 6\n  doAssert s2 == "xxxefgabcdxxx"\n  doAssert s3.rotateLeft(3 ..< 10, -3) == 6\n  doAssert s3 == "xxxefgabcdxxx"\n  doAssert s4.rotateLeft(3 ..< 10, -10) == 6\n  doAssert s4 == "xxxefgabcdxxx"\n  doAssert s5.rotateLeft(3 ..< 10, 11) == 6\n  doAssert s5 == "xxxefgabcdxxx"\n\n  block product:\n    doAssert product(newSeq[seq[int]]()) == newSeq[seq[int]](), "empty input"\n    doAssert product(@[newSeq[int](), @[], @[]]) == newSeq[seq[int]](), "bit more empty input"\n    doAssert product(@[@[1,2]]) == @[@[1,2]], "a simple case of one element"\n    doAssert product(@[@[1,2], @[3,4]]) == @[@[2,4],@[1,4],@[2,3],@[1,3]], "two elements"\n    doAssert product(@[@[1,2], @[3,4], @[5,6]]) == @[@[2,4,6],@[1,4,6],@[2,3,6],@[1,3,6], @[2,4,5],@[1,4,5],@[2,3,5],@[1,3,5]], "three elements"\n    doAssert product(@[@[1,2], @[]]) == newSeq[seq[int]](), "two elements, but one empty"\n\n  block lowerBound:\n    doAssert lowerBound([1,2,4], 3, system.cmp[int]) == 2\n    doAssert lowerBound([1,2,2,3], 4, system.cmp[int]) == 4\n    doAssert lowerBound([1,2,3,10], 11) == 4\n\n  block upperBound:\n    doAssert upperBound([1,2,4], 3, system.cmp[int]) == 2\n    doAssert upperBound([1,2,2,3], 3, system.cmp[int]) == 4\n    doAssert upperBound([1,2,3,5], 3) == 3\n\n  block fillEmptySeq:\n    var s = newSeq[int]()\n    s.fill(0)\n\n  block testBinarySearch:\n    var noData: seq[int]\n    doAssert binarySearch(noData, 7) == -1\n    let oneData = @[1]\n    doAssert binarySearch(oneData, 1) == 0\n    doAssert binarySearch(onedata, 7) == -1\n    let someData = @[1,3,4,7]\n    doAssert binarySearch(someData, 1) == 0\n    doAssert binarySearch(somedata, 7) == 3\n    doAssert binarySearch(someData, -1) == -1\n    doAssert binarySearch(someData, 5) == -1\n    doAssert binarySearch(someData, 13) == -1\n    let moreData = @[1,3,5,7,4711]\n    doAssert binarySearch(moreData, -1) == -1\n    doAssert binarySearch(moreData,  1) == 0\n    doAssert binarySearch(moreData,  5) == 2\n    doAssert binarySearch(moreData,  6) == -1\n    doAssert binarySearch(moreData,  4711) == 4\n    doAssert binarySearch(moreData,  4712) == -1')