Nim file
  PsiComment(NimTokenType.<single_line_comment>)('#')
  PsiWhiteSpace('\n')
  PsiComment(NimTokenType.<single_line_comment>)('#')
  PsiWhiteSpace('\n')
  PsiComment(NimTokenType.<single_line_comment>)('#            Nim's Runtime Library')
  PsiWhiteSpace('\n')
  PsiComment(NimTokenType.<single_line_comment>)('#        (c) Copyright 2015 Andreas Rumpf')
  PsiWhiteSpace('\n')
  PsiComment(NimTokenType.<single_line_comment>)('#')
  PsiWhiteSpace('\n')
  PsiComment(NimTokenType.<single_line_comment>)('#    See the file "copying.txt", included in this')
  PsiWhiteSpace('\n')
  PsiComment(NimTokenType.<single_line_comment>)('#    distribution, for details about the copyright.')
  PsiWhiteSpace('\n')
  PsiComment(NimTokenType.<single_line_comment>)('#')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  PsiComment(NimTokenType.<single_line_comment>)('## This module implements some common generic algorithms.')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimTypeBlockImpl(TYPE_BLOCK)
      PsiElement(NimTokenType.type)('type')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimTypeDeclarationImpl(TYPE_DECLARATION)
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('SortOrder')
        PsiElement(NimTokenType.*)('*')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        NimEnumDeclarationImpl(ENUM_DECLARATION)
          PsiElement(NimTokenType.enum)('enum')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('Descending')
          PsiElement(NimTokenType.,)(',')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('Ascending')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.`)('`')
      PsiElement(NimTokenType.BACK_TICK_IDENTIFIER)('*')
      PsiElement(NimTokenType.`)('`')
      PsiElement(NimTokenType.*)('*')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('x')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('order')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('SortOrder')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 333
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
      PsiWhiteSpace(' ')
      NimPragmaImpl(PRAGMA)
        PsiElement(NimTokenType.{.)('{.')
        PsiElement(NimTokenType.IDENTIFIER)('inline')
        PsiElement(NimTokenType..})('.}')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## flips ``x`` if ``order == Descending``.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## If ``order == Ascending`` then ``x`` is returned.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## ``x`` is supposed to be the result of a comparator, i.e.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## | ``< 0`` for *less than*,')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## | ``== 0`` for *equal*,')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## | ``> 0`` for *greater than*.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('y')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimAddExpressionImpl(ADD_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('order')
                PsiElement(NimTokenType..)('.')
                PsiElement(NimTokenType.IDENTIFIER)('ord')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.-)('-')
              PsiWhiteSpace(' ')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('1')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        NimAddExpressionImpl(ADD_EXPRESSION)
          NimParanExpressionImpl(PARAN_EXPRESSION)
            PsiElement(NimTokenType.()('(')
            NimOp7ExpressionImpl(OP_7_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.xor)('xor')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('y')
            PsiElement(NimTokenType.))(')')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.-)('-')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('y')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimTemplateMethodImpl(TEMPLATE_METHOD)
      PsiElement(NimTokenType.template)('template')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('fillImpl')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('first')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('last')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('value')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 734
          <empty list>
        PsiElement(NimTokenType.))(')')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('first')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimWhileStatementImpl(WHILE_STATEMENT)
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('x')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.LT_EQUAL)('<=')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('last')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('a')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiElement(NimTokenType.])(']')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.=)('=')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('value')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('inc')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('x')
                PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('fill')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('first')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('last')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('Natural')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('value')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 867
          <empty list>
        PsiElement(NimTokenType.))(')')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## fills the slice ``a[first..last]`` with ``value``.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<example>)('runnableExamples:')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('var a: array[6, int]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('a.fill(1, 3, 9)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('doAssert a == [0, 9, 9, 9, 0, 0]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimCallExpressionImpl(CALL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('fillImpl')
            NimArgumentListImpl(ARGUMENT_LIST)
              PsiElement(NimTokenType.()('(')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('a')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('first')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('last')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('value')
              PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('fill')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('value')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 1113
          <empty list>
        PsiElement(NimTokenType.))(')')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## fills the container ``a`` with ``value``.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<example>)('runnableExamples:')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('var a: array[6, int]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('a.fill(9)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('doAssert a == [9, 9, 9, 9, 9, 9]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimCallExpressionImpl(CALL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('fillImpl')
            NimArgumentListImpl(ARGUMENT_LIST)
              PsiElement(NimTokenType.()('(')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('a')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('0')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('a')
                PsiElement(NimTokenType..)('.')
                PsiElement(NimTokenType.IDENTIFIER)('high')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('value')
              PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('reverse')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('first')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('last')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('Natural')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 1358
          <empty list>
        PsiElement(NimTokenType.))(')')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## reverses the slice ``a[first..last]``.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<example>)('runnableExamples:')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('var a = [1, 2, 3, 4, 5, 6]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('a.reverse(1, 3)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('doAssert a == [1, 4, 3, 2, 5, 6]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('first')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('y')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('last')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimWhileStatementImpl(WHILE_STATEMENT)
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('x')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.<)('<')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('y')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('swap')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('a')
                  PsiElement(NimTokenType.[)('[')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('x')
                  PsiElement(NimTokenType.])(']')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('a')
                  PsiElement(NimTokenType.[)('[')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('y')
                  PsiElement(NimTokenType.])(']')
                PsiElement(NimTokenType.))(')')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimCallExpressionImpl(CALL_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('dec')
                NimArgumentListImpl(ARGUMENT_LIST)
                  PsiElement(NimTokenType.()('(')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('y')
                  PsiElement(NimTokenType.))(')')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('inc')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('x')
                    PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('reverse')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 1646
          <empty list>
        PsiElement(NimTokenType.))(')')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## reverses the contents of the container ``a``.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<example>)('runnableExamples:')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('var a = [1, 2, 3, 4, 5, 6]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('a.reverse()')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('doAssert  a == [6, 5, 4, 3, 2, 1]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimCallExpressionImpl(CALL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('reverse')
            NimArgumentListImpl(ARGUMENT_LIST)
              PsiElement(NimTokenType.()('(')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('a')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('0')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimCallExpressionImpl(CALL_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('max')
                NimArgumentListImpl(ARGUMENT_LIST)
                  PsiElement(NimTokenType.()('(')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('0')
                  PsiElement(NimTokenType.,)(',')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('a')
                    PsiElement(NimTokenType..)('.')
                    PsiElement(NimTokenType.IDENTIFIER)('high')
                  PsiElement(NimTokenType.))(')')
              PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('reversed')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('first')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('Natural')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('last')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 1905
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('seq')
        NimGenericsImpl(GENERICS)
          PsiElement(NimTokenType.[)('[')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('T')
          PsiElement(NimTokenType.])(']')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## returns the reverse of the slice ``a[first..last]``.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<example>)('runnableExamples:')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('let')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('        ')
      PsiComment(NimTokenType.<doc_runnable>)('a = [1, 2, 3, 4, 5, 6]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('        ')
      PsiComment(NimTokenType.<doc_runnable>)('b = reversed(a, 1, 3)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('doAssert b == @[4, 3, 2]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('assert')
        PsiWhiteSpace(' ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('last')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.GT_EQUAL)('>=')
              PsiWhiteSpace(' ')
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('first')
                PsiElement(NimTokenType.-)('-')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('1')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimAddExpressionImpl(ADD_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('last')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.-)('-')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('first')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('first')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('int')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('result')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('newSeq')
                PsiElement(NimTokenType.[)('[')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('T')
                PsiElement(NimTokenType.])(']')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                NimAddExpressionImpl(ADD_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('i')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.+)('+')
                  PsiWhiteSpace(' ')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('1')
                PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimWhileStatementImpl(WHILE_STATEMENT)
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('i')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.GT_EQUAL)('>=')
          PsiWhiteSpace(' ')
          NimLiteralImpl(LITERAL)
            NimIntegerImpl(INTEGER)
              NimSignedIntegerImpl(SIGNED_INTEGER)
                PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('result')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('i')
              PsiElement(NimTokenType.])(']')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.=)('=')
          PsiWhiteSpace(' ')
          NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('a')
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('x')
            PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('dec')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('i')
                PsiElement(NimTokenType.))(')')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimCallExpressionImpl(CALL_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('inc')
                NimArgumentListImpl(ARGUMENT_LIST)
                  PsiElement(NimTokenType.()('(')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('x')
                  PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('reversed')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 2286
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('seq')
        NimGenericsImpl(GENERICS)
          PsiElement(NimTokenType.[)('[')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('T')
          PsiElement(NimTokenType.])(']')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## returns the reverse of the container ``a``.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<example>)('runnableExamples:')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('let')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('        ')
      PsiComment(NimTokenType.<doc_runnable>)('a = [1, 2, 3, 4, 5, 6]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('        ')
      PsiComment(NimTokenType.<doc_runnable>)('b = reversed(a)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('doAssert b == @[6, 5, 4, 3, 2, 1]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimCallExpressionImpl(CALL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('reversed')
            NimArgumentListImpl(ARGUMENT_LIST)
              PsiElement(NimTokenType.()('(')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('a')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('0')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('a')
                PsiElement(NimTokenType..)('.')
                PsiElement(NimTokenType.IDENTIFIER)('high')
              PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        NimGenericsAdditionalImpl(GENERICS_ADDITIONAL)
          PsiElement(NimTokenType.,)(',')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('K')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('key')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('K')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('              ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('cmp')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          NimClosureImpl(CLOSURE)
            PsiElement(NimTokenType.proc)('proc')
            PsiWhiteSpace(' ')
            NimParametersImpl(PARAMETERS)
              PsiElement(NimTokenType.()('(')
              NimParameterImpl(PARAMETER)
                NimParameterNamesImpl(PARAMETER_NAMES)
                  NimCommasImpl(COMMAS)
                    PsiElement(NimTokenType.IDENTIFIER)('x')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.IDENTIFIER)('T')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimParameterImpl(PARAMETER)
                NimParameterNamesImpl(PARAMETER_NAMES)
                  NimCommasImpl(COMMAS)
                    PsiElement(NimTokenType.IDENTIFIER)('y')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.IDENTIFIER)('K')
              PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 2583
                <empty list>
              PsiElement(NimTokenType.))(')')
            NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
              PsiElement(NimTokenType.:)(':')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('int')
            PsiWhiteSpace(' ')
            NimPragmaImpl(PRAGMA)
              PsiElement(NimTokenType.{.)('{.')
              PsiElement(NimTokenType.IDENTIFIER)('closure')
              PsiElement(NimTokenType..})('.}')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 2601
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## Binary search for ``key`` in ``a``. Returns -1 if not found.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## ``cmp`` is the comparator function to use, the expected return values are')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## the same as that of system.cmp.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        NimConditionalBlockImpl(CONDITIONAL_BLOCK)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('a')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('len')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.EQUALS)('==')
            PsiWhiteSpace(' ')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('0')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimReturnStatementImpl(RETURN_STATEMENT)
            PsiElement(NimTokenType.return)('return')
            PsiWhiteSpace(' ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimUnaryExpressionImpl(UNARY_EXPRESSION)
                  NimUnaryOpImpl(UNARY_OP)
                    PsiElement(NimTokenType.-)('-')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('1')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimDedentationImpl(DEDENTATION)
            <empty list>
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.let)('let')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('len')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('a')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('len')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        NimConditionalBlockImpl(CONDITIONAL_BLOCK)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('len')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.EQUALS)('==')
            PsiWhiteSpace(' ')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('1')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
            PsiElement(NimTokenType.if)('if')
            PsiWhiteSpace(' ')
            NimConditionalBlockImpl(CONDITIONAL_BLOCK)
              NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('cmp')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('a')
                      PsiElement(NimTokenType.[)('[')
                      NimLiteralImpl(LITERAL)
                        NimIntegerImpl(INTEGER)
                          NimSignedIntegerImpl(SIGNED_INTEGER)
                            PsiElement(NimTokenType.INT_LIT)('0')
                      PsiElement(NimTokenType.])(']')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('key')
                    PsiElement(NimTokenType.))(')')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.EQUALS)('==')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('0')
              PsiElement(NimTokenType.:)(':')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('      ')
              NimIndentationImpl(INDENTATION)
                <empty list>
              NimReturnStatementImpl(RETURN_STATEMENT)
                PsiElement(NimTokenType.return)('return')
                PsiWhiteSpace(' ')
                NimSimpleStatementImpl(SIMPLE_STATEMENT)
                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('0')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('    ')
              NimDedentationImpl(DEDENTATION)
                <empty list>
            NimElseStatementImpl(ELSE_STATEMENT)
              PsiElement(NimTokenType.else)('else')
              PsiElement(NimTokenType.:)(':')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('      ')
              NimIndentationImpl(INDENTATION)
                <empty list>
              NimReturnStatementImpl(RETURN_STATEMENT)
                PsiElement(NimTokenType.return)('return')
                PsiWhiteSpace(' ')
                NimSimpleStatementImpl(SIMPLE_STATEMENT)
                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                    NimUnaryExpressionImpl(UNARY_EXPRESSION)
                      NimUnaryOpImpl(UNARY_OP)
                        PsiElement(NimTokenType.-)('-')
                      NimLiteralImpl(LITERAL)
                        NimIntegerImpl(INTEGER)
                          NimSignedIntegerImpl(SIGNED_INTEGER)
                            PsiElement(NimTokenType.INT_LIT)('1')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('  ')
              NimDedentationImpl(DEDENTATION)
                <empty list>
          NimDedentationImpl(DEDENTATION)
            <empty list>
      NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        NimConditionalBlockImpl(CONDITIONAL_BLOCK)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimParanExpressionImpl(PARAN_EXPRESSION)
              PsiElement(NimTokenType.()('(')
              NimAndExpressionImpl(AND_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('len')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.and)('and')
                PsiWhiteSpace(' ')
                NimParanExpressionImpl(PARAN_EXPRESSION)
                  PsiElement(NimTokenType.()('(')
                  NimAddExpressionImpl(ADD_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('len')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.-)('-')
                    PsiWhiteSpace(' ')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('1')
                  PsiElement(NimTokenType.))(')')
              PsiElement(NimTokenType.))(')')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.EQUALS)('==')
            PsiWhiteSpace(' ')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('0')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          PsiComment(NimTokenType.<single_line_comment>)('# when `len` is a power of 2, a faster shr can be used.')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimStatementImpl(STATEMENT)
            NimVarDeclarationImpl(VAR_DECLARATION)
              PsiElement(NimTokenType.var)('var')
              PsiWhiteSpace(' ')
              NimVarAssignmentImpl(VAR_ASSIGNMENT)
                NimCommasImpl(COMMAS)
                  NimVarDefinitionImpl(VAR_DEFINITION)
                    PsiElement(NimTokenType.IDENTIFIER)('step')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.=)('=')
                PsiWhiteSpace(' ')
                NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('len')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.shr)('shr')
                  PsiWhiteSpace(' ')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('1')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimStatementImpl(STATEMENT)
            NimVarDeclarationImpl(VAR_DECLARATION)
              PsiElement(NimTokenType.var)('var')
              PsiWhiteSpace(' ')
              NimVarAssignmentImpl(VAR_ASSIGNMENT)
                NimCommasImpl(COMMAS)
                  NimVarDefinitionImpl(VAR_DEFINITION)
                    PsiElement(NimTokenType.IDENTIFIER)('cmpRes')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.IDENTIFIER)('int')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimWhileStatementImpl(WHILE_STATEMENT)
            PsiElement(NimTokenType.while)('while')
            PsiWhiteSpace(' ')
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('step')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.>)('>')
              PsiWhiteSpace(' ')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('0')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimIndentationImpl(INDENTATION)
              <empty list>
            NimStatementImpl(STATEMENT)
              NimVarDeclarationImpl(VAR_DECLARATION)
                PsiElement(NimTokenType.let)('let')
                PsiWhiteSpace(' ')
                NimVarAssignmentImpl(VAR_ASSIGNMENT)
                  NimCommasImpl(COMMAS)
                    NimVarDefinitionImpl(VAR_DEFINITION)
                      PsiElement(NimTokenType.IDENTIFIER)('i')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.=)('=')
                  PsiWhiteSpace(' ')
                  NimOrExpressionImpl(OR_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('result')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.or)('or')
                    PsiWhiteSpace(' ')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('step')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('      ')
                NimVarAssignmentImpl(VAR_ASSIGNMENT)
                  NimCommasImpl(COMMAS)
                    NimVarDefinitionImpl(VAR_DEFINITION)
                      PsiElement(NimTokenType.IDENTIFIER)('cmpRes')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.=)('=')
                  PsiWhiteSpace(' ')
                  NimCallExpressionImpl(CALL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('cmp')
                    NimArgumentListImpl(ARGUMENT_LIST)
                      PsiElement(NimTokenType.()('(')
                      NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('a')
                        PsiElement(NimTokenType.[)('[')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('i')
                        PsiElement(NimTokenType.])(']')
                      PsiElement(NimTokenType.,)(',')
                      PsiWhiteSpace(' ')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('key')
                      PsiElement(NimTokenType.))(')')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
              PsiElement(NimTokenType.if)('if')
              PsiWhiteSpace(' ')
              NimConditionalBlockImpl(CONDITIONAL_BLOCK)
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('cmpRes')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.EQUALS)('==')
                  PsiWhiteSpace(' ')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('0')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('        ')
                NimIndentationImpl(INDENTATION)
                  <empty list>
                NimReturnStatementImpl(RETURN_STATEMENT)
                  PsiElement(NimTokenType.return)('return')
                  PsiWhiteSpace(' ')
                  NimSimpleStatementImpl(SIMPLE_STATEMENT)
                    NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('i')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('      ')
                NimDedentationImpl(DEDENTATION)
                  <empty list>
            NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
              PsiElement(NimTokenType.if)('if')
              PsiWhiteSpace(' ')
              NimConditionalBlockImpl(CONDITIONAL_BLOCK)
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('cmpRes')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.<)('<')
                  PsiWhiteSpace(' ')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('1')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('        ')
                NimIndentationImpl(INDENTATION)
                  <empty list>
                NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('result')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.=)('=')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('i')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('      ')
                NimDedentationImpl(DEDENTATION)
                  <empty list>
            NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('step')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('step')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.shr)('shr')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('1')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimDedentationImpl(DEDENTATION)
              <empty list>
          NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimIfExpressionImpl(IF_EXPRESSION)
                PsiElement(NimTokenType.if)('if')
                PsiWhiteSpace(' ')
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimCallExpressionImpl(CALL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('cmp')
                    NimArgumentListImpl(ARGUMENT_LIST)
                      PsiElement(NimTokenType.()('(')
                      NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('a')
                        PsiElement(NimTokenType.[)('[')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('result')
                        PsiElement(NimTokenType.])(']')
                      PsiElement(NimTokenType.,)(',')
                      PsiWhiteSpace(' ')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('key')
                      PsiElement(NimTokenType.))(')')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.NOT_EQUAL)('!=')
                  PsiWhiteSpace(' ')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('0')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('result')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimUnaryExpressionImpl(UNARY_EXPRESSION)
              NimUnaryOpImpl(UNARY_OP)
                PsiElement(NimTokenType.-)('-')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('1')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimDedentationImpl(DEDENTATION)
            <empty list>
        NimElseStatementImpl(ELSE_STATEMENT)
          PsiElement(NimTokenType.else)('else')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimStatementImpl(STATEMENT)
            NimVarDeclarationImpl(VAR_DECLARATION)
              PsiElement(NimTokenType.var)('var')
              PsiWhiteSpace(' ')
              NimVarAssignmentImpl(VAR_ASSIGNMENT)
                NimCommasImpl(COMMAS)
                  NimVarDefinitionImpl(VAR_DEFINITION)
                    PsiElement(NimTokenType.IDENTIFIER)('b')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.=)('=')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('len')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimStatementImpl(STATEMENT)
            NimVarDeclarationImpl(VAR_DECLARATION)
              PsiElement(NimTokenType.var)('var')
              PsiWhiteSpace(' ')
              NimVarAssignmentImpl(VAR_ASSIGNMENT)
                NimCommasImpl(COMMAS)
                  NimVarDefinitionImpl(VAR_DEFINITION)
                    PsiElement(NimTokenType.IDENTIFIER)('cmpRes')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.IDENTIFIER)('int')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimWhileStatementImpl(WHILE_STATEMENT)
            PsiElement(NimTokenType.while)('while')
            PsiWhiteSpace(' ')
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('result')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.<)('<')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('b')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimIndentationImpl(INDENTATION)
              <empty list>
            NimStatementImpl(STATEMENT)
              NimVarDeclarationImpl(VAR_DECLARATION)
                PsiElement(NimTokenType.var)('var')
                PsiWhiteSpace(' ')
                NimVarAssignmentImpl(VAR_ASSIGNMENT)
                  NimCommasImpl(COMMAS)
                    NimVarDefinitionImpl(VAR_DEFINITION)
                      PsiElement(NimTokenType.IDENTIFIER)('mid')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.=)('=')
                  PsiWhiteSpace(' ')
                  NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
                    NimParanExpressionImpl(PARAN_EXPRESSION)
                      PsiElement(NimTokenType.()('(')
                      NimAddExpressionImpl(ADD_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('result')
                        PsiWhiteSpace(' ')
                        PsiElement(NimTokenType.+)('+')
                        PsiWhiteSpace(' ')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('b')
                      PsiElement(NimTokenType.))(')')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.shr)('shr')
                    PsiWhiteSpace(' ')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('1')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('      ')
                NimVarAssignmentImpl(VAR_ASSIGNMENT)
                  NimCommasImpl(COMMAS)
                    NimVarDefinitionImpl(VAR_DEFINITION)
                      PsiElement(NimTokenType.IDENTIFIER)('cmpRes')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.=)('=')
                  PsiWhiteSpace(' ')
                  NimCallExpressionImpl(CALL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('cmp')
                    NimArgumentListImpl(ARGUMENT_LIST)
                      PsiElement(NimTokenType.()('(')
                      NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('a')
                        PsiElement(NimTokenType.[)('[')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('mid')
                        PsiElement(NimTokenType.])(']')
                      PsiElement(NimTokenType.,)(',')
                      PsiWhiteSpace(' ')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('key')
                      PsiElement(NimTokenType.))(')')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
              PsiElement(NimTokenType.if)('if')
              PsiWhiteSpace(' ')
              NimConditionalBlockImpl(CONDITIONAL_BLOCK)
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('cmpRes')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.EQUALS)('==')
                  PsiWhiteSpace(' ')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('0')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('        ')
                NimIndentationImpl(INDENTATION)
                  <empty list>
                NimReturnStatementImpl(RETURN_STATEMENT)
                  PsiElement(NimTokenType.return)('return')
                  PsiWhiteSpace(' ')
                  NimSimpleStatementImpl(SIMPLE_STATEMENT)
                    NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('mid')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('      ')
                NimDedentationImpl(DEDENTATION)
                  <empty list>
            NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
              PsiElement(NimTokenType.if)('if')
              PsiWhiteSpace(' ')
              NimConditionalBlockImpl(CONDITIONAL_BLOCK)
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('cmpRes')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.<)('<')
                  PsiWhiteSpace(' ')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('0')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('        ')
                NimIndentationImpl(INDENTATION)
                  <empty list>
                NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('result')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.=)('=')
                  PsiWhiteSpace(' ')
                  NimAddExpressionImpl(ADD_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('mid')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.+)('+')
                    PsiWhiteSpace(' ')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('1')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('      ')
                NimDedentationImpl(DEDENTATION)
                  <empty list>
              NimElseStatementImpl(ELSE_STATEMENT)
                PsiElement(NimTokenType.else)('else')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('        ')
                NimIndentationImpl(INDENTATION)
                  <empty list>
                NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('b')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.=)('=')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('mid')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('    ')
                NimDedentationImpl(DEDENTATION)
                  <empty list>
            NimDedentationImpl(DEDENTATION)
              <empty list>
          NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimIfExpressionImpl(IF_EXPRESSION)
                PsiElement(NimTokenType.if)('if')
                PsiWhiteSpace(' ')
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('result')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.GT_EQUAL)('>=')
                    PsiWhiteSpace(' ')
                    NimCallExpressionImpl(CALL_EXPRESSION)
                      NimOp7ExpressionImpl(OP_7_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('len')
                        PsiWhiteSpace(' ')
                        PsiElement(NimTokenType.or)('or')
                        PsiWhiteSpace(' ')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('cmp')
                      NimArgumentListImpl(ARGUMENT_LIST)
                        PsiElement(NimTokenType.()('(')
                        NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('a')
                          PsiElement(NimTokenType.[)('[')
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('result')
                          PsiElement(NimTokenType.])(']')
                        PsiElement(NimTokenType.,)(',')
                        PsiWhiteSpace(' ')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('key')
                        PsiElement(NimTokenType.))(')')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.NOT_EQUAL)('!=')
                  PsiWhiteSpace(' ')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('0')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('result')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimUnaryExpressionImpl(UNARY_EXPRESSION)
              NimUnaryOpImpl(UNARY_OP)
                PsiElement(NimTokenType.-)('-')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('1')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('\n')
          NimDedentationImpl(DEDENTATION)
            <empty list>
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('key')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 3654
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## Binary search for ``key`` in ``a``. Returns -1 if not found.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimCallExpressionImpl(CALL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
            NimArgumentListImpl(ARGUMENT_LIST)
              PsiElement(NimTokenType.()('(')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('a')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('key')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('cmp')
                PsiElement(NimTokenType.[)('[')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('T')
                PsiElement(NimTokenType.])(']')
              PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('smartBinarySearch')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('key')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 3811
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
      PsiWhiteSpace(' ')
      NimPragmaImpl(PRAGMA)
        PsiElement(NimTokenType.{.)('{.')
        PsiElement(NimTokenType.IDENTIFIER)('deprecated')
        PsiElement(NimTokenType..})('.}')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## **Deprecated since version 0.18.1**; Use ``binarySearch`` instead.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimCallExpressionImpl(CALL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
            NimArgumentListImpl(ARGUMENT_LIST)
              PsiElement(NimTokenType.()('(')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('a')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('key')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('cmp')
                PsiElement(NimTokenType.[)('[')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('T')
                PsiElement(NimTokenType.])(']')
              PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimStatementImpl(STATEMENT)
    NimVarDeclarationImpl(VAR_DECLARATION)
      PsiElement(NimTokenType.CONST)('const')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimVarAssignmentImpl(VAR_ASSIGNMENT)
        NimCommasImpl(COMMAS)
          NimVarDefinitionImpl(VAR_DEFINITION)
            PsiElement(NimTokenType.IDENTIFIER)('onlySafeCode')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('true')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        NimGenericsAdditionalImpl(GENERICS_ADDITIONAL)
          PsiElement(NimTokenType.,)(',')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('K')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('key')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('K')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('cmp')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          NimClosureImpl(CLOSURE)
            PsiElement(NimTokenType.proc)('proc')
            NimParametersImpl(PARAMETERS)
              PsiElement(NimTokenType.()('(')
              NimParameterImpl(PARAMETER)
                NimParameterNamesImpl(PARAMETER_NAMES)
                  NimCommasImpl(COMMAS)
                    PsiElement(NimTokenType.IDENTIFIER)('x')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.IDENTIFIER)('T')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimParameterImpl(PARAMETER)
                NimParameterNamesImpl(PARAMETER_NAMES)
                  NimCommasImpl(COMMAS)
                    PsiElement(NimTokenType.IDENTIFIER)('k')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.IDENTIFIER)('K')
              PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 4036
                <empty list>
              PsiElement(NimTokenType.))(')')
            NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
              PsiElement(NimTokenType.:)(':')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('int')
            PsiWhiteSpace(' ')
            NimPragmaImpl(PRAGMA)
              PsiElement(NimTokenType.{.)('{.')
              PsiElement(NimTokenType.IDENTIFIER)('closure')
              PsiElement(NimTokenType..})('.}')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 4054
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## returns a position to the first element in the ``a`` that is greater than')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## ``key``, or last if no such element is found.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## In other words if you have a sorted sequence and you call')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## ``insert(thing, elm, lowerBound(thing, elm))``')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## the sequence will still be sorted.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## The first version uses ``cmp`` to compare the elements.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## The expected return values are the same as that of ``system.cmp``.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## The second version uses the default comparison function ``cmp``.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## .. code-block:: nim')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##   var arr = @[1,2,3,5,6,7,8,9]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##   arr.insert(4, arr.lowerBound(4))')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##   # after running the above arr is `[1,2,3,4,5,6,7,8,9]`')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType..)('.')
          PsiElement(NimTokenType.IDENTIFIER)('low')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('count')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimAddExpressionImpl(ADD_EXPRESSION)
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('a')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('high')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.-)('-')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('a')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('low')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.+)('+')
              PsiWhiteSpace(' ')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('1')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('step')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('pos')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.IDENTIFIER)('int')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimWhileStatementImpl(WHILE_STATEMENT)
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('count')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.NOT_EQUAL)('!=')
          PsiWhiteSpace(' ')
          NimLiteralImpl(LITERAL)
            NimIntegerImpl(INTEGER)
              NimSignedIntegerImpl(SIGNED_INTEGER)
                PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('step')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.=)('=')
          PsiWhiteSpace(' ')
          NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('count')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.shr)('shr')
            PsiWhiteSpace(' ')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('pos')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.=)('=')
          PsiWhiteSpace(' ')
          NimAddExpressionImpl(ADD_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('result')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.+)('+')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('step')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
          PsiElement(NimTokenType.if)('if')
          PsiWhiteSpace(' ')
          NimConditionalBlockImpl(CONDITIONAL_BLOCK)
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimCallExpressionImpl(CALL_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('cmp')
                NimArgumentListImpl(ARGUMENT_LIST)
                  PsiElement(NimTokenType.()('(')
                  NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('a')
                    PsiElement(NimTokenType.[)('[')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('pos')
                    PsiElement(NimTokenType.])(']')
                  PsiElement(NimTokenType.,)(',')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('key')
                  PsiElement(NimTokenType.))(')')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.<)('<')
              PsiWhiteSpace(' ')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('0')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimIndentationImpl(INDENTATION)
              <empty list>
            NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('result')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('pos')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.+)('+')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('1')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('count')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.MINUS_ASSIGN)('-=')
              PsiWhiteSpace(' ')
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('step')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.+)('+')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('1')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimDedentationImpl(DEDENTATION)
              <empty list>
          NimElseStatementImpl(ELSE_STATEMENT)
            PsiElement(NimTokenType.else)('else')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimIndentationImpl(INDENTATION)
              <empty list>
            NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('count')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('step')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('\n')
            NimDedentationImpl(DEDENTATION)
              <empty list>
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('key')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 5016
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace(' ')
      NimCallExpressionImpl(CALL_EXPRESSION)
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
        NimArgumentListImpl(ARGUMENT_LIST)
          PsiElement(NimTokenType.()('(')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.,)(',')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('key')
          PsiElement(NimTokenType.,)(',')
          PsiWhiteSpace(' ')
          NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('cmp')
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
          PsiElement(NimTokenType.))(')')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('upperBound')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        NimGenericsAdditionalImpl(GENERICS_ADDITIONAL)
          PsiElement(NimTokenType.,)(',')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('K')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('key')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('K')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('cmp')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          NimClosureImpl(CLOSURE)
            PsiElement(NimTokenType.proc)('proc')
            NimParametersImpl(PARAMETERS)
              PsiElement(NimTokenType.()('(')
              NimParameterImpl(PARAMETER)
                NimParameterNamesImpl(PARAMETER_NAMES)
                  NimCommasImpl(COMMAS)
                    PsiElement(NimTokenType.IDENTIFIER)('x')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.IDENTIFIER)('T')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimParameterImpl(PARAMETER)
                NimParameterNamesImpl(PARAMETER_NAMES)
                  NimCommasImpl(COMMAS)
                    PsiElement(NimTokenType.IDENTIFIER)('k')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.IDENTIFIER)('K')
              PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 5121
                <empty list>
              PsiElement(NimTokenType.))(')')
            NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
              PsiElement(NimTokenType.:)(':')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('int')
            PsiWhiteSpace(' ')
            NimPragmaImpl(PRAGMA)
              PsiElement(NimTokenType.{.)('{.')
              PsiElement(NimTokenType.IDENTIFIER)('closure')
              PsiElement(NimTokenType..})('.}')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 5139
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## returns a position to the first element in the ``a`` that is not less')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## (i.e. greater or equal to) than ``key``, or last if no such element is found.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## In other words if you have a sorted sequence and you call')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## ``insert(thing, elm, upperBound(thing, elm))``')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## the sequence will still be sorted.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## The first version uses ``cmp`` to compare the elements. The expected')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## return values are the same as that of ``system.cmp``.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## The second version uses the default comparison function ``cmp``.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## .. code-block:: nim')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##   var arr = @[1,2,3,4,6,7,8,9]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##   arr.insert(5, arr.upperBound(4))')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##   # after running the above arr is `[1,2,3,4,5,6,7,8,9]`')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType..)('.')
          PsiElement(NimTokenType.IDENTIFIER)('low')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('count')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimAddExpressionImpl(ADD_EXPRESSION)
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('a')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('high')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.-)('-')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('a')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('low')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.+)('+')
              PsiWhiteSpace(' ')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('1')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('step')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('pos')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.IDENTIFIER)('int')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimWhileStatementImpl(WHILE_STATEMENT)
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('count')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.NOT_EQUAL)('!=')
          PsiWhiteSpace(' ')
          NimLiteralImpl(LITERAL)
            NimIntegerImpl(INTEGER)
              NimSignedIntegerImpl(SIGNED_INTEGER)
                PsiElement(NimTokenType.INT_LIT)('0')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('step')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.=)('=')
          PsiWhiteSpace(' ')
          NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('count')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.shr)('shr')
            PsiWhiteSpace(' ')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('pos')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.=)('=')
          PsiWhiteSpace(' ')
          NimAddExpressionImpl(ADD_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('result')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.+)('+')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('step')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
          PsiElement(NimTokenType.if)('if')
          PsiWhiteSpace(' ')
          NimConditionalBlockImpl(CONDITIONAL_BLOCK)
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimCallExpressionImpl(CALL_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('cmp')
                NimArgumentListImpl(ARGUMENT_LIST)
                  PsiElement(NimTokenType.()('(')
                  NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('a')
                    PsiElement(NimTokenType.[)('[')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('pos')
                    PsiElement(NimTokenType.])(']')
                  PsiElement(NimTokenType.,)(',')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('key')
                  PsiElement(NimTokenType.))(')')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.LT_EQUAL)('<=')
              PsiWhiteSpace(' ')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('0')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimIndentationImpl(INDENTATION)
              <empty list>
            NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('result')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('pos')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.+)('+')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('1')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('count')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.MINUS_ASSIGN)('-=')
              PsiWhiteSpace(' ')
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('step')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.+)('+')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('1')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimDedentationImpl(DEDENTATION)
              <empty list>
          NimElseStatementImpl(ELSE_STATEMENT)
            PsiElement(NimTokenType.else)('else')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimIndentationImpl(INDENTATION)
              <empty list>
            NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('count')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('step')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('\n')
            NimDedentationImpl(DEDENTATION)
              <empty list>
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('upperBound')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('key')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 6130
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace(' ')
      NimCallExpressionImpl(CALL_EXPRESSION)
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('upperBound')
        NimArgumentListImpl(ARGUMENT_LIST)
          PsiElement(NimTokenType.()('(')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.,)(',')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('key')
          PsiElement(NimTokenType.,)(',')
          PsiWhiteSpace(' ')
          NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('cmp')
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
          PsiElement(NimTokenType.))(')')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimTemplateMethodImpl(TEMPLATE_METHOD)
      PsiElement(NimTokenType.template)('template')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.`)('`')
      PsiElement(NimTokenType.BACK_TICK_IDENTIFIER)('<-')
      PsiElement(NimTokenType.`)('`')
      PsiWhiteSpace(' ')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('b')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 6186
          <empty list>
        PsiElement(NimTokenType.))(')')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
        PsiElement(NimTokenType.when)('when')
        PsiWhiteSpace(' ')
        NimConditionalBlockImpl(CONDITIONAL_BLOCK)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('false')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('a')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('b')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimDedentationImpl(DEDENTATION)
            <empty list>
        NimElseIfStatementImpl(ELSE_IF_STATEMENT)
          PsiElement(NimTokenType.elif)('elif')
          PsiWhiteSpace(' ')
          NimConditionalBlockImpl(CONDITIONAL_BLOCK)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('onlySafeCode')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimIndentationImpl(INDENTATION)
              <empty list>
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('shallowCopy')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('a')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('b')
                    PsiElement(NimTokenType.))(')')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('  ')
            NimDedentationImpl(DEDENTATION)
              <empty list>
        NimElseStatementImpl(ELSE_STATEMENT)
          PsiElement(NimTokenType.else)('else')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimCallExpressionImpl(CALL_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('copyMem')
                NimArgumentListImpl(ARGUMENT_LIST)
                  PsiElement(NimTokenType.()('(')
                  NimCallExpressionImpl(CALL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('addr')
                    NimArgumentListImpl(ARGUMENT_LIST)
                      PsiElement(NimTokenType.()('(')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('a')
                      PsiElement(NimTokenType.))(')')
                  PsiElement(NimTokenType.,)(',')
                  PsiWhiteSpace(' ')
                  NimCallExpressionImpl(CALL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('addr')
                    NimArgumentListImpl(ARGUMENT_LIST)
                      PsiElement(NimTokenType.()('(')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('b')
                      PsiElement(NimTokenType.))(')')
                  PsiElement(NimTokenType.,)(',')
                  PsiWhiteSpace(' ')
                  NimCallExpressionImpl(CALL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('sizeof')
                    NimArgumentListImpl(ARGUMENT_LIST)
                      PsiElement(NimTokenType.()('(')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('T')
                      PsiElement(NimTokenType.))(')')
                  PsiElement(NimTokenType.))(')')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('\n')
          NimDedentationImpl(DEDENTATION)
            <empty list>
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('merge')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('b')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('lo')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('m')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('hi')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('              ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('cmp')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          NimClosureImpl(CLOSURE)
            PsiElement(NimTokenType.proc)('proc')
            PsiWhiteSpace(' ')
            NimParametersImpl(PARAMETERS)
              PsiElement(NimTokenType.()('(')
              NimParameterImpl(PARAMETER)
                NimParameterNamesImpl(PARAMETER_NAMES)
                  NimCommasImpl(COMMAS)
                    PsiElement(NimTokenType.IDENTIFIER)('x')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.IDENTIFIER)('y')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.IDENTIFIER)('T')
              PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 6393
                <empty list>
              PsiElement(NimTokenType.))(')')
            NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
              PsiElement(NimTokenType.:)(':')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('int')
            PsiWhiteSpace(' ')
            NimPragmaImpl(PRAGMA)
              PsiElement(NimTokenType.{.)('{.')
              PsiElement(NimTokenType.IDENTIFIER)('closure')
              PsiElement(NimTokenType..})('.}')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('order')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('SortOrder')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 6429
          <empty list>
        PsiElement(NimTokenType.))(')')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('# optimization: If max(left) <= min(right) there is nothing to do!')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('# 1 2 3 4  ## 5 6 7 8')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('# -> O(n) for sorted arrays.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('# On random data this safes up to 40% of merge calls')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimIfExpressionImpl(IF_EXPRESSION)
            PsiElement(NimTokenType.if)('if')
            PsiWhiteSpace(' ')
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('cmp')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('a')
                      PsiElement(NimTokenType.[)('[')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('m')
                      PsiElement(NimTokenType.])(']')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('a')
                      PsiElement(NimTokenType.[)('[')
                      NimAddExpressionImpl(ADD_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('m')
                        PsiElement(NimTokenType.+)('+')
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('1')
                      PsiElement(NimTokenType.])(']')
                    PsiElement(NimTokenType.))(')')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.*)('*')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('order')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.LT_EQUAL)('<=')
              PsiWhiteSpace(' ')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('0')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.return)('return')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('j')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('lo')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('# copy a[j..m] into b:')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('assert')
        PsiWhiteSpace(' ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('j')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.LT_EQUAL)('<=')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('m')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
        PsiElement(NimTokenType.when)('when')
        PsiWhiteSpace(' ')
        NimConditionalBlockImpl(CONDITIONAL_BLOCK)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('onlySafeCode')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimStatementImpl(STATEMENT)
            NimVarDeclarationImpl(VAR_DECLARATION)
              PsiElement(NimTokenType.var)('var')
              PsiWhiteSpace(' ')
              NimVarAssignmentImpl(VAR_ASSIGNMENT)
                NimCommasImpl(COMMAS)
                  NimVarDefinitionImpl(VAR_DEFINITION)
                    PsiElement(NimTokenType.IDENTIFIER)('bb')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.=)('=')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('0')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimWhileStatementImpl(WHILE_STATEMENT)
            PsiElement(NimTokenType.while)('while')
            PsiWhiteSpace(' ')
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('j')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.LT_EQUAL)('<=')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('m')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimIndentationImpl(INDENTATION)
              <empty list>
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('b')
                    PsiElement(NimTokenType.[)('[')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('bb')
                    PsiElement(NimTokenType.])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.<)('<')
                  NimUnaryExpressionImpl(UNARY_EXPRESSION)
                    NimUnaryOpImpl(UNARY_OP)
                      PsiElement(NimTokenType.-)('-')
                    PsiWhiteSpace(' ')
                    NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('a')
                      PsiElement(NimTokenType.[)('[')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('j')
                      PsiElement(NimTokenType.])(']')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('      ')
              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimCallExpressionImpl(CALL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('inc')
                    NimArgumentListImpl(ARGUMENT_LIST)
                      PsiElement(NimTokenType.()('(')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('bb')
                      PsiElement(NimTokenType.))(')')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('      ')
                NimSimpleStatementImpl(SIMPLE_STATEMENT)
                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                    NimCallExpressionImpl(CALL_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('inc')
                      NimArgumentListImpl(ARGUMENT_LIST)
                        PsiElement(NimTokenType.()('(')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('j')
                        PsiElement(NimTokenType.))(')')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('  ')
            NimDedentationImpl(DEDENTATION)
              <empty list>
          NimDedentationImpl(DEDENTATION)
            <empty list>
        NimElseStatementImpl(ELSE_STATEMENT)
          PsiElement(NimTokenType.else)('else')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimCallExpressionImpl(CALL_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('copyMem')
                NimArgumentListImpl(ARGUMENT_LIST)
                  PsiElement(NimTokenType.()('(')
                  NimCallExpressionImpl(CALL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('addr')
                    NimArgumentListImpl(ARGUMENT_LIST)
                      PsiElement(NimTokenType.()('(')
                      NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('b')
                        PsiElement(NimTokenType.[)('[')
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('0')
                        PsiElement(NimTokenType.])(']')
                      PsiElement(NimTokenType.))(')')
                  PsiElement(NimTokenType.,)(',')
                  PsiWhiteSpace(' ')
                  NimCallExpressionImpl(CALL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('addr')
                    NimArgumentListImpl(ARGUMENT_LIST)
                      PsiElement(NimTokenType.()('(')
                      NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('a')
                        PsiElement(NimTokenType.[)('[')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('j')
                        PsiElement(NimTokenType.])(']')
                      PsiElement(NimTokenType.))(')')
                  PsiElement(NimTokenType.,)(',')
                  PsiWhiteSpace(' ')
                  NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
                    NimCallExpressionImpl(CALL_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('sizeof')
                      NimArgumentListImpl(ARGUMENT_LIST)
                        PsiElement(NimTokenType.()('(')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('T')
                        PsiElement(NimTokenType.))(')')
                    PsiElement(NimTokenType.*)('*')
                    NimParanExpressionImpl(PARAN_EXPRESSION)
                      PsiElement(NimTokenType.()('(')
                      NimAddExpressionImpl(ADD_EXPRESSION)
                        NimAddExpressionImpl(ADD_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('m')
                          PsiElement(NimTokenType.-)('-')
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('j')
                        PsiElement(NimTokenType.+)('+')
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('1')
                      PsiElement(NimTokenType.))(')')
                  PsiElement(NimTokenType.))(')')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('j')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('m')
                PsiElement(NimTokenType.+)('+')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('1')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimDedentationImpl(DEDENTATION)
            <empty list>
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('0')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('k')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('lo')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('# copy proper element back:')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimWhileStatementImpl(WHILE_STATEMENT)
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('k')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.<)('<')
            PsiWhiteSpace(' ')
            NimOp7ExpressionImpl(OP_7_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('j')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.and)('and')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('j')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.LT_EQUAL)('<=')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('hi')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
          PsiElement(NimTokenType.if)('if')
          PsiWhiteSpace(' ')
          NimConditionalBlockImpl(CONDITIONAL_BLOCK)
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('cmp')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('b')
                      PsiElement(NimTokenType.[)('[')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('i')
                      PsiElement(NimTokenType.])(']')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('a')
                      PsiElement(NimTokenType.[)('[')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('j')
                      PsiElement(NimTokenType.])(']')
                    PsiElement(NimTokenType.))(')')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.*)('*')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('order')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.LT_EQUAL)('<=')
              PsiWhiteSpace(' ')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('0')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimIndentationImpl(INDENTATION)
              <empty list>
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('a')
                    PsiElement(NimTokenType.[)('[')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('k')
                    PsiElement(NimTokenType.])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.<)('<')
                  NimUnaryExpressionImpl(UNARY_EXPRESSION)
                    NimUnaryOpImpl(UNARY_OP)
                      PsiElement(NimTokenType.-)('-')
                    PsiWhiteSpace(' ')
                    NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('b')
                      PsiElement(NimTokenType.[)('[')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('i')
                      PsiElement(NimTokenType.])(']')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('      ')
              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimCallExpressionImpl(CALL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('inc')
                    NimArgumentListImpl(ARGUMENT_LIST)
                      PsiElement(NimTokenType.()('(')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('i')
                      PsiElement(NimTokenType.))(')')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimDedentationImpl(DEDENTATION)
              <empty list>
          NimElseStatementImpl(ELSE_STATEMENT)
            PsiElement(NimTokenType.else)('else')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimIndentationImpl(INDENTATION)
              <empty list>
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('a')
                    PsiElement(NimTokenType.[)('[')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('k')
                    PsiElement(NimTokenType.])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.<)('<')
                  NimUnaryExpressionImpl(UNARY_EXPRESSION)
                    NimUnaryOpImpl(UNARY_OP)
                      PsiElement(NimTokenType.-)('-')
                    PsiWhiteSpace(' ')
                    NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('a')
                      PsiElement(NimTokenType.[)('[')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('j')
                      PsiElement(NimTokenType.])(']')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('      ')
              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimCallExpressionImpl(CALL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('inc')
                    NimArgumentListImpl(ARGUMENT_LIST)
                      PsiElement(NimTokenType.()('(')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('j')
                      PsiElement(NimTokenType.))(')')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimDedentationImpl(DEDENTATION)
              <empty list>
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('inc')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('k')
                PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('# copy rest of b:')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
        PsiElement(NimTokenType.when)('when')
        PsiWhiteSpace(' ')
        NimConditionalBlockImpl(CONDITIONAL_BLOCK)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('onlySafeCode')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimWhileStatementImpl(WHILE_STATEMENT)
            PsiElement(NimTokenType.while)('while')
            PsiWhiteSpace(' ')
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('k')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.<)('<')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('j')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimIndentationImpl(INDENTATION)
              <empty list>
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('a')
                    PsiElement(NimTokenType.[)('[')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('k')
                    PsiElement(NimTokenType.])(']')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.<)('<')
                  NimUnaryExpressionImpl(UNARY_EXPRESSION)
                    NimUnaryOpImpl(UNARY_OP)
                      PsiElement(NimTokenType.-)('-')
                    PsiWhiteSpace(' ')
                    NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('b')
                      PsiElement(NimTokenType.[)('[')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('i')
                      PsiElement(NimTokenType.])(']')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('      ')
              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimCallExpressionImpl(CALL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('inc')
                    NimArgumentListImpl(ARGUMENT_LIST)
                      PsiElement(NimTokenType.()('(')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('k')
                      PsiElement(NimTokenType.))(')')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('      ')
                NimSimpleStatementImpl(SIMPLE_STATEMENT)
                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                    NimCallExpressionImpl(CALL_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('inc')
                      NimArgumentListImpl(ARGUMENT_LIST)
                        PsiElement(NimTokenType.()('(')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('i')
                        PsiElement(NimTokenType.))(')')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('  ')
            NimDedentationImpl(DEDENTATION)
              <empty list>
          NimDedentationImpl(DEDENTATION)
            <empty list>
        NimElseStatementImpl(ELSE_STATEMENT)
          PsiElement(NimTokenType.else)('else')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimIfExpressionImpl(IF_EXPRESSION)
                PsiElement(NimTokenType.if)('if')
                PsiWhiteSpace(' ')
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('k')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.<)('<')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('j')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace(' ')
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('copyMem')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimCallExpressionImpl(CALL_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('addr')
                      NimArgumentListImpl(ARGUMENT_LIST)
                        PsiElement(NimTokenType.()('(')
                        NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('a')
                          PsiElement(NimTokenType.[)('[')
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('k')
                          PsiElement(NimTokenType.])(']')
                        PsiElement(NimTokenType.))(')')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    NimCallExpressionImpl(CALL_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('addr')
                      NimArgumentListImpl(ARGUMENT_LIST)
                        PsiElement(NimTokenType.()('(')
                        NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('b')
                          PsiElement(NimTokenType.[)('[')
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('i')
                          PsiElement(NimTokenType.])(']')
                        PsiElement(NimTokenType.))(')')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    NimCallExpressionImpl(CALL_EXPRESSION)
                      NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
                        NimCallExpressionImpl(CALL_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('sizeof')
                          NimArgumentListImpl(ARGUMENT_LIST)
                            PsiElement(NimTokenType.()('(')
                            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(NimTokenType.IDENTIFIER)('T')
                            PsiElement(NimTokenType.))(')')
                        PsiElement(NimTokenType.*)('*')
                        PsiErrorElement:<expression> expected, got '('
                          <empty list>
                      NimArgumentListImpl(ARGUMENT_LIST)
                        PsiElement(NimTokenType.()('(')
                        NimAddExpressionImpl(ADD_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('j')
                          PsiElement(NimTokenType.-)('-')
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('k')
                        PsiElement(NimTokenType.))(')')
                    PsiElement(NimTokenType.))(')')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('\n')
          NimDedentationImpl(DEDENTATION)
            <empty list>
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimFuncMethodImpl(FUNC_METHOD)
      PsiElement(NimTokenType.func)('func')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('sort')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('              ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('cmp')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          NimClosureImpl(CLOSURE)
            PsiElement(NimTokenType.proc)('proc')
            PsiWhiteSpace(' ')
            NimParametersImpl(PARAMETERS)
              PsiElement(NimTokenType.()('(')
              NimParameterImpl(PARAMETER)
                NimParameterNamesImpl(PARAMETER_NAMES)
                  NimCommasImpl(COMMAS)
                    PsiElement(NimTokenType.IDENTIFIER)('x')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.IDENTIFIER)('y')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.IDENTIFIER)('T')
              PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 7332
                <empty list>
              PsiElement(NimTokenType.))(')')
            NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
              PsiElement(NimTokenType.:)(':')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('int')
            PsiWhiteSpace(' ')
            NimPragmaImpl(PRAGMA)
              PsiElement(NimTokenType.{.)('{.')
              PsiElement(NimTokenType.IDENTIFIER)('closure')
              PsiElement(NimTokenType..})('.}')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('              ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('order')
          PsiWhiteSpace(' ')
          NimParameterDefaultImpl(PARAMETER_DEFAULT)
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('SortOrder')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('Ascending')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 7393
          <empty list>
        PsiElement(NimTokenType.))(')')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## Default Nim sort (an implementation of merge sort). The sorting')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## is guaranteed to be stable and the worst case is guaranteed to')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## be O(n log n).')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## The current implementation uses an iterative')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## mergesort to achieve this. It uses a temporary sequence of')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## length ``a.len div 2``. If you do not wish to provide your own')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## ``cmp``, you may use ``system.cmp`` or instead call the overloaded')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## version of ``sort``, which uses ``system.cmp``.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## .. code-block:: nim')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##    sort(myIntArray, system.cmp[int])')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##    # do not use cmp[string] here as we want to use the specialized')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##    # overload:')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##    sort(myStrArray, system.cmp)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## You can inline adhoc comparison procs with the `do notation')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## <manual.html#procedures-do-notation>`_. Example:')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## .. code-block:: nim')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##   people.sort do (x, y: Person) -> int:')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##     result = cmp(x.surname, y.surname)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##     if result == 0:')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##       result = cmp(x.name, y.name)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('n')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('a')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('len')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('b')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.IDENTIFIER)('seq')
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimArrayLiteralImpl(ARRAY_LITERAL)
            PsiElement(NimTokenType.[)('[')
            NimOptionalIndentImpl(OPTIONAL_INDENT)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('newSeq')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('b')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('n')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.div)('div')
                  PsiWhiteSpace(' ')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('2')
                PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('s')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('1')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimWhileStatementImpl(WHILE_STATEMENT)
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('s')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.<)('<')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('n')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimStatementImpl(STATEMENT)
          NimVarDeclarationImpl(VAR_DECLARATION)
            PsiElement(NimTokenType.var)('var')
            PsiWhiteSpace(' ')
            NimVarAssignmentImpl(VAR_ASSIGNMENT)
              NimCommasImpl(COMMAS)
                NimVarDefinitionImpl(VAR_DEFINITION)
                  PsiElement(NimTokenType.IDENTIFIER)('m')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimAddExpressionImpl(ADD_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('n')
                  PsiElement(NimTokenType.-)('-')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('1')
                PsiElement(NimTokenType.-)('-')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('s')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimWhileStatementImpl(WHILE_STATEMENT)
          PsiElement(NimTokenType.while)('while')
          PsiWhiteSpace(' ')
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('m')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.GT_EQUAL)('>=')
            PsiWhiteSpace(' ')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('0')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('      ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimCallExpressionImpl(CALL_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('merge')
                NimArgumentListImpl(ARGUMENT_LIST)
                  PsiElement(NimTokenType.()('(')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('a')
                  PsiElement(NimTokenType.,)(',')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('b')
                  PsiElement(NimTokenType.,)(',')
                  PsiWhiteSpace(' ')
                  NimCallExpressionImpl(CALL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('max')
                    NimArgumentListImpl(ARGUMENT_LIST)
                      PsiElement(NimTokenType.()('(')
                      NimAddExpressionImpl(ADD_EXPRESSION)
                        NimAddExpressionImpl(ADD_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('m')
                          PsiElement(NimTokenType.-)('-')
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('s')
                        PsiElement(NimTokenType.+)('+')
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('1')
                      PsiElement(NimTokenType.,)(',')
                      PsiWhiteSpace(' ')
                      NimLiteralImpl(LITERAL)
                        NimIntegerImpl(INTEGER)
                          NimSignedIntegerImpl(SIGNED_INTEGER)
                            PsiElement(NimTokenType.INT_LIT)('0')
                      PsiElement(NimTokenType.))(')')
                  PsiElement(NimTokenType.,)(',')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('m')
                  PsiElement(NimTokenType.,)(',')
                  PsiWhiteSpace(' ')
                  NimAddExpressionImpl(ADD_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('m')
                    PsiElement(NimTokenType.+)('+')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('s')
                  PsiElement(NimTokenType.,)(',')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('cmp')
                  PsiElement(NimTokenType.,)(',')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('order')
                  PsiElement(NimTokenType.))(')')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('dec')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('m')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('s')
                      PsiElement(NimTokenType.*)('*')
                      NimLiteralImpl(LITERAL)
                        NimIntegerImpl(INTEGER)
                          NimSignedIntegerImpl(SIGNED_INTEGER)
                            PsiElement(NimTokenType.INT_LIT)('2')
                    PsiElement(NimTokenType.))(')')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimDedentationImpl(DEDENTATION)
            <empty list>
        NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('s')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.=)('=')
          PsiWhiteSpace(' ')
          NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('s')
            PsiElement(NimTokenType.*)('*')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('2')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('sort')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('order')
          PsiWhiteSpace(' ')
          NimParameterDefaultImpl(PARAMETER_DEFAULT)
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('SortOrder')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('Ascending')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 8647
          <empty list>
        PsiElement(NimTokenType.))(')')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace(' ')
      NimCallExpressionImpl(CALL_EXPRESSION)
        NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('sort')
          PsiElement(NimTokenType.[)('[')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('T')
          PsiElement(NimTokenType.])(']')
        NimArgumentListImpl(ARGUMENT_LIST)
          PsiElement(NimTokenType.()('(')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.,)(',')
          PsiWhiteSpace(' ')
          NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('system')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('cmp')
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
          PsiElement(NimTokenType.,)(',')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('order')
          PsiElement(NimTokenType.))(')')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('  ')
  PsiComment(NimTokenType.<single_line_comment>)('## Shortcut version of ``sort`` that uses ``system.cmp[T]`` as the comparison function.')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('sorted')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('cmp')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          NimClosureImpl(CLOSURE)
            PsiElement(NimTokenType.proc)('proc')
            NimParametersImpl(PARAMETERS)
              PsiElement(NimTokenType.()('(')
              NimParameterImpl(PARAMETER)
                NimParameterNamesImpl(PARAMETER_NAMES)
                  NimCommasImpl(COMMAS)
                    PsiElement(NimTokenType.IDENTIFIER)('x')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.IDENTIFIER)('y')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.IDENTIFIER)('T')
              PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 8825
                <empty list>
              PsiElement(NimTokenType.))(')')
            NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
              PsiElement(NimTokenType.:)(':')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('int')
            PsiWhiteSpace(' ')
            NimPragmaImpl(PRAGMA)
              PsiElement(NimTokenType.{.)('{.')
              PsiElement(NimTokenType.IDENTIFIER)('closure')
              PsiElement(NimTokenType..})('.}')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('                ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('order')
          PsiWhiteSpace(' ')
          NimParameterDefaultImpl(PARAMETER_DEFAULT)
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('SortOrder')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('Ascending')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 8888
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('seq')
        NimGenericsImpl(GENERICS)
          PsiElement(NimTokenType.[)('[')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('T')
          PsiElement(NimTokenType.])(']')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## returns ``a`` sorted by ``cmp`` in the specified ``order``.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<example>)('runnableExamples:')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('let')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('        ')
      PsiComment(NimTokenType.<doc_runnable>)('a = [2, 3, 1, 5, 4]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('        ')
      PsiComment(NimTokenType.<doc_runnable>)('b = sorted(a, system.cmp)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('        ')
      PsiComment(NimTokenType.<doc_runnable>)('c = sorted(a, system.cmp, Descending)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('doAssert b == @[1, 2, 3, 4, 5]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('      ')
      PsiComment(NimTokenType.<doc_runnable>)('doAssert c == @[5, 4, 3, 2, 1]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        NimCallExpressionImpl(CALL_EXPRESSION)
          NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('newSeq')
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
          NimArgumentListImpl(ARGUMENT_LIST)
            PsiElement(NimTokenType.()('(')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('a')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('len')
            PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimForStatementImpl(FOR_STATEMENT)
        PsiElement(NimTokenType.for)('for')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('i')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.in)('in')
          PsiWhiteSpace(' ')
          NimSpreadExpressionImpl(SPREAD_EXPRESSION)
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('0')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType...)('..')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('a')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('high')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('result')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('i')
              PsiElement(NimTokenType.])(']')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.=)('=')
          PsiWhiteSpace(' ')
          NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('a')
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimCallExpressionImpl(CALL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('sort')
            NimArgumentListImpl(ARGUMENT_LIST)
              PsiElement(NimTokenType.()('(')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('result')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('cmp')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('order')
              PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('sorted')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('order')
          PsiWhiteSpace(' ')
          NimParameterDefaultImpl(PARAMETER_DEFAULT)
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('SortOrder')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('Ascending')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 9338
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('seq')
        NimGenericsImpl(GENERICS)
          PsiElement(NimTokenType.[)('[')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('T')
          PsiElement(NimTokenType.])(']')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## Shortcut version of ``sorted`` that uses ``system.cmp[T]`` as the comparison function.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimCallExpressionImpl(CALL_EXPRESSION)
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('sorted')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('T')
              PsiElement(NimTokenType.])(']')
            NimArgumentListImpl(ARGUMENT_LIST)
              PsiElement(NimTokenType.()('(')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('a')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('system')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('cmp')
                PsiElement(NimTokenType.[)('[')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('T')
                PsiElement(NimTokenType.])(']')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('order')
              PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimTemplateMethodImpl(TEMPLATE_METHOD)
      PsiElement(NimTokenType.template)('template')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('sortedByIt')
      PsiElement(NimTokenType.*)('*')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('seq1')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('op')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('untyped')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 9518
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('untyped')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## Convenience template around the ``sorted`` proc to reduce typing.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## The template injects the ``it`` variable which you can use directly in an')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## expression. Example:')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## .. code-block:: nim')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##   type Person = tuple[name: string, age: int]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##   var')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##     p1: Person = (name: "p1", age: 60)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##     p2: Person = (name: "p2", age: 20)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##     p3: Person = (name: "p3", age: 30)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##     p4: Person = (name: "p4", age: 30)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##     people = @[p1,p2,p4,p3]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##   echo people.sortedByIt(it.name)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## Because the underlying ``cmp()`` is defined for tuples you can do')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## a nested sort like in the following example:')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## .. code-block:: nim')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##   echo people.sortedByIt((it.age, it.name))')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('result')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('sorted')
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimParanExpressionImpl(PARAN_EXPRESSION)
            PsiElement(NimTokenType.()('(')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('seq1')
            PsiErrorElement:NimTokenType.(, NimTokenType.), NimTokenType.*, NimTokenType.+, NimTokenType.,, NimTokenType.-, NimTokenType..., NimTokenType./, NimTokenType.<, NimTokenType.>, NimTokenType.EQUALS, NimTokenType.GT_EQUAL, NimTokenType.LT_EQUAL, NimTokenType.NOT_EQUAL, NimTokenType.[, NimTokenType.and, NimTokenType.div, NimTokenType.in, NimTokenType.is, NimTokenType.isnot, NimTokenType.mod, NimTokenType.not, NimTokenType.notin, NimTokenType.of, NimTokenType.or, NimTokenType.shl, NimTokenType.shr or NimTokenType.xor expected, got ','
              <empty list>
          PsiElement(NimTokenType.,)(',')
          PsiWhiteSpace(' ')
          NimProcExpressionImpl(PROC_EXPRESSION)
            PsiElement(NimTokenType.proc)('proc')
            NimParametersImpl(PARAMETERS)
              PsiElement(NimTokenType.()('(')
              NimParameterImpl(PARAMETER)
                NimParameterNamesImpl(PARAMETER_NAMES)
                  NimCommasImpl(COMMAS)
                    PsiElement(NimTokenType.IDENTIFIER)('x')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.IDENTIFIER)('y')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace(' ')
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('type')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('seq1')
                      PsiElement(NimTokenType.[)('[')
                      NimLiteralImpl(LITERAL)
                        NimIntegerImpl(INTEGER)
                          NimSignedIntegerImpl(SIGNED_INTEGER)
                            PsiElement(NimTokenType.INT_LIT)('0')
                      PsiElement(NimTokenType.])(']')
                    PsiElement(NimTokenType.))(')')
              PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 10329
                <empty list>
              PsiElement(NimTokenType.))(')')
            NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
              PsiElement(NimTokenType.:)(':')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('int')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimIndentationImpl(INDENTATION)
              <empty list>
            NimStatementImpl(STATEMENT)
              NimVarDeclarationImpl(VAR_DECLARATION)
                PsiElement(NimTokenType.var)('var')
                PsiWhiteSpace(' ')
                NimVarAssignmentImpl(VAR_ASSIGNMENT)
                  NimCommasImpl(COMMAS)
                    NimVarDefinitionImpl(VAR_DEFINITION)
                      PsiElement(NimTokenType.IDENTIFIER)('it')
                      PsiWhiteSpace(' ')
                      NimPragmaImpl(PRAGMA)
                        PsiElement(NimTokenType.{.)('{.')
                        PsiElement(NimTokenType.IDENTIFIER)('inject')
                        PsiElement(NimTokenType..})('.}')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.=)('=')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('x')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimStatementImpl(STATEMENT)
              NimVarDeclarationImpl(VAR_DECLARATION)
                PsiElement(NimTokenType.let)('let')
                PsiWhiteSpace(' ')
                NimVarAssignmentImpl(VAR_ASSIGNMENT)
                  NimCommasImpl(COMMAS)
                    NimVarDefinitionImpl(VAR_DEFINITION)
                      PsiElement(NimTokenType.IDENTIFIER)('a')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.=)('=')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('op')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('    ')
                NimVarAssignmentImpl(VAR_ASSIGNMENT)
                  NimCommasImpl(COMMAS)
                    NimVarDefinitionImpl(VAR_DEFINITION)
                      PsiElement(NimTokenType.IDENTIFIER)('it')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.=)('=')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('y')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimStatementImpl(STATEMENT)
              NimVarDeclarationImpl(VAR_DECLARATION)
                PsiElement(NimTokenType.let)('let')
                PsiWhiteSpace(' ')
                NimVarAssignmentImpl(VAR_ASSIGNMENT)
                  NimCommasImpl(COMMAS)
                    NimVarDefinitionImpl(VAR_DEFINITION)
                      PsiElement(NimTokenType.IDENTIFIER)('b')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.=)('=')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('op')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('    ')
                NimVarAssignmentImpl(VAR_ASSIGNMENT)
                  NimCommasImpl(COMMAS)
                    NimVarDefinitionImpl(VAR_DEFINITION)
                      PsiElement(NimTokenType.IDENTIFIER)('result')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.=)('=')
                  PsiWhiteSpace(' ')
                  NimCallExpressionImpl(CALL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('cmp')
                    NimArgumentListImpl(ARGUMENT_LIST)
                      PsiElement(NimTokenType.()('(')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('a')
                      PsiElement(NimTokenType.,)(',')
                      PsiWhiteSpace(' ')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('b')
                      PsiElement(NimTokenType.))(')')
            PsiElement(NimTokenType.))(')')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('  ')
            NimDedentationImpl(DEDENTATION)
              <empty list>
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('result')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimFuncMethodImpl(FUNC_METHOD)
      PsiElement(NimTokenType.func)('func')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('isSorted')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('                 ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('cmp')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          NimClosureImpl(CLOSURE)
            PsiElement(NimTokenType.proc)('proc')
            NimParametersImpl(PARAMETERS)
              PsiElement(NimTokenType.()('(')
              NimParameterImpl(PARAMETER)
                NimParameterNamesImpl(PARAMETER_NAMES)
                  NimCommasImpl(COMMAS)
                    PsiElement(NimTokenType.IDENTIFIER)('x')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.IDENTIFIER)('y')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.IDENTIFIER)('T')
              PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 10508
                <empty list>
              PsiElement(NimTokenType.))(')')
            NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
              PsiElement(NimTokenType.:)(':')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('int')
            PsiWhiteSpace(' ')
            NimPragmaImpl(PRAGMA)
              PsiElement(NimTokenType.{.)('{.')
              PsiElement(NimTokenType.IDENTIFIER)('closure')
              PsiElement(NimTokenType..})('.}')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('                 ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('order')
          PsiWhiteSpace(' ')
          NimParameterDefaultImpl(PARAMETER_DEFAULT)
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('SortOrder')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('Ascending')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 10572
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('bool')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## checks to see whether ``a`` is already sorted in ``order``')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## using ``cmp`` for the comparison. Parameters identical')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## to ``sort``.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('true')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimForStatementImpl(FOR_STATEMENT)
        PsiElement(NimTokenType.for)('for')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.in)('in')
            PsiWhiteSpace(' ')
            NimSpreadExpressionImpl(SPREAD_EXPRESSION)
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('0')
              PsiElement(NimTokenType...)('..')
              PsiErrorElement:<expression> expected, got '<'
                <empty list>
          PsiElement(NimTokenType.<)('<')
          NimAddExpressionImpl(ADD_EXPRESSION)
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('len')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('a')
                PsiElement(NimTokenType.))(')')
            PsiElement(NimTokenType.-)('-')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('1')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
          PsiElement(NimTokenType.if)('if')
          PsiWhiteSpace(' ')
          NimConditionalBlockImpl(CONDITIONAL_BLOCK)
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('cmp')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('a')
                      PsiElement(NimTokenType.[)('[')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('i')
                      PsiElement(NimTokenType.])(']')
                    PsiElement(NimTokenType.,)(',')
                    NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('a')
                      PsiElement(NimTokenType.[)('[')
                      NimAddExpressionImpl(ADD_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('i')
                        PsiElement(NimTokenType.+)('+')
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('1')
                      PsiElement(NimTokenType.])(']')
                    PsiElement(NimTokenType.))(')')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.*)('*')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('order')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.>)('>')
              PsiWhiteSpace(' ')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('0')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimIndentationImpl(INDENTATION)
              <empty list>
            NimReturnStatementImpl(RETURN_STATEMENT)
              PsiElement(NimTokenType.return)('return')
              PsiWhiteSpace(' ')
              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('false')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('\n')
            NimDedentationImpl(DEDENTATION)
              <empty list>
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('isSorted')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('a')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openarray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.,)(',')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('order')
          PsiWhiteSpace(' ')
          NimParameterDefaultImpl(PARAMETER_DEFAULT)
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('SortOrder')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('Ascending')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 10884
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('bool')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## Shortcut version of ``isSorted`` that uses ``system.cmp[T]`` as the comparison function.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimCallExpressionImpl(CALL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('isSorted')
            NimArgumentListImpl(ARGUMENT_LIST)
              PsiElement(NimTokenType.()('(')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('a')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('system')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('cmp')
                PsiElement(NimTokenType.[)('[')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('T')
                PsiElement(NimTokenType.])(']')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('order')
              PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('product')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('x')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openArray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('seq')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('T')
              PsiElement(NimTokenType.])(']')
            PsiElement(NimTokenType.])(']')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 11062
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('seq')
        NimGenericsImpl(GENERICS)
          PsiElement(NimTokenType.[)('[')
          NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('seq')
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
          PsiElement(NimTokenType.])(']')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## produces the Cartesian product of the array. Warning: complexity')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## may explode.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        NimCallExpressionImpl(CALL_EXPRESSION)
          NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('newSeq')
            PsiElement(NimTokenType.[)('[')
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('seq')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('T')
              PsiElement(NimTokenType.])(']')
            PsiElement(NimTokenType.])(']')
          NimArgumentListImpl(ARGUMENT_LIST)
            PsiElement(NimTokenType.()('(')
            PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        NimConditionalBlockImpl(CONDITIONAL_BLOCK)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('len')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.EQUALS)('==')
            PsiWhiteSpace(' ')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('0')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimReturnStatementImpl(RETURN_STATEMENT)
            PsiElement(NimTokenType.return)('return')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimDedentationImpl(DEDENTATION)
            <empty list>
      NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        NimConditionalBlockImpl(CONDITIONAL_BLOCK)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('len')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.EQUALS)('==')
            PsiWhiteSpace(' ')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('1')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('result')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimAtExpressionImpl(AT_EXPRESSION)
              PsiElement(NimTokenType.@)('@')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimReturnStatementImpl(RETURN_STATEMENT)
            PsiElement(NimTokenType.return)('return')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimDedentationImpl(DEDENTATION)
            <empty list>
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('indexes')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('newSeq')
                PsiElement(NimTokenType.[)('[')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('int')
                PsiElement(NimTokenType.])(']')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('x')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('len')
                PsiElement(NimTokenType.))(')')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('initial')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('newSeq')
                PsiElement(NimTokenType.[)('[')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('int')
                PsiElement(NimTokenType.])(']')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('x')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('len')
                PsiElement(NimTokenType.))(')')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('index')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('0')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimDedentationImpl(DEDENTATION)
            <empty list>
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('next')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('newSeq')
                PsiElement(NimTokenType.[)('[')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('T')
                PsiElement(NimTokenType.])(']')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimCallExpressionImpl(CALL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('next')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('setLen')
            NimArgumentListImpl(ARGUMENT_LIST)
              PsiElement(NimTokenType.()('(')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('x')
                PsiElement(NimTokenType..)('.')
                PsiElement(NimTokenType.IDENTIFIER)('len')
              PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimForStatementImpl(FOR_STATEMENT)
        PsiElement(NimTokenType.for)('for')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('i')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.in)('in')
          PsiWhiteSpace(' ')
          NimSpreadExpressionImpl(SPREAD_EXPRESSION)
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('0')
            PsiElement(NimTokenType...)('..')
            NimParanExpressionImpl(PARAN_EXPRESSION)
              PsiElement(NimTokenType.()('(')
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('x')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('len')
                PsiElement(NimTokenType.-)('-')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('1')
              PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimIfExpressionImpl(IF_EXPRESSION)
              PsiElement(NimTokenType.if)('if')
              PsiWhiteSpace(' ')
              NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('len')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('x')
                      PsiElement(NimTokenType.[)('[')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('i')
                      PsiElement(NimTokenType.])(']')
                    PsiElement(NimTokenType.))(')')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.EQUALS)('==')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('0')
              PsiElement(NimTokenType.:)(':')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.return)('return')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('initial')
                PsiElement(NimTokenType.[)('[')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('i')
                PsiElement(NimTokenType.])(']')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimAddExpressionImpl(ADD_EXPRESSION)
              NimCallExpressionImpl(CALL_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('len')
                NimArgumentListImpl(ARGUMENT_LIST)
                  PsiElement(NimTokenType.()('(')
                  NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('x')
                    PsiElement(NimTokenType.[)('[')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('i')
                    PsiElement(NimTokenType.])(']')
                  PsiElement(NimTokenType.))(')')
              PsiElement(NimTokenType.-)('-')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('indexes')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('initial')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimWhileStatementImpl(WHILE_STATEMENT)
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('true')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimWhileStatementImpl(WHILE_STATEMENT)
          PsiElement(NimTokenType.while)('while')
          PsiWhiteSpace(' ')
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('indexes')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('index')
              PsiElement(NimTokenType.])(']')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.EQUALS)('==')
            PsiWhiteSpace(' ')
            NimUnaryExpressionImpl(UNARY_EXPRESSION)
              NimUnaryOpImpl(UNARY_OP)
                PsiElement(NimTokenType.-)('-')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('1')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('      ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('indexes')
                PsiElement(NimTokenType.[)('[')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('index')
                PsiElement(NimTokenType.])(']')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('initial')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('index')
              PsiElement(NimTokenType.])(']')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('      ')
          NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('index')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.PLUS_ASSIGN)('+=')
            PsiWhiteSpace(' ')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('1')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('      ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimIfExpressionImpl(IF_EXPRESSION)
                PsiElement(NimTokenType.if)('if')
                PsiWhiteSpace(' ')
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('index')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.EQUALS)('==')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('x')
                    PsiElement(NimTokenType..)('.')
                    PsiElement(NimTokenType.IDENTIFIER)('len')
                PsiElement(NimTokenType.:)(':')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.return)('return')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('indexes')
                  PsiElement(NimTokenType.[)('[')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('index')
                  PsiElement(NimTokenType.])(']')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.MINUS_ASSIGN)('-=')
              PsiWhiteSpace(' ')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('1')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimDedentationImpl(DEDENTATION)
            <empty list>
        NimForStatementImpl(FOR_STATEMENT)
          PsiElement(NimTokenType.for)('for')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('ni')
          PsiElement(NimTokenType.,)(',')
          PsiWhiteSpace(' ')
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.in)('in')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('indexes')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('      ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('next')
                PsiElement(NimTokenType.[)('[')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('ni')
                PsiElement(NimTokenType.])(']')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('x')
                PsiElement(NimTokenType.[)('[')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('ni')
                PsiElement(NimTokenType.])(']')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('i')
              PsiElement(NimTokenType.])(']')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimDedentationImpl(DEDENTATION)
            <empty list>
        NimStatementImpl(STATEMENT)
          NimVarDeclarationImpl(VAR_DECLARATION)
            PsiElement(NimTokenType.var)('var')
            PsiWhiteSpace(' ')
            NimVarAssignmentImpl(VAR_ASSIGNMENT)
              NimCommasImpl(COMMAS)
                NimVarDefinitionImpl(VAR_DEFINITION)
                  PsiElement(NimTokenType.IDENTIFIER)('res')
              PsiElement(NimTokenType.:)(':')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('seq')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimArrayLiteralImpl(ARRAY_LITERAL)
              PsiElement(NimTokenType.[)('[')
              NimOptionalIndentImpl(OPTIONAL_INDENT)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('T')
              PsiElement(NimTokenType.])(']')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimCallExpressionImpl(CALL_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('shallowCopy')
                NimArgumentListImpl(ARGUMENT_LIST)
                  PsiElement(NimTokenType.()('(')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('res')
                  PsiElement(NimTokenType.,)(',')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('next')
                  PsiElement(NimTokenType.))(')')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('result')
                    PsiElement(NimTokenType..)('.')
                    PsiElement(NimTokenType.IDENTIFIER)('add')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('res')
                    PsiElement(NimTokenType.))(')')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('    ')
              NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('index')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.=)('=')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('0')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('indexes')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('index')
              PsiElement(NimTokenType.])(']')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.MINUS_ASSIGN)('-=')
          PsiWhiteSpace(' ')
          NimLiteralImpl(LITERAL)
            NimIntegerImpl(INTEGER)
              NimSignedIntegerImpl(SIGNED_INTEGER)
                PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('nextPermutation')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('x')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openarray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 11864
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('bool')
      PsiWhiteSpace(' ')
      NimPragmaImpl(PRAGMA)
        PsiElement(NimTokenType.{.)('{.')
        PsiElement(NimTokenType.IDENTIFIER)('discardable')
        PsiElement(NimTokenType..})('.}')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## calculates the next lexicographic permutation, directly modifying ``x``.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## The result is whether a permutation happened, otherwise we have reached')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## the last-ordered permutation.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## .. code-block:: nim')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##     var v = @[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##     v.nextPermutation()')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##     echo v # @[0, 1, 2, 3, 4, 5, 6, 7, 9, 8]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        NimConditionalBlockImpl(CONDITIONAL_BLOCK)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('len')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.<)('<')
            PsiWhiteSpace(' ')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('2')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimReturnStatementImpl(RETURN_STATEMENT)
            PsiElement(NimTokenType.return)('return')
            PsiWhiteSpace(' ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('false')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimDedentationImpl(DEDENTATION)
            <empty list>
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('high')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimWhileStatementImpl(WHILE_STATEMENT)
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.>)('>')
            PsiWhiteSpace(' ')
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimOp7ExpressionImpl(OP_7_EXPRESSION)
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('0')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.and)('and')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiElement(NimTokenType.[)('[')
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('i')
                PsiElement(NimTokenType.-)('-')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('1')
              PsiElement(NimTokenType.])(']')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.GT_EQUAL)('>=')
          PsiWhiteSpace(' ')
          NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('x')
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('dec')
          PsiWhiteSpace(' ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        NimConditionalBlockImpl(CONDITIONAL_BLOCK)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.EQUALS)('==')
            PsiWhiteSpace(' ')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('0')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimReturnStatementImpl(RETURN_STATEMENT)
            PsiElement(NimTokenType.return)('return')
            PsiWhiteSpace(' ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('false')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimDedentationImpl(DEDENTATION)
            <empty list>
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('j')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('high')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimWhileStatementImpl(WHILE_STATEMENT)
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('j')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.GT_EQUAL)('>=')
            PsiWhiteSpace(' ')
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimOp7ExpressionImpl(OP_7_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('i')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.and)('and')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('j')
              PsiElement(NimTokenType.])(']')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.LT_EQUAL)('<=')
          PsiWhiteSpace(' ')
          NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('x')
            PsiElement(NimTokenType.[)('[')
            NimAddExpressionImpl(ADD_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('i')
              PsiElement(NimTokenType.-)('-')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('1')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('dec')
          PsiWhiteSpace(' ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('j')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('swap')
        PsiWhiteSpace(' ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('j')
              PsiElement(NimTokenType.])(']')
            PsiElement(NimTokenType.,)(',')
            PsiWhiteSpace(' ')
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiElement(NimTokenType.[)('[')
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('i')
                PsiElement(NimTokenType.-)('-')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('1')
              PsiElement(NimTokenType.])(']')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimCallExpressionImpl(CALL_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('x')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('reverse')
                NimArgumentListImpl(ARGUMENT_LIST)
                  PsiElement(NimTokenType.()('(')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('i')
                  PsiElement(NimTokenType.,)(',')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('x')
                    PsiElement(NimTokenType..)('.')
                    PsiElement(NimTokenType.IDENTIFIER)('high')
                  PsiElement(NimTokenType.))(')')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('  ')
            NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('result')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('true')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('prevPermutation')
      PsiElement(NimTokenType.*)('*')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('x')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openarray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 12538
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('bool')
      PsiWhiteSpace(' ')
      NimPragmaImpl(PRAGMA)
        PsiElement(NimTokenType.{.)('{.')
        PsiElement(NimTokenType.IDENTIFIER)('discardable')
        PsiElement(NimTokenType..})('.}')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## calculates the previous lexicographic permutation, directly modifying')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## ``x``. The result is whether a permutation happened, otherwise we have')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## reached the first-ordered permutation.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## .. code-block:: nim')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##     var v = @[0, 1, 2, 3, 4, 5, 6, 7, 9, 8]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##     v.prevPermutation()')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('##     echo v # @[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        NimConditionalBlockImpl(CONDITIONAL_BLOCK)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('len')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.<)('<')
            PsiWhiteSpace(' ')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('2')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimReturnStatementImpl(RETURN_STATEMENT)
            PsiElement(NimTokenType.return)('return')
            PsiWhiteSpace(' ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('false')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimDedentationImpl(DEDENTATION)
            <empty list>
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('high')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimWhileStatementImpl(WHILE_STATEMENT)
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.>)('>')
            PsiWhiteSpace(' ')
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimOp7ExpressionImpl(OP_7_EXPRESSION)
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('0')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.and)('and')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiElement(NimTokenType.[)('[')
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('i')
                PsiElement(NimTokenType.-)('-')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('1')
              PsiElement(NimTokenType.])(']')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.LT_EQUAL)('<=')
          PsiWhiteSpace(' ')
          NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('x')
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('dec')
          PsiWhiteSpace(' ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('i')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        NimConditionalBlockImpl(CONDITIONAL_BLOCK)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.EQUALS)('==')
            PsiWhiteSpace(' ')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('0')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimReturnStatementImpl(RETURN_STATEMENT)
            PsiElement(NimTokenType.return)('return')
            PsiWhiteSpace(' ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('false')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimDedentationImpl(DEDENTATION)
            <empty list>
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimCallExpressionImpl(CALL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('reverse')
            NimArgumentListImpl(ARGUMENT_LIST)
              PsiElement(NimTokenType.()('(')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('i')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('x')
                PsiElement(NimTokenType..)('.')
                PsiElement(NimTokenType.IDENTIFIER)('high')
              PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('j')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('high')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimWhileStatementImpl(WHILE_STATEMENT)
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('j')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.GT_EQUAL)('>=')
            PsiWhiteSpace(' ')
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimOp7ExpressionImpl(OP_7_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('i')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.and)('and')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiElement(NimTokenType.[)('[')
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('j')
                PsiElement(NimTokenType.-)('-')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('1')
              PsiElement(NimTokenType.])(']')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.<)('<')
          PsiWhiteSpace(' ')
          NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('x')
            PsiElement(NimTokenType.[)('[')
            NimAddExpressionImpl(ADD_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('i')
              PsiElement(NimTokenType.-)('-')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('1')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('dec')
          PsiWhiteSpace(' ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('j')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('swap')
        PsiWhiteSpace(' ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiElement(NimTokenType.[)('[')
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('i')
                PsiElement(NimTokenType.-)('-')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('1')
              PsiElement(NimTokenType.])(']')
            PsiElement(NimTokenType.,)(',')
            PsiWhiteSpace(' ')
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('x')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('j')
              PsiElement(NimTokenType.])(']')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('result')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('true')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimWhenDeclarationImpl(WHEN_DECLARATION)
      PsiElement(NimTokenType.when)('when')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('isMainModule')
      PsiElement(NimTokenType.:)(':')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('# Tests for lowerBound')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('arr')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimAtExpressionImpl(AT_EXPRESSION)
              PsiElement(NimTokenType.@)('@')
              NimArrayLiteralImpl(ARRAY_LITERAL)
                PsiElement(NimTokenType.[)('[')
                NimOptionalIndentImpl(OPTIONAL_INDENT)
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('1')
                  PsiElement(NimTokenType.,)(',')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('2')
                  PsiElement(NimTokenType.,)(',')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('3')
                  PsiElement(NimTokenType.,)(',')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('5')
                  PsiElement(NimTokenType.,)(',')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('6')
                  PsiElement(NimTokenType.,)(',')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('7')
                  PsiElement(NimTokenType.,)(',')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('8')
                  PsiElement(NimTokenType.,)(',')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('9')
                PsiElement(NimTokenType.])(']')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('assert')
        PsiWhiteSpace(' ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimCallExpressionImpl(CALL_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('arr')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
                NimArgumentListImpl(ARGUMENT_LIST)
                  PsiElement(NimTokenType.()('(')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('0')
                  PsiElement(NimTokenType.))(')')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.EQUALS)('==')
              PsiWhiteSpace(' ')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('0')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('assert')
            PsiWhiteSpace(' ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimCallExpressionImpl(CALL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('arr')
                      PsiElement(NimTokenType..)('.')
                      PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
                    NimArgumentListImpl(ARGUMENT_LIST)
                      PsiElement(NimTokenType.()('(')
                      NimLiteralImpl(LITERAL)
                        NimIntegerImpl(INTEGER)
                          NimSignedIntegerImpl(SIGNED_INTEGER)
                            PsiElement(NimTokenType.INT_LIT)('4')
                      PsiElement(NimTokenType.))(')')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.EQUALS)('==')
                  PsiWhiteSpace(' ')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('3')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('  ')
              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('assert')
                PsiWhiteSpace(' ')
                NimSimpleStatementImpl(SIMPLE_STATEMENT)
                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                    NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                      NimCallExpressionImpl(CALL_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('arr')
                          PsiElement(NimTokenType..)('.')
                          PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
                        NimArgumentListImpl(ARGUMENT_LIST)
                          PsiElement(NimTokenType.()('(')
                          NimLiteralImpl(LITERAL)
                            NimIntegerImpl(INTEGER)
                              NimSignedIntegerImpl(SIGNED_INTEGER)
                                PsiElement(NimTokenType.INT_LIT)('5')
                          PsiElement(NimTokenType.))(')')
                      PsiWhiteSpace(' ')
                      PsiElement(NimTokenType.EQUALS)('==')
                      PsiWhiteSpace(' ')
                      NimLiteralImpl(LITERAL)
                        NimIntegerImpl(INTEGER)
                          NimSignedIntegerImpl(SIGNED_INTEGER)
                            PsiElement(NimTokenType.INT_LIT)('3')
                  PsiWhiteSpace('\n')
                  PsiWhiteSpace('  ')
                  NimSimpleStatementImpl(SIMPLE_STATEMENT)
                    NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('assert')
                    PsiWhiteSpace(' ')
                    NimSimpleStatementImpl(SIMPLE_STATEMENT)
                      NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                          NimCallExpressionImpl(CALL_EXPRESSION)
                            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                PsiElement(NimTokenType.IDENTIFIER)('arr')
                              PsiElement(NimTokenType..)('.')
                              PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
                            NimArgumentListImpl(ARGUMENT_LIST)
                              PsiElement(NimTokenType.()('(')
                              NimLiteralImpl(LITERAL)
                                NimIntegerImpl(INTEGER)
                                  NimSignedIntegerImpl(SIGNED_INTEGER)
                                    PsiElement(NimTokenType.INT_LIT)('10')
                              PsiElement(NimTokenType.))(')')
                          PsiWhiteSpace(' ')
                          PsiElement(NimTokenType.EQUALS)('==')
                          PsiWhiteSpace(' ')
                          NimLiteralImpl(LITERAL)
                            NimIntegerImpl(INTEGER)
                              NimSignedIntegerImpl(SIGNED_INTEGER)
                                PsiElement(NimTokenType.INT_LIT)('8')
                      PsiWhiteSpace('\n')
                      PsiWhiteSpace('  ')
                      NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
                        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('arr')
                        PsiWhiteSpace(' ')
                        PsiElement(NimTokenType.=)('=')
                        PsiWhiteSpace(' ')
                        NimAtExpressionImpl(AT_EXPRESSION)
                          PsiElement(NimTokenType.@)('@')
                          NimArrayLiteralImpl(ARRAY_LITERAL)
                            PsiElement(NimTokenType.[)('[')
                            NimOptionalIndentImpl(OPTIONAL_INDENT)
                              NimLiteralImpl(LITERAL)
                                NimIntegerImpl(INTEGER)
                                  NimSignedIntegerImpl(SIGNED_INTEGER)
                                    PsiElement(NimTokenType.INT_LIT)('1')
                              PsiElement(NimTokenType.,)(',')
                              NimLiteralImpl(LITERAL)
                                NimIntegerImpl(INTEGER)
                                  NimSignedIntegerImpl(SIGNED_INTEGER)
                                    PsiElement(NimTokenType.INT_LIT)('5')
                              PsiElement(NimTokenType.,)(',')
                              NimLiteralImpl(LITERAL)
                                NimIntegerImpl(INTEGER)
                                  NimSignedIntegerImpl(SIGNED_INTEGER)
                                    PsiElement(NimTokenType.INT_LIT)('10')
                            PsiElement(NimTokenType.])(']')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('assert')
        PsiWhiteSpace(' ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimCallExpressionImpl(CALL_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('arr')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
                NimArgumentListImpl(ARGUMENT_LIST)
                  PsiElement(NimTokenType.()('(')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('4')
                  PsiElement(NimTokenType.))(')')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.EQUALS)('==')
              PsiWhiteSpace(' ')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('1')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('assert')
            PsiWhiteSpace(' ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimCallExpressionImpl(CALL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('arr')
                      PsiElement(NimTokenType..)('.')
                      PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
                    NimArgumentListImpl(ARGUMENT_LIST)
                      PsiElement(NimTokenType.()('(')
                      NimLiteralImpl(LITERAL)
                        NimIntegerImpl(INTEGER)
                          NimSignedIntegerImpl(SIGNED_INTEGER)
                            PsiElement(NimTokenType.INT_LIT)('5')
                      PsiElement(NimTokenType.))(')')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.EQUALS)('==')
                  PsiWhiteSpace(' ')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('1')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('  ')
              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('assert')
                PsiWhiteSpace(' ')
                NimSimpleStatementImpl(SIMPLE_STATEMENT)
                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                    NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                      NimCallExpressionImpl(CALL_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('arr')
                          PsiElement(NimTokenType..)('.')
                          PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
                        NimArgumentListImpl(ARGUMENT_LIST)
                          PsiElement(NimTokenType.()('(')
                          NimLiteralImpl(LITERAL)
                            NimIntegerImpl(INTEGER)
                              NimSignedIntegerImpl(SIGNED_INTEGER)
                                PsiElement(NimTokenType.INT_LIT)('6')
                          PsiElement(NimTokenType.))(')')
                      PsiWhiteSpace(' ')
                      PsiElement(NimTokenType.EQUALS)('==')
                      PsiWhiteSpace(' ')
                      NimLiteralImpl(LITERAL)
                        NimIntegerImpl(INTEGER)
                          NimSignedIntegerImpl(SIGNED_INTEGER)
                            PsiElement(NimTokenType.INT_LIT)('2')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('# Tests for isSorted')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('srt1')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimArrayLiteralImpl(ARRAY_LITERAL)
              PsiElement(NimTokenType.[)('[')
              NimOptionalIndentImpl(OPTIONAL_INDENT)
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('1')
                PsiElement(NimTokenType.,)(',')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('2')
                PsiElement(NimTokenType.,)(',')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('3')
                PsiElement(NimTokenType.,)(',')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('4')
                PsiElement(NimTokenType.,)(',')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('4')
                PsiElement(NimTokenType.,)(',')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('4')
                PsiElement(NimTokenType.,)(',')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('4')
                PsiElement(NimTokenType.,)(',')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('5')
              PsiElement(NimTokenType.])(']')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('srt2')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimArrayLiteralImpl(ARRAY_LITERAL)
              PsiElement(NimTokenType.[)('[')
              NimOptionalIndentImpl(OPTIONAL_INDENT)
                NimDoubleQuotedStringLiteralImpl(DOUBLE_QUOTED_STRING_LITERAL)
                  PsiElement(NimTokenType.DOUBLE_QUOTED_LITERAL)('"iello"')
                PsiElement(NimTokenType.,)(',')
                NimDoubleQuotedStringLiteralImpl(DOUBLE_QUOTED_STRING_LITERAL)
                  PsiElement(NimTokenType.DOUBLE_QUOTED_LITERAL)('"hello"')
              PsiElement(NimTokenType.])(']')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('srt3')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimArrayLiteralImpl(ARRAY_LITERAL)
              PsiElement(NimTokenType.[)('[')
              NimOptionalIndentImpl(OPTIONAL_INDENT)
                NimLiteralImpl(LITERAL)
                  NimFloatImpl(FLOAT)
                    PsiElement(NimTokenType.FLOAT_LIT)('1.0')
                PsiElement(NimTokenType.,)(',')
                NimLiteralImpl(LITERAL)
                  NimFloatImpl(FLOAT)
                    PsiElement(NimTokenType.FLOAT_LIT)('1.0')
                PsiElement(NimTokenType.,)(',')
                NimLiteralImpl(LITERAL)
                  NimFloatImpl(FLOAT)
                    PsiElement(NimTokenType.FLOAT_LIT)('1.0')
              PsiElement(NimTokenType.])(']')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('srt4')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.IDENTIFIER)('seq')
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimArrayLiteralImpl(ARRAY_LITERAL)
            PsiElement(NimTokenType.[)('[')
            NimOptionalIndentImpl(OPTIONAL_INDENT)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('int')
            PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('assert')
          PsiWhiteSpace(' ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('srt1')
                    PsiElement(NimTokenType..)('.')
                    PsiElement(NimTokenType.IDENTIFIER)('isSorted')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('cmp')
                    PsiElement(NimTokenType.))(')')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.EQUALS)('==')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('true')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('  ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('assert')
              PsiWhiteSpace(' ')
              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                    NimCallExpressionImpl(CALL_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('srt2')
                        PsiElement(NimTokenType..)('.')
                        PsiElement(NimTokenType.IDENTIFIER)('isSorted')
                      NimArgumentListImpl(ARGUMENT_LIST)
                        PsiElement(NimTokenType.()('(')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('cmp')
                        PsiElement(NimTokenType.))(')')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.EQUALS)('==')
                    PsiWhiteSpace(' ')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('false')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('  ')
                NimSimpleStatementImpl(SIMPLE_STATEMENT)
                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('assert')
                  PsiWhiteSpace(' ')
                  NimSimpleStatementImpl(SIMPLE_STATEMENT)
                    NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                      NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                        NimCallExpressionImpl(CALL_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(NimTokenType.IDENTIFIER)('srt3')
                            PsiElement(NimTokenType..)('.')
                            PsiElement(NimTokenType.IDENTIFIER)('isSorted')
                          NimArgumentListImpl(ARGUMENT_LIST)
                            PsiElement(NimTokenType.()('(')
                            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(NimTokenType.IDENTIFIER)('cmp')
                            PsiElement(NimTokenType.))(')')
                        PsiWhiteSpace(' ')
                        PsiElement(NimTokenType.EQUALS)('==')
                        PsiWhiteSpace(' ')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('true')
                    PsiWhiteSpace('\n')
                    PsiWhiteSpace('  ')
                    NimSimpleStatementImpl(SIMPLE_STATEMENT)
                      NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('assert')
                      PsiWhiteSpace(' ')
                      NimSimpleStatementImpl(SIMPLE_STATEMENT)
                        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                            NimCallExpressionImpl(CALL_EXPRESSION)
                              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                  PsiElement(NimTokenType.IDENTIFIER)('srt4')
                                PsiElement(NimTokenType..)('.')
                                PsiElement(NimTokenType.IDENTIFIER)('isSorted')
                              NimArgumentListImpl(ARGUMENT_LIST)
                                PsiElement(NimTokenType.()('(')
                                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                  PsiElement(NimTokenType.IDENTIFIER)('cmp')
                                PsiElement(NimTokenType.))(')')
                            PsiWhiteSpace(' ')
                            PsiElement(NimTokenType.EQUALS)('==')
                            PsiWhiteSpace(' ')
                            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(NimTokenType.IDENTIFIER)('true')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('srtseq')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('newSeq')
                PsiElement(NimTokenType.[)('[')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('int')
                PsiElement(NimTokenType.])(']')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('assert')
        PsiWhiteSpace(' ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimCallExpressionImpl(CALL_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('srtseq')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('isSorted')
                NimArgumentListImpl(ARGUMENT_LIST)
                  PsiElement(NimTokenType.()('(')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('cmp')
                  PsiElement(NimTokenType.))(')')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.EQUALS)('==')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('true')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('# Tests for reversed')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('arr1')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimAtExpressionImpl(AT_EXPRESSION)
              PsiElement(NimTokenType.@)('@')
              NimArrayLiteralImpl(ARRAY_LITERAL)
                PsiElement(NimTokenType.[)('[')
                NimOptionalIndentImpl(OPTIONAL_INDENT)
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('0')
                  PsiElement(NimTokenType.,)(',')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('1')
                  PsiElement(NimTokenType.,)(',')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('2')
                  PsiElement(NimTokenType.,)(',')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('3')
                  PsiElement(NimTokenType.,)(',')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('4')
                PsiElement(NimTokenType.])(']')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('assert')
        PsiWhiteSpace(' ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimCallExpressionImpl(CALL_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('arr1')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('reversed')
                NimArgumentListImpl(ARGUMENT_LIST)
                  PsiElement(NimTokenType.()('(')
                  PsiElement(NimTokenType.))(')')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.EQUALS)('==')
              PsiWhiteSpace(' ')
              NimAtExpressionImpl(AT_EXPRESSION)
                PsiElement(NimTokenType.@)('@')
                NimArrayLiteralImpl(ARRAY_LITERAL)
                  PsiElement(NimTokenType.[)('[')
                  NimOptionalIndentImpl(OPTIONAL_INDENT)
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('4')
                    PsiElement(NimTokenType.,)(',')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('3')
                    PsiElement(NimTokenType.,)(',')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('2')
                    PsiElement(NimTokenType.,)(',')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('1')
                    PsiElement(NimTokenType.,)(',')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('0')
                  PsiElement(NimTokenType.])(']')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimForStatementImpl(FOR_STATEMENT)
        PsiElement(NimTokenType.for)('for')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('i')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.in)('in')
          PsiWhiteSpace(' ')
          NimSpreadExpressionImpl(SPREAD_EXPRESSION)
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('0')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType...)('..')
            PsiWhiteSpace(' ')
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('high')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('arr1')
                PsiElement(NimTokenType.))(')')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('assert')
          PsiWhiteSpace(' ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('arr1')
                    PsiElement(NimTokenType..)('.')
                    PsiElement(NimTokenType.IDENTIFIER)('reversed')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('0')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('i')
                    PsiElement(NimTokenType.))(')')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.EQUALS)('==')
                PsiWhiteSpace(' ')
                NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                  NimCallExpressionImpl(CALL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('arr1')
                      PsiElement(NimTokenType..)('.')
                      PsiElement(NimTokenType.IDENTIFIER)('reversed')
                    NimArgumentListImpl(ARGUMENT_LIST)
                      PsiElement(NimTokenType.()('(')
                      PsiElement(NimTokenType.))(')')
                  PsiElement(NimTokenType.[)('[')
                  NimAddExpressionImpl(ADD_EXPRESSION)
                    NimCallExpressionImpl(CALL_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('high')
                      NimArgumentListImpl(ARGUMENT_LIST)
                        PsiElement(NimTokenType.()('(')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('arr1')
                        PsiElement(NimTokenType.))(')')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.-)('-')
                    PsiWhiteSpace(' ')
                    NimSpreadExpressionImpl(SPREAD_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('i')
                      PsiWhiteSpace(' ')
                      PsiElement(NimTokenType...)('..')
                      PsiWhiteSpace(' ')
                      NimCallExpressionImpl(CALL_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('high')
                        NimArgumentListImpl(ARGUMENT_LIST)
                          PsiElement(NimTokenType.()('(')
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('arr1')
                          PsiElement(NimTokenType.))(')')
                  PsiElement(NimTokenType.])(']')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('assert')
              PsiWhiteSpace(' ')
              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                    NimCallExpressionImpl(CALL_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('arr1')
                        PsiElement(NimTokenType..)('.')
                        PsiElement(NimTokenType.IDENTIFIER)('reversed')
                      NimArgumentListImpl(ARGUMENT_LIST)
                        PsiElement(NimTokenType.()('(')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('i')
                        PsiElement(NimTokenType.,)(',')
                        PsiWhiteSpace(' ')
                        NimCallExpressionImpl(CALL_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('high')
                          NimArgumentListImpl(ARGUMENT_LIST)
                            PsiElement(NimTokenType.()('(')
                            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(NimTokenType.IDENTIFIER)('arr1')
                            PsiElement(NimTokenType.))(')')
                        PsiElement(NimTokenType.))(')')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.EQUALS)('==')
                    PsiWhiteSpace(' ')
                    NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                      NimCallExpressionImpl(CALL_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('arr1')
                          PsiElement(NimTokenType..)('.')
                          PsiElement(NimTokenType.IDENTIFIER)('reversed')
                        NimArgumentListImpl(ARGUMENT_LIST)
                          PsiElement(NimTokenType.()('(')
                          PsiElement(NimTokenType.))(')')
                      PsiElement(NimTokenType.[)('[')
                      NimAddExpressionImpl(ADD_EXPRESSION)
                        NimSpreadExpressionImpl(SPREAD_EXPRESSION)
                          NimLiteralImpl(LITERAL)
                            NimIntegerImpl(INTEGER)
                              NimSignedIntegerImpl(SIGNED_INTEGER)
                                PsiElement(NimTokenType.INT_LIT)('0')
                          PsiWhiteSpace(' ')
                          PsiElement(NimTokenType...)('..')
                          PsiWhiteSpace(' ')
                          NimCallExpressionImpl(CALL_EXPRESSION)
                            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(NimTokenType.IDENTIFIER)('high')
                            NimArgumentListImpl(ARGUMENT_LIST)
                              PsiElement(NimTokenType.()('(')
                              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                PsiElement(NimTokenType.IDENTIFIER)('arr1')
                              PsiElement(NimTokenType.))(')')
                        PsiWhiteSpace(' ')
                        PsiElement(NimTokenType.-)('-')
                        PsiWhiteSpace(' ')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('i')
                      PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('rotateInternal')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('arg')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openarray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.;)(';')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('first')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('middle')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('last')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 14188
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('int')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('## A port of std::rotate from c++. Ported from `this reference <http://www.cplusplus.com/reference/algorithm/rotate/>`_.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        NimAddExpressionImpl(ADD_EXPRESSION)
          NimAddExpressionImpl(ADD_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('first')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.+)('+')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('last')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.-)('-')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('middle')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        NimConditionalBlockImpl(CONDITIONAL_BLOCK)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('first')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.EQUALS)('==')
              PsiWhiteSpace(' ')
              NimOp7ExpressionImpl(OP_7_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('middle')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.or)('or')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('middle')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.EQUALS)('==')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('last')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimReturnStatementImpl(RETURN_STATEMENT)
            PsiElement(NimTokenType.return)('return')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimDedentationImpl(DEDENTATION)
            <empty list>
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('assert')
        PsiWhiteSpace(' ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('first')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.<)('<')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('middle')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('assert')
            PsiWhiteSpace(' ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('middle')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.<)('<')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('last')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(NimTokenType.<single_line_comment>)('# m prefix for mutable')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('mFirst')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('first')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('mMiddle')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('middle')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('next')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('middle')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimDedentationImpl(DEDENTATION)
            <empty list>
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimCallExpressionImpl(CALL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('swap')
            NimArgumentListImpl(ARGUMENT_LIST)
              PsiElement(NimTokenType.()('(')
              NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('arg')
                PsiElement(NimTokenType.[)('[')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('mFirst')
                PsiElement(NimTokenType.])(']')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('arg')
                PsiElement(NimTokenType.[)('[')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('next')
                PsiElement(NimTokenType.])(']')
              PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('mFirst')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.PLUS_ASSIGN)('+=')
          PsiWhiteSpace(' ')
          NimLiteralImpl(LITERAL)
            NimIntegerImpl(INTEGER)
              NimSignedIntegerImpl(SIGNED_INTEGER)
                PsiElement(NimTokenType.INT_LIT)('1')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('next')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.PLUS_ASSIGN)('+=')
        PsiWhiteSpace(' ')
        NimLiteralImpl(LITERAL)
          NimIntegerImpl(INTEGER)
            NimSignedIntegerImpl(SIGNED_INTEGER)
              PsiElement(NimTokenType.INT_LIT)('1')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
        PsiElement(NimTokenType.if)('if')
        PsiWhiteSpace(' ')
        NimConditionalBlockImpl(CONDITIONAL_BLOCK)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('mFirst')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.EQUALS)('==')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('mMiddle')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimIndentationImpl(INDENTATION)
            <empty list>
          NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('mMiddle')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('next')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimDedentationImpl(DEDENTATION)
            <empty list>
      NimWhileStatementImpl(WHILE_STATEMENT)
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('next')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.NOT_EQUAL)('!=')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('last')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('swap')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('arg')
                  PsiElement(NimTokenType.[)('[')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('mFirst')
                  PsiElement(NimTokenType.])(']')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('arg')
                  PsiElement(NimTokenType.[)('[')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('next')
                  PsiElement(NimTokenType.])(']')
                PsiElement(NimTokenType.))(')')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('mFirst')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.PLUS_ASSIGN)('+=')
            PsiWhiteSpace(' ')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('next')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.PLUS_ASSIGN)('+=')
          PsiWhiteSpace(' ')
          NimLiteralImpl(LITERAL)
            NimIntegerImpl(INTEGER)
              NimSignedIntegerImpl(SIGNED_INTEGER)
                PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
          PsiElement(NimTokenType.if)('if')
          PsiWhiteSpace(' ')
          NimConditionalBlockImpl(CONDITIONAL_BLOCK)
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('mFirst')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.EQUALS)('==')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('mMiddle')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimIndentationImpl(INDENTATION)
              <empty list>
            NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('mMiddle')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('next')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('  ')
            NimDedentationImpl(DEDENTATION)
              <empty list>
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('next')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('mMiddle')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimWhileStatementImpl(WHILE_STATEMENT)
        PsiElement(NimTokenType.while)('while')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('next')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.NOT_EQUAL)('!=')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('last')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('swap')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('arg')
                  PsiElement(NimTokenType.[)('[')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('mFirst')
                  PsiElement(NimTokenType.])(']')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('arg')
                  PsiElement(NimTokenType.[)('[')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('next')
                  PsiElement(NimTokenType.])(']')
                PsiElement(NimTokenType.))(')')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('mFirst')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.PLUS_ASSIGN)('+=')
            PsiWhiteSpace(' ')
            NimLiteralImpl(LITERAL)
              NimIntegerImpl(INTEGER)
                NimSignedIntegerImpl(SIGNED_INTEGER)
                  PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('next')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.PLUS_ASSIGN)('+=')
          PsiWhiteSpace(' ')
          NimLiteralImpl(LITERAL)
            NimIntegerImpl(INTEGER)
              NimSignedIntegerImpl(SIGNED_INTEGER)
                PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIfBlockStatementImpl(IF_BLOCK_STATEMENT)
          PsiElement(NimTokenType.if)('if')
          PsiWhiteSpace(' ')
          NimConditionalBlockImpl(CONDITIONAL_BLOCK)
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('mFirst')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.EQUALS)('==')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('mMiddle')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            NimIndentationImpl(INDENTATION)
              <empty list>
            NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('mMiddle')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('next')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimDedentationImpl(DEDENTATION)
              <empty list>
          NimElseIfStatementImpl(ELSE_IF_STATEMENT)
            PsiElement(NimTokenType.elif)('elif')
            PsiWhiteSpace(' ')
            NimConditionalBlockImpl(CONDITIONAL_BLOCK)
              NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('next')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.EQUALS)('==')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('last')
              PsiElement(NimTokenType.:)(':')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('      ')
              NimIndentationImpl(INDENTATION)
                <empty list>
              NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('next')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.=)('=')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('mMiddle')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('\n')
              NimDedentationImpl(DEDENTATION)
                <empty list>
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimProcedureMethodImpl(PROCEDURE_METHOD)
      PsiElement(NimTokenType.proc)('proc')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('rotatedInternal')
      NimGenericsImpl(GENERICS)
        PsiElement(NimTokenType.[)('[')
        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(NimTokenType.IDENTIFIER)('T')
        PsiElement(NimTokenType.])(']')
      NimParametersImpl(PARAMETERS)
        PsiElement(NimTokenType.()('(')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('arg')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('openarray')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiElement(NimTokenType.;)(';')
        PsiWhiteSpace(' ')
        NimParameterImpl(PARAMETER)
          NimParameterNamesImpl(PARAMETER_NAMES)
            NimCommasImpl(COMMAS)
              PsiElement(NimTokenType.IDENTIFIER)('first')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('middle')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('last')
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 15039
          <empty list>
        PsiElement(NimTokenType.))(')')
      NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('seq')
        NimGenericsImpl(GENERICS)
          PsiElement(NimTokenType.[)('[')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('T')
          PsiElement(NimTokenType.])(']')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.=)('=')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('result')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace(' ')
        NimCallExpressionImpl(CALL_EXPRESSION)
          NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('newSeq')
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
          NimArgumentListImpl(ARGUMENT_LIST)
            PsiElement(NimTokenType.()('(')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('arg')
              PsiElement(NimTokenType..)('.')
              PsiElement(NimTokenType.IDENTIFIER)('len')
            PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimForStatementImpl(FOR_STATEMENT)
        PsiElement(NimTokenType.for)('for')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.in)('in')
            PsiWhiteSpace(' ')
            NimSpreadExpressionImpl(SPREAD_EXPRESSION)
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('0')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType...)('..')
              PsiErrorElement:<expression> expected, got '<'
                <empty list>
          PsiElement(NimTokenType.<)('<')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('first')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('result')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('i')
              PsiElement(NimTokenType.])(']')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.=)('=')
          PsiWhiteSpace(' ')
          NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('arg')
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.let)('let')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('N')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimAddExpressionImpl(ADD_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('last')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.-)('-')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('middle')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.let)('let')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('M')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimAddExpressionImpl(ADD_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('middle')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.-)('-')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('first')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimForStatementImpl(FOR_STATEMENT)
        PsiElement(NimTokenType.for)('for')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.in)('in')
            PsiWhiteSpace(' ')
            NimSpreadExpressionImpl(SPREAD_EXPRESSION)
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('0')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType...)('..')
              PsiErrorElement:<expression> expected, got '<'
                <empty list>
          PsiElement(NimTokenType.<)('<')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('N')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('result')
              PsiElement(NimTokenType.[)('[')
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('first')
                PsiElement(NimTokenType.+)('+')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('i')
              PsiElement(NimTokenType.])(']')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.=)('=')
          PsiWhiteSpace(' ')
          NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('arg')
            PsiElement(NimTokenType.[)('[')
            NimAddExpressionImpl(ADD_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('middle')
              PsiElement(NimTokenType.+)('+')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimForStatementImpl(FOR_STATEMENT)
        PsiElement(NimTokenType.for)('for')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.in)('in')
            PsiWhiteSpace(' ')
            NimSpreadExpressionImpl(SPREAD_EXPRESSION)
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('0')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType...)('..')
              PsiErrorElement:<expression> expected, got '<'
                <empty list>
          PsiElement(NimTokenType.<)('<')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('M')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('result')
              PsiElement(NimTokenType.[)('[')
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimAddExpressionImpl(ADD_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('first')
                  PsiElement(NimTokenType.+)('+')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('N')
                PsiElement(NimTokenType.+)('+')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('i')
              PsiElement(NimTokenType.])(']')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.=)('=')
          PsiWhiteSpace(' ')
          NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('arg')
            PsiElement(NimTokenType.[)('[')
            NimAddExpressionImpl(ADD_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('first')
              PsiElement(NimTokenType.+)('+')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimForStatementImpl(FOR_STATEMENT)
        PsiElement(NimTokenType.for)('for')
        PsiWhiteSpace(' ')
        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.in)('in')
            PsiWhiteSpace(' ')
            NimSpreadExpressionImpl(SPREAD_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('last')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType...)('..')
              PsiErrorElement:<expression> expected, got '<'
                <empty list>
          PsiElement(NimTokenType.<)('<')
          PsiWhiteSpace(' ')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('arg')
            PsiElement(NimTokenType..)('.')
            PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimAssignmentStatementImpl(ASSIGNMENT_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('result')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('i')
              PsiElement(NimTokenType.])(']')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.=)('=')
          PsiWhiteSpace(' ')
          NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('arg')
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('i')
            PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimDedentationImpl(DEDENTATION)
        <empty list>
  NimSimpleStatementImpl(SIMPLE_STATEMENT)
    NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
      NimProcExpressionImpl(PROC_EXPRESSION)
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('rotateLeft')
        PsiElement(NimTokenType.*)('*')
        NimGenericsImpl(GENERICS)
          PsiElement(NimTokenType.[)('[')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('T')
          PsiElement(NimTokenType.])(']')
        NimParametersImpl(PARAMETERS)
          PsiElement(NimTokenType.()('(')
          NimParameterImpl(PARAMETER)
            NimParameterNamesImpl(PARAMETER_NAMES)
              NimCommasImpl(COMMAS)
                PsiElement(NimTokenType.IDENTIFIER)('arg')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.var)('var')
            PsiWhiteSpace(' ')
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('openarray')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('T')
              PsiElement(NimTokenType.])(']')
          PsiElement(NimTokenType.;)(';')
          PsiWhiteSpace(' ')
          NimParameterImpl(PARAMETER)
            NimParameterNamesImpl(PARAMETER_NAMES)
              NimCommasImpl(COMMAS)
                PsiElement(NimTokenType.IDENTIFIER)('slice')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('HSlice')
            NimGenericsImpl(GENERICS)
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('int')
              NimGenericsAdditionalImpl(GENERICS_ADDITIONAL)
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('int')
              PsiElement(NimTokenType.])(']')
          PsiElement(NimTokenType.;)(';')
          PsiWhiteSpace(' ')
          NimParameterImpl(PARAMETER)
            NimParameterNamesImpl(PARAMETER_NAMES)
              NimCommasImpl(COMMAS)
                PsiElement(NimTokenType.IDENTIFIER)('dist')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('int')
          PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 15420
            <empty list>
          PsiElement(NimTokenType.))(')')
        NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace(' ')
        NimPragmaImpl(PRAGMA)
          PsiElement(NimTokenType.{.)('{.')
          PsiElement(NimTokenType.IDENTIFIER)('discardable')
          PsiElement(NimTokenType..})('.}')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('## performs a left rotation on a range of elements. If you want to rotate')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('## right, use a negative ``dist``. Specifically, ``rotateLeft`` rotates')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('## the elements at ``slice`` by ``dist`` positions.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('## | The element at index ``slice.a + dist`` will be at index ``slice.a``.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('## | The element at index ``slice.b`` will be at ``slice.a + dist -1``.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('## | The element at index ``slice.a`` will be at ``slice.b + 1 - dist``.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('## | The element at index ``slice.a + dist - 1`` will be at ``slice.b``.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('## Elements outside of ``slice`` will be left unchanged.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('## The time complexity is linear to ``slice.b - slice.a + 1``.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('## ``slice``')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('##   The indices of the element range that should be rotated.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('## ``dist``')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('##   The distance in amount of elements that the data should be rotated.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('##   Can be negative, can be any number.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('## .. code-block:: nim')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('##')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('##   var list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('##   list.rotateLeft(1 .. 8, 3)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('##   doAssert list == [0, 4, 5, 6, 7, 8, 1, 2, 3, 9, 10]')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimStatementImpl(STATEMENT)
          NimVarDeclarationImpl(VAR_DECLARATION)
            PsiElement(NimTokenType.let)('let')
            PsiWhiteSpace(' ')
            NimVarAssignmentImpl(VAR_ASSIGNMENT)
              NimCommasImpl(COMMAS)
                NimVarDefinitionImpl(VAR_DEFINITION)
                  PsiElement(NimTokenType.IDENTIFIER)('sliceLen')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimAddExpressionImpl(ADD_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('slice')
                    PsiElement(NimTokenType..)('.')
                    PsiElement(NimTokenType.IDENTIFIER)('b')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.+)('+')
                  PsiWhiteSpace(' ')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('1')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.-)('-')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('slice')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimStatementImpl(STATEMENT)
          NimVarDeclarationImpl(VAR_DECLARATION)
            PsiElement(NimTokenType.let)('let')
            PsiWhiteSpace(' ')
            NimVarAssignmentImpl(VAR_ASSIGNMENT)
              NimCommasImpl(COMMAS)
                NimVarDefinitionImpl(VAR_DEFINITION)
                  PsiElement(NimTokenType.IDENTIFIER)('distLeft')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
                NimParanExpressionImpl(PARAN_EXPRESSION)
                  PsiElement(NimTokenType.()('(')
                  NimAddExpressionImpl(ADD_EXPRESSION)
                    NimParanExpressionImpl(PARAN_EXPRESSION)
                      PsiElement(NimTokenType.()('(')
                      NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('dist')
                        PsiWhiteSpace(' ')
                        PsiElement(NimTokenType.mod)('mod')
                        PsiWhiteSpace(' ')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('sliceLen')
                      PsiElement(NimTokenType.))(')')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.+)('+')
                    PsiWhiteSpace(' ')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('sliceLen')
                  PsiElement(NimTokenType.))(')')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.mod)('mod')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('sliceLen')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('arg')
                PsiElement(NimTokenType..)('.')
                PsiElement(NimTokenType.IDENTIFIER)('rotateInternal')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('slice')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('a')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimAddExpressionImpl(ADD_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('slice')
                    PsiElement(NimTokenType..)('.')
                    PsiElement(NimTokenType.IDENTIFIER)('a')
                  PsiElement(NimTokenType.+)('+')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('distLeft')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimAddExpressionImpl(ADD_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('slice')
                    PsiElement(NimTokenType..)('.')
                    PsiElement(NimTokenType.IDENTIFIER)('b')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.+)('+')
                  PsiWhiteSpace(' ')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('1')
                PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        NimDedentationImpl(DEDENTATION)
          <empty list>
  NimSimpleStatementImpl(SIMPLE_STATEMENT)
    NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
      NimProcExpressionImpl(PROC_EXPRESSION)
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('rotateLeft')
        PsiElement(NimTokenType.*)('*')
        NimGenericsImpl(GENERICS)
          PsiElement(NimTokenType.[)('[')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('T')
          PsiElement(NimTokenType.])(']')
        NimParametersImpl(PARAMETERS)
          PsiElement(NimTokenType.()('(')
          NimParameterImpl(PARAMETER)
            NimParameterNamesImpl(PARAMETER_NAMES)
              NimCommasImpl(COMMAS)
                PsiElement(NimTokenType.IDENTIFIER)('arg')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.var)('var')
            PsiWhiteSpace(' ')
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('openarray')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('T')
              PsiElement(NimTokenType.])(']')
          PsiElement(NimTokenType.;)(';')
          PsiWhiteSpace(' ')
          NimParameterImpl(PARAMETER)
            NimParameterNamesImpl(PARAMETER_NAMES)
              NimCommasImpl(COMMAS)
                PsiElement(NimTokenType.IDENTIFIER)('dist')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('int')
          PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 16702
            <empty list>
          PsiElement(NimTokenType.))(')')
        NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('int')
        PsiWhiteSpace(' ')
        NimPragmaImpl(PRAGMA)
          PsiElement(NimTokenType.{.)('{.')
          PsiElement(NimTokenType.IDENTIFIER)('discardable')
          PsiElement(NimTokenType..})('.}')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('## Default arguments for slice, so that this procedure operates on the entire')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('## ``arg``, and not just on a part of it.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<example>)('runnableExamples:')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiComment(NimTokenType.<doc_runnable>)('var a = [1, 2, 3, 4, 5]')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiComment(NimTokenType.<doc_runnable>)('a.rotateLeft(2)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiComment(NimTokenType.<doc_runnable>)('doAssert a == [3, 4, 5, 1, 2]')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimStatementImpl(STATEMENT)
          NimVarDeclarationImpl(VAR_DECLARATION)
            PsiElement(NimTokenType.let)('let')
            PsiWhiteSpace(' ')
            NimVarAssignmentImpl(VAR_ASSIGNMENT)
              NimCommasImpl(COMMAS)
                NimVarDefinitionImpl(VAR_DEFINITION)
                  PsiElement(NimTokenType.IDENTIFIER)('arglen')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('arg')
                PsiElement(NimTokenType..)('.')
                PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimStatementImpl(STATEMENT)
          NimVarDeclarationImpl(VAR_DECLARATION)
            PsiElement(NimTokenType.let)('let')
            PsiWhiteSpace(' ')
            NimVarAssignmentImpl(VAR_ASSIGNMENT)
              NimCommasImpl(COMMAS)
                NimVarDefinitionImpl(VAR_DEFINITION)
                  PsiElement(NimTokenType.IDENTIFIER)('distLeft')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
                NimParanExpressionImpl(PARAN_EXPRESSION)
                  PsiElement(NimTokenType.()('(')
                  NimAddExpressionImpl(ADD_EXPRESSION)
                    NimParanExpressionImpl(PARAN_EXPRESSION)
                      PsiElement(NimTokenType.()('(')
                      NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('dist')
                        PsiWhiteSpace(' ')
                        PsiElement(NimTokenType.mod)('mod')
                        PsiWhiteSpace(' ')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('arglen')
                      PsiElement(NimTokenType.))(')')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.+)('+')
                    PsiWhiteSpace(' ')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('arglen')
                  PsiElement(NimTokenType.))(')')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.mod)('mod')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('arglen')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('arg')
                PsiElement(NimTokenType..)('.')
                PsiElement(NimTokenType.IDENTIFIER)('rotateInternal')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('0')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('distLeft')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('arglen')
                PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        NimDedentationImpl(DEDENTATION)
          <empty list>
  NimSimpleStatementImpl(SIMPLE_STATEMENT)
    NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
      NimProcExpressionImpl(PROC_EXPRESSION)
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('rotatedLeft')
        PsiElement(NimTokenType.*)('*')
        NimGenericsImpl(GENERICS)
          PsiElement(NimTokenType.[)('[')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('T')
          PsiElement(NimTokenType.])(']')
        NimParametersImpl(PARAMETERS)
          PsiElement(NimTokenType.()('(')
          NimParameterImpl(PARAMETER)
            NimParameterNamesImpl(PARAMETER_NAMES)
              NimCommasImpl(COMMAS)
                PsiElement(NimTokenType.IDENTIFIER)('arg')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace(' ')
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('openarray')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('T')
              PsiElement(NimTokenType.])(']')
          PsiElement(NimTokenType.;)(';')
          PsiWhiteSpace(' ')
          NimParameterImpl(PARAMETER)
            NimParameterNamesImpl(PARAMETER_NAMES)
              NimCommasImpl(COMMAS)
                PsiElement(NimTokenType.IDENTIFIER)('slice')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('HSlice')
            NimGenericsImpl(GENERICS)
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('int')
              NimGenericsAdditionalImpl(GENERICS_ADDITIONAL)
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('int')
              PsiElement(NimTokenType.])(']')
          PsiElement(NimTokenType.,)(',')
          PsiWhiteSpace(' ')
          NimParameterImpl(PARAMETER)
            NimParameterNamesImpl(PARAMETER_NAMES)
              NimCommasImpl(COMMAS)
                PsiElement(NimTokenType.IDENTIFIER)('dist')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('int')
          PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 17156
            <empty list>
          PsiElement(NimTokenType.))(')')
        NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('seq')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('## Same as ``rotateLeft``, just with the difference that it does')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('## not modify the argument. It creates a new ``seq`` instead.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimStatementImpl(STATEMENT)
          NimVarDeclarationImpl(VAR_DECLARATION)
            PsiElement(NimTokenType.let)('let')
            PsiWhiteSpace(' ')
            NimVarAssignmentImpl(VAR_ASSIGNMENT)
              NimCommasImpl(COMMAS)
                NimVarDefinitionImpl(VAR_DEFINITION)
                  PsiElement(NimTokenType.IDENTIFIER)('sliceLen')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimAddExpressionImpl(ADD_EXPRESSION)
                NimAddExpressionImpl(ADD_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('slice')
                    PsiElement(NimTokenType..)('.')
                    PsiElement(NimTokenType.IDENTIFIER)('b')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.+)('+')
                  PsiWhiteSpace(' ')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('1')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.-)('-')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('slice')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('a')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimStatementImpl(STATEMENT)
          NimVarDeclarationImpl(VAR_DECLARATION)
            PsiElement(NimTokenType.let)('let')
            PsiWhiteSpace(' ')
            NimVarAssignmentImpl(VAR_ASSIGNMENT)
              NimCommasImpl(COMMAS)
                NimVarDefinitionImpl(VAR_DEFINITION)
                  PsiElement(NimTokenType.IDENTIFIER)('distLeft')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
                NimParanExpressionImpl(PARAN_EXPRESSION)
                  PsiElement(NimTokenType.()('(')
                  NimAddExpressionImpl(ADD_EXPRESSION)
                    NimParanExpressionImpl(PARAN_EXPRESSION)
                      PsiElement(NimTokenType.()('(')
                      NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('dist')
                        PsiWhiteSpace(' ')
                        PsiElement(NimTokenType.mod)('mod')
                        PsiWhiteSpace(' ')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('sliceLen')
                      PsiElement(NimTokenType.))(')')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.+)('+')
                    PsiWhiteSpace(' ')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('sliceLen')
                  PsiElement(NimTokenType.))(')')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.mod)('mod')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('sliceLen')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('arg')
                PsiElement(NimTokenType..)('.')
                PsiElement(NimTokenType.IDENTIFIER)('rotatedInternal')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('slice')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('a')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimAddExpressionImpl(ADD_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('slice')
                    PsiElement(NimTokenType..)('.')
                    PsiElement(NimTokenType.IDENTIFIER)('a')
                  PsiElement(NimTokenType.+)('+')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('distLeft')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimAddExpressionImpl(ADD_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('slice')
                    PsiElement(NimTokenType..)('.')
                    PsiElement(NimTokenType.IDENTIFIER)('b')
                  PsiElement(NimTokenType.+)('+')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('1')
                PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        NimDedentationImpl(DEDENTATION)
          <empty list>
  NimSimpleStatementImpl(SIMPLE_STATEMENT)
    NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
      NimProcExpressionImpl(PROC_EXPRESSION)
        PsiElement(NimTokenType.proc)('proc')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('rotatedLeft')
        PsiElement(NimTokenType.*)('*')
        NimGenericsImpl(GENERICS)
          PsiElement(NimTokenType.[)('[')
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('T')
          PsiElement(NimTokenType.])(']')
        NimParametersImpl(PARAMETERS)
          PsiElement(NimTokenType.()('(')
          NimParameterImpl(PARAMETER)
            NimParameterNamesImpl(PARAMETER_NAMES)
              NimCommasImpl(COMMAS)
                PsiElement(NimTokenType.IDENTIFIER)('arg')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace(' ')
            NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('openarray')
              PsiElement(NimTokenType.[)('[')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('T')
              PsiElement(NimTokenType.])(']')
          PsiElement(NimTokenType.;)(';')
          PsiWhiteSpace(' ')
          NimParameterImpl(PARAMETER)
            NimParameterNamesImpl(PARAMETER_NAMES)
              NimCommasImpl(COMMAS)
                PsiElement(NimTokenType.IDENTIFIER)('dist')
            PsiElement(NimTokenType.:)(':')
            PsiWhiteSpace(' ')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('int')
          PsiErrorElement:Empty element parsed in 'PParameters_1_1_1' at offset 17511
            <empty list>
          PsiElement(NimTokenType.))(')')
        NimMemberTypeAssignmentImpl(MEMBER_TYPE_ASSIGNMENT)
          PsiElement(NimTokenType.:)(':')
          PsiWhiteSpace(' ')
          PsiElement(NimTokenType.IDENTIFIER)('seq')
          NimGenericsImpl(GENERICS)
            PsiElement(NimTokenType.[)('[')
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('T')
            PsiElement(NimTokenType.])(']')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('## Same as ``rotateLeft``, just with the difference that it does')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(NimTokenType.<single_line_comment>)('## not modify the argument. It creates a new ``seq`` instead.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimStatementImpl(STATEMENT)
          NimVarDeclarationImpl(VAR_DECLARATION)
            PsiElement(NimTokenType.let)('let')
            PsiWhiteSpace(' ')
            NimVarAssignmentImpl(VAR_ASSIGNMENT)
              NimCommasImpl(COMMAS)
                NimVarDefinitionImpl(VAR_DEFINITION)
                  PsiElement(NimTokenType.IDENTIFIER)('arglen')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('arg')
                PsiElement(NimTokenType..)('.')
                PsiElement(NimTokenType.IDENTIFIER)('len')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimStatementImpl(STATEMENT)
          NimVarDeclarationImpl(VAR_DECLARATION)
            PsiElement(NimTokenType.let)('let')
            PsiWhiteSpace(' ')
            NimVarAssignmentImpl(VAR_ASSIGNMENT)
              NimCommasImpl(COMMAS)
                NimVarDefinitionImpl(VAR_DEFINITION)
                  PsiElement(NimTokenType.IDENTIFIER)('distLeft')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
                NimParanExpressionImpl(PARAN_EXPRESSION)
                  PsiElement(NimTokenType.()('(')
                  NimAddExpressionImpl(ADD_EXPRESSION)
                    NimParanExpressionImpl(PARAN_EXPRESSION)
                      PsiElement(NimTokenType.()('(')
                      NimMultiplyExpressionImpl(MULTIPLY_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('dist')
                        PsiWhiteSpace(' ')
                        PsiElement(NimTokenType.mod)('mod')
                        PsiWhiteSpace(' ')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('arglen')
                      PsiElement(NimTokenType.))(')')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.+)('+')
                    PsiWhiteSpace(' ')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('arglen')
                  PsiElement(NimTokenType.))(')')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.mod)('mod')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('arglen')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('arg')
                PsiElement(NimTokenType..)('.')
                PsiElement(NimTokenType.IDENTIFIER)('rotatedInternal')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('0')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('distLeft')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('arg')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('len')
                PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        NimDedentationImpl(DEDENTATION)
          <empty list>
  NimTopDeclarationImpl(TOP_DECLARATION)
    NimWhenDeclarationImpl(WHEN_DECLARATION)
      PsiElement(NimTokenType.when)('when')
      PsiWhiteSpace(' ')
      PsiElement(NimTokenType.IDENTIFIER)('isMainModule')
      PsiElement(NimTokenType.:)(':')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimIndentationImpl(INDENTATION)
        <empty list>
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('list')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimArrayLiteralImpl(ARRAY_LITERAL)
              PsiElement(NimTokenType.[)('[')
              NimOptionalIndentImpl(OPTIONAL_INDENT)
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('0')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('1')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('2')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('3')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('4')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('5')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('6')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('7')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('8')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('9')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('10')
              PsiElement(NimTokenType.])(']')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.let)('let')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('list2')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('list')
                PsiElement(NimTokenType..)('.')
                PsiElement(NimTokenType.IDENTIFIER)('rotatedLeft')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimSpreadExpressionImpl(SPREAD_EXPRESSION)
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('1')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType...)('..')
                    PsiErrorElement:<expression> expected, got '<'
                      <empty list>
                  PsiElement(NimTokenType.<)('<')
                  PsiWhiteSpace(' ')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('9')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('3')
                PsiElement(NimTokenType.))(')')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.let)('let')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('expected')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimArrayLiteralImpl(ARRAY_LITERAL)
              PsiElement(NimTokenType.[)('[')
              NimOptionalIndentImpl(OPTIONAL_INDENT)
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('0')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('4')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('5')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('6')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('7')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('8')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('1')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('2')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('3')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('9')
                PsiElement(NimTokenType.,)(',')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('10')
              PsiElement(NimTokenType.])(']')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('doAssert')
        PsiWhiteSpace(' ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimCallExpressionImpl(CALL_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('list')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('rotateLeft')
                NimArgumentListImpl(ARGUMENT_LIST)
                  PsiElement(NimTokenType.()('(')
                  NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                    NimSpreadExpressionImpl(SPREAD_EXPRESSION)
                      NimLiteralImpl(LITERAL)
                        NimIntegerImpl(INTEGER)
                          NimSignedIntegerImpl(SIGNED_INTEGER)
                            PsiElement(NimTokenType.INT_LIT)('1')
                      PsiWhiteSpace(' ')
                      PsiElement(NimTokenType...)('..')
                      PsiErrorElement:<expression> expected, got '<'
                        <empty list>
                    PsiElement(NimTokenType.<)('<')
                    PsiWhiteSpace(' ')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('9')
                  PsiElement(NimTokenType.,)(',')
                  PsiWhiteSpace(' ')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('3')
                  PsiElement(NimTokenType.))(')')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.EQUALS)('==')
              PsiWhiteSpace(' ')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('6')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('doAssert')
            PsiWhiteSpace(' ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('list')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.EQUALS)('==')
                  PsiWhiteSpace(' ')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('expected')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('  ')
              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                PsiWhiteSpace(' ')
                NimSimpleStatementImpl(SIMPLE_STATEMENT)
                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                    NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('list2')
                      PsiWhiteSpace(' ')
                      PsiElement(NimTokenType.EQUALS)('==')
                      PsiWhiteSpace(' ')
                      NimAtExpressionImpl(AT_EXPRESSION)
                        PsiElement(NimTokenType.@)('@')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('expected')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimStatementImpl(STATEMENT)
        NimVarDeclarationImpl(VAR_DECLARATION)
          PsiElement(NimTokenType.var)('var')
          PsiWhiteSpace(' ')
          NimVarAssignmentImpl(VAR_ASSIGNMENT)
            NimCommasImpl(COMMAS)
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('s0')
              PsiElement(NimTokenType.,)(',')
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('s1')
              PsiElement(NimTokenType.,)(',')
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('s2')
              PsiElement(NimTokenType.,)(',')
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('s3')
              PsiElement(NimTokenType.,)(',')
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('s4')
              PsiElement(NimTokenType.,)(',')
              NimVarDefinitionImpl(VAR_DEFINITION)
                PsiElement(NimTokenType.IDENTIFIER)('s5')
            PsiWhiteSpace(' ')
            PsiElement(NimTokenType.=)('=')
            PsiWhiteSpace(' ')
            NimDoubleQuotedStringLiteralImpl(DOUBLE_QUOTED_STRING_LITERAL)
              PsiElement(NimTokenType.DOUBLE_QUOTED_LITERAL)('"xxxabcdefgxxx"')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimSimpleStatementImpl(SIMPLE_STATEMENT)
        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(NimTokenType.IDENTIFIER)('doAssert')
        PsiWhiteSpace(' ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
              NimCallExpressionImpl(CALL_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('s0')
                  PsiElement(NimTokenType..)('.')
                  PsiElement(NimTokenType.IDENTIFIER)('rotateLeft')
                NimArgumentListImpl(ARGUMENT_LIST)
                  PsiElement(NimTokenType.()('(')
                  NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                    NimSpreadExpressionImpl(SPREAD_EXPRESSION)
                      NimLiteralImpl(LITERAL)
                        NimIntegerImpl(INTEGER)
                          NimSignedIntegerImpl(SIGNED_INTEGER)
                            PsiElement(NimTokenType.INT_LIT)('3')
                      PsiWhiteSpace(' ')
                      PsiElement(NimTokenType...)('..')
                      PsiErrorElement:<expression> expected, got '<'
                        <empty list>
                    PsiElement(NimTokenType.<)('<')
                    PsiWhiteSpace(' ')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('10')
                  PsiElement(NimTokenType.,)(',')
                  PsiWhiteSpace(' ')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('3')
                  PsiElement(NimTokenType.))(')')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.EQUALS)('==')
              PsiWhiteSpace(' ')
              NimLiteralImpl(LITERAL)
                NimIntegerImpl(INTEGER)
                  NimSignedIntegerImpl(SIGNED_INTEGER)
                    PsiElement(NimTokenType.INT_LIT)('7')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('doAssert')
            PsiWhiteSpace(' ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('s0')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.EQUALS)('==')
                  PsiWhiteSpace(' ')
                  NimDoubleQuotedStringLiteralImpl(DOUBLE_QUOTED_STRING_LITERAL)
                    PsiElement(NimTokenType.DOUBLE_QUOTED_LITERAL)('"xxxdefgabcxxx"')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('  ')
              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                PsiWhiteSpace(' ')
                NimSimpleStatementImpl(SIMPLE_STATEMENT)
                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                    NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                      NimCallExpressionImpl(CALL_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('s1')
                          PsiElement(NimTokenType..)('.')
                          PsiElement(NimTokenType.IDENTIFIER)('rotateLeft')
                        NimArgumentListImpl(ARGUMENT_LIST)
                          PsiElement(NimTokenType.()('(')
                          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                            NimSpreadExpressionImpl(SPREAD_EXPRESSION)
                              NimLiteralImpl(LITERAL)
                                NimIntegerImpl(INTEGER)
                                  NimSignedIntegerImpl(SIGNED_INTEGER)
                                    PsiElement(NimTokenType.INT_LIT)('3')
                              PsiWhiteSpace(' ')
                              PsiElement(NimTokenType...)('..')
                              PsiErrorElement:<expression> expected, got '<'
                                <empty list>
                            PsiElement(NimTokenType.<)('<')
                            PsiWhiteSpace(' ')
                            NimLiteralImpl(LITERAL)
                              NimIntegerImpl(INTEGER)
                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                  PsiElement(NimTokenType.INT_LIT)('10')
                          PsiElement(NimTokenType.,)(',')
                          PsiWhiteSpace(' ')
                          NimLiteralImpl(LITERAL)
                            NimIntegerImpl(INTEGER)
                              NimSignedIntegerImpl(SIGNED_INTEGER)
                                PsiElement(NimTokenType.INT_LIT)('2')
                          PsiElement(NimTokenType.))(')')
                      PsiWhiteSpace(' ')
                      PsiElement(NimTokenType.EQUALS)('==')
                      PsiWhiteSpace(' ')
                      NimLiteralImpl(LITERAL)
                        NimIntegerImpl(INTEGER)
                          NimSignedIntegerImpl(SIGNED_INTEGER)
                            PsiElement(NimTokenType.INT_LIT)('8')
                  PsiWhiteSpace('\n')
                  PsiWhiteSpace('  ')
                  NimSimpleStatementImpl(SIMPLE_STATEMENT)
                    NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                    PsiWhiteSpace(' ')
                    NimSimpleStatementImpl(SIMPLE_STATEMENT)
                      NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('s1')
                          PsiWhiteSpace(' ')
                          PsiElement(NimTokenType.EQUALS)('==')
                          PsiWhiteSpace(' ')
                          NimDoubleQuotedStringLiteralImpl(DOUBLE_QUOTED_STRING_LITERAL)
                            PsiElement(NimTokenType.DOUBLE_QUOTED_LITERAL)('"xxxcdefgabxxx"')
                      PsiWhiteSpace('\n')
                      PsiWhiteSpace('  ')
                      NimSimpleStatementImpl(SIMPLE_STATEMENT)
                        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                        PsiWhiteSpace(' ')
                        NimSimpleStatementImpl(SIMPLE_STATEMENT)
                          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                              NimCallExpressionImpl(CALL_EXPRESSION)
                                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                    PsiElement(NimTokenType.IDENTIFIER)('s2')
                                  PsiElement(NimTokenType..)('.')
                                  PsiElement(NimTokenType.IDENTIFIER)('rotateLeft')
                                NimArgumentListImpl(ARGUMENT_LIST)
                                  PsiElement(NimTokenType.()('(')
                                  NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                                    NimSpreadExpressionImpl(SPREAD_EXPRESSION)
                                      NimLiteralImpl(LITERAL)
                                        NimIntegerImpl(INTEGER)
                                          NimSignedIntegerImpl(SIGNED_INTEGER)
                                            PsiElement(NimTokenType.INT_LIT)('3')
                                      PsiWhiteSpace(' ')
                                      PsiElement(NimTokenType...)('..')
                                      PsiErrorElement:<expression> expected, got '<'
                                        <empty list>
                                    PsiElement(NimTokenType.<)('<')
                                    PsiWhiteSpace(' ')
                                    NimLiteralImpl(LITERAL)
                                      NimIntegerImpl(INTEGER)
                                        NimSignedIntegerImpl(SIGNED_INTEGER)
                                          PsiElement(NimTokenType.INT_LIT)('10')
                                  PsiElement(NimTokenType.,)(',')
                                  PsiWhiteSpace(' ')
                                  NimLiteralImpl(LITERAL)
                                    NimIntegerImpl(INTEGER)
                                      NimSignedIntegerImpl(SIGNED_INTEGER)
                                        PsiElement(NimTokenType.INT_LIT)('4')
                                  PsiElement(NimTokenType.))(')')
                              PsiWhiteSpace(' ')
                              PsiElement(NimTokenType.EQUALS)('==')
                              PsiWhiteSpace(' ')
                              NimLiteralImpl(LITERAL)
                                NimIntegerImpl(INTEGER)
                                  NimSignedIntegerImpl(SIGNED_INTEGER)
                                    PsiElement(NimTokenType.INT_LIT)('6')
                          PsiWhiteSpace('\n')
                          PsiWhiteSpace('  ')
                          NimSimpleStatementImpl(SIMPLE_STATEMENT)
                            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                            PsiWhiteSpace(' ')
                            NimSimpleStatementImpl(SIMPLE_STATEMENT)
                              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                    PsiElement(NimTokenType.IDENTIFIER)('s2')
                                  PsiWhiteSpace(' ')
                                  PsiElement(NimTokenType.EQUALS)('==')
                                  PsiWhiteSpace(' ')
                                  NimDoubleQuotedStringLiteralImpl(DOUBLE_QUOTED_STRING_LITERAL)
                                    PsiElement(NimTokenType.DOUBLE_QUOTED_LITERAL)('"xxxefgabcdxxx"')
                              PsiWhiteSpace('\n')
                              PsiWhiteSpace('  ')
                              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                    PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                                PsiWhiteSpace(' ')
                                NimSimpleStatementImpl(SIMPLE_STATEMENT)
                                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                                    NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                                      NimCallExpressionImpl(CALL_EXPRESSION)
                                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                            PsiElement(NimTokenType.IDENTIFIER)('s3')
                                          PsiElement(NimTokenType..)('.')
                                          PsiElement(NimTokenType.IDENTIFIER)('rotateLeft')
                                        NimArgumentListImpl(ARGUMENT_LIST)
                                          PsiElement(NimTokenType.()('(')
                                          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                                            NimSpreadExpressionImpl(SPREAD_EXPRESSION)
                                              NimLiteralImpl(LITERAL)
                                                NimIntegerImpl(INTEGER)
                                                  NimSignedIntegerImpl(SIGNED_INTEGER)
                                                    PsiElement(NimTokenType.INT_LIT)('3')
                                              PsiWhiteSpace(' ')
                                              PsiElement(NimTokenType...)('..')
                                              PsiErrorElement:<expression> expected, got '<'
                                                <empty list>
                                            PsiElement(NimTokenType.<)('<')
                                            PsiWhiteSpace(' ')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('10')
                                          PsiElement(NimTokenType.,)(',')
                                          PsiWhiteSpace(' ')
                                          NimUnaryExpressionImpl(UNARY_EXPRESSION)
                                            NimUnaryOpImpl(UNARY_OP)
                                              PsiElement(NimTokenType.-)('-')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('3')
                                          PsiElement(NimTokenType.))(')')
                                      PsiWhiteSpace(' ')
                                      PsiElement(NimTokenType.EQUALS)('==')
                                      PsiWhiteSpace(' ')
                                      NimLiteralImpl(LITERAL)
                                        NimIntegerImpl(INTEGER)
                                          NimSignedIntegerImpl(SIGNED_INTEGER)
                                            PsiElement(NimTokenType.INT_LIT)('6')
                                  PsiWhiteSpace('\n')
                                  PsiWhiteSpace('  ')
                                  NimSimpleStatementImpl(SIMPLE_STATEMENT)
                                    NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                        PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                                    PsiWhiteSpace(' ')
                                    NimSimpleStatementImpl(SIMPLE_STATEMENT)
                                      NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                                        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                            PsiElement(NimTokenType.IDENTIFIER)('s3')
                                          PsiWhiteSpace(' ')
                                          PsiElement(NimTokenType.EQUALS)('==')
                                          PsiWhiteSpace(' ')
                                          NimDoubleQuotedStringLiteralImpl(DOUBLE_QUOTED_STRING_LITERAL)
                                            PsiElement(NimTokenType.DOUBLE_QUOTED_LITERAL)('"xxxefgabcdxxx"')
                                      PsiWhiteSpace('\n')
                                      PsiWhiteSpace('  ')
                                      NimSimpleStatementImpl(SIMPLE_STATEMENT)
                                        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                            PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                                        PsiWhiteSpace(' ')
                                        NimSimpleStatementImpl(SIMPLE_STATEMENT)
                                          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                                            NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                                              NimCallExpressionImpl(CALL_EXPRESSION)
                                                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                                    PsiElement(NimTokenType.IDENTIFIER)('s4')
                                                  PsiElement(NimTokenType..)('.')
                                                  PsiElement(NimTokenType.IDENTIFIER)('rotateLeft')
                                                NimArgumentListImpl(ARGUMENT_LIST)
                                                  PsiElement(NimTokenType.()('(')
                                                  NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                                                    NimSpreadExpressionImpl(SPREAD_EXPRESSION)
                                                      NimLiteralImpl(LITERAL)
                                                        NimIntegerImpl(INTEGER)
                                                          NimSignedIntegerImpl(SIGNED_INTEGER)
                                                            PsiElement(NimTokenType.INT_LIT)('3')
                                                      PsiWhiteSpace(' ')
                                                      PsiElement(NimTokenType...)('..')
                                                      PsiErrorElement:<expression> expected, got '<'
                                                        <empty list>
                                                    PsiElement(NimTokenType.<)('<')
                                                    PsiWhiteSpace(' ')
                                                    NimLiteralImpl(LITERAL)
                                                      NimIntegerImpl(INTEGER)
                                                        NimSignedIntegerImpl(SIGNED_INTEGER)
                                                          PsiElement(NimTokenType.INT_LIT)('10')
                                                  PsiElement(NimTokenType.,)(',')
                                                  PsiWhiteSpace(' ')
                                                  NimUnaryExpressionImpl(UNARY_EXPRESSION)
                                                    NimUnaryOpImpl(UNARY_OP)
                                                      PsiElement(NimTokenType.-)('-')
                                                    NimLiteralImpl(LITERAL)
                                                      NimIntegerImpl(INTEGER)
                                                        NimSignedIntegerImpl(SIGNED_INTEGER)
                                                          PsiElement(NimTokenType.INT_LIT)('10')
                                                  PsiElement(NimTokenType.))(')')
                                              PsiWhiteSpace(' ')
                                              PsiElement(NimTokenType.EQUALS)('==')
                                              PsiWhiteSpace(' ')
                                              NimLiteralImpl(LITERAL)
                                                NimIntegerImpl(INTEGER)
                                                  NimSignedIntegerImpl(SIGNED_INTEGER)
                                                    PsiElement(NimTokenType.INT_LIT)('6')
                                          PsiWhiteSpace('\n')
                                          PsiWhiteSpace('  ')
                                          NimSimpleStatementImpl(SIMPLE_STATEMENT)
                                            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                                              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                                PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                                            PsiWhiteSpace(' ')
                                            NimSimpleStatementImpl(SIMPLE_STATEMENT)
                                              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                                                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                                                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                                    PsiElement(NimTokenType.IDENTIFIER)('s4')
                                                  PsiWhiteSpace(' ')
                                                  PsiElement(NimTokenType.EQUALS)('==')
                                                  PsiWhiteSpace(' ')
                                                  NimDoubleQuotedStringLiteralImpl(DOUBLE_QUOTED_STRING_LITERAL)
                                                    PsiElement(NimTokenType.DOUBLE_QUOTED_LITERAL)('"xxxefgabcdxxx"')
                                              PsiWhiteSpace('\n')
                                              PsiWhiteSpace('  ')
                                              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                                                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                                                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                                    PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                                                PsiWhiteSpace(' ')
                                                NimSimpleStatementImpl(SIMPLE_STATEMENT)
                                                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                                                    NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                                                      NimCallExpressionImpl(CALL_EXPRESSION)
                                                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                                            PsiElement(NimTokenType.IDENTIFIER)('s5')
                                                          PsiElement(NimTokenType..)('.')
                                                          PsiElement(NimTokenType.IDENTIFIER)('rotateLeft')
                                                        NimArgumentListImpl(ARGUMENT_LIST)
                                                          PsiElement(NimTokenType.()('(')
                                                          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                                                            NimSpreadExpressionImpl(SPREAD_EXPRESSION)
                                                              NimLiteralImpl(LITERAL)
                                                                NimIntegerImpl(INTEGER)
                                                                  NimSignedIntegerImpl(SIGNED_INTEGER)
                                                                    PsiElement(NimTokenType.INT_LIT)('3')
                                                              PsiWhiteSpace(' ')
                                                              PsiElement(NimTokenType...)('..')
                                                              PsiErrorElement:<expression> expected, got '<'
                                                                <empty list>
                                                            PsiElement(NimTokenType.<)('<')
                                                            PsiWhiteSpace(' ')
                                                            NimLiteralImpl(LITERAL)
                                                              NimIntegerImpl(INTEGER)
                                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                                  PsiElement(NimTokenType.INT_LIT)('10')
                                                          PsiElement(NimTokenType.,)(',')
                                                          PsiWhiteSpace(' ')
                                                          NimLiteralImpl(LITERAL)
                                                            NimIntegerImpl(INTEGER)
                                                              NimSignedIntegerImpl(SIGNED_INTEGER)
                                                                PsiElement(NimTokenType.INT_LIT)('11')
                                                          PsiElement(NimTokenType.))(')')
                                                      PsiWhiteSpace(' ')
                                                      PsiElement(NimTokenType.EQUALS)('==')
                                                      PsiWhiteSpace(' ')
                                                      NimLiteralImpl(LITERAL)
                                                        NimIntegerImpl(INTEGER)
                                                          NimSignedIntegerImpl(SIGNED_INTEGER)
                                                            PsiElement(NimTokenType.INT_LIT)('6')
                                                  PsiWhiteSpace('\n')
                                                  PsiWhiteSpace('  ')
                                                  NimSimpleStatementImpl(SIMPLE_STATEMENT)
                                                    NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                                                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                                        PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                                                    PsiWhiteSpace(' ')
                                                    NimSimpleStatementImpl(SIMPLE_STATEMENT)
                                                      NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                                                        NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                                                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                                            PsiElement(NimTokenType.IDENTIFIER)('s5')
                                                          PsiWhiteSpace(' ')
                                                          PsiElement(NimTokenType.EQUALS)('==')
                                                          PsiWhiteSpace(' ')
                                                          NimDoubleQuotedStringLiteralImpl(DOUBLE_QUOTED_STRING_LITERAL)
                                                            PsiElement(NimTokenType.DOUBLE_QUOTED_LITERAL)('"xxxefgabcdxxx"')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      NimBlockDeclarationImpl(BLOCK_DECLARATION)
        PsiElement(NimTokenType.block)('block')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('product')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('doAssert')
          PsiWhiteSpace(' ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('product')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimCallExpressionImpl(CALL_EXPRESSION)
                      NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('newSeq')
                        PsiElement(NimTokenType.[)('[')
                        NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('seq')
                          PsiElement(NimTokenType.[)('[')
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('int')
                          PsiElement(NimTokenType.])(']')
                        PsiElement(NimTokenType.])(']')
                      NimArgumentListImpl(ARGUMENT_LIST)
                        PsiElement(NimTokenType.()('(')
                        PsiElement(NimTokenType.))(')')
                    PsiElement(NimTokenType.))(')')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.EQUALS)('==')
                PsiWhiteSpace(' ')
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('newSeq')
                    PsiElement(NimTokenType.[)('[')
                    NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('seq')
                      PsiElement(NimTokenType.[)('[')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('int')
                      PsiElement(NimTokenType.])(']')
                    PsiElement(NimTokenType.])(']')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    PsiElement(NimTokenType.))(')')
              PsiElement(NimTokenType.,)(',')
              PsiWhiteSpace(' ')
              NimDoubleQuotedStringLiteralImpl(DOUBLE_QUOTED_STRING_LITERAL)
                PsiElement(NimTokenType.DOUBLE_QUOTED_LITERAL)('"empty input"')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('doAssert')
              PsiWhiteSpace(' ')
              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                    NimCallExpressionImpl(CALL_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('product')
                      NimArgumentListImpl(ARGUMENT_LIST)
                        PsiElement(NimTokenType.()('(')
                        NimAtExpressionImpl(AT_EXPRESSION)
                          PsiElement(NimTokenType.@)('@')
                          NimArrayLiteralImpl(ARRAY_LITERAL)
                            PsiElement(NimTokenType.[)('[')
                            NimOptionalIndentImpl(OPTIONAL_INDENT)
                              NimCallExpressionImpl(CALL_EXPRESSION)
                                NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                    PsiElement(NimTokenType.IDENTIFIER)('newSeq')
                                  PsiElement(NimTokenType.[)('[')
                                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                    PsiElement(NimTokenType.IDENTIFIER)('int')
                                  PsiElement(NimTokenType.])(']')
                                NimArgumentListImpl(ARGUMENT_LIST)
                                  PsiElement(NimTokenType.()('(')
                                  PsiElement(NimTokenType.))(')')
                              PsiElement(NimTokenType.,)(',')
                              PsiWhiteSpace(' ')
                              NimAtExpressionImpl(AT_EXPRESSION)
                                PsiElement(NimTokenType.@)('@')
                                NimArrayLiteralImpl(ARRAY_LITERAL)
                                  PsiElement(NimTokenType.[)('[')
                                  PsiElement(NimTokenType.])(']')
                              PsiElement(NimTokenType.,)(',')
                              PsiWhiteSpace(' ')
                              NimAtExpressionImpl(AT_EXPRESSION)
                                PsiElement(NimTokenType.@)('@')
                                NimArrayLiteralImpl(ARRAY_LITERAL)
                                  PsiElement(NimTokenType.[)('[')
                                  PsiElement(NimTokenType.])(']')
                            PsiElement(NimTokenType.])(']')
                        PsiElement(NimTokenType.))(')')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.EQUALS)('==')
                    PsiWhiteSpace(' ')
                    NimCallExpressionImpl(CALL_EXPRESSION)
                      NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('newSeq')
                        PsiElement(NimTokenType.[)('[')
                        NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('seq')
                          PsiElement(NimTokenType.[)('[')
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('int')
                          PsiElement(NimTokenType.])(']')
                        PsiElement(NimTokenType.])(']')
                      NimArgumentListImpl(ARGUMENT_LIST)
                        PsiElement(NimTokenType.()('(')
                        PsiElement(NimTokenType.))(')')
                  PsiElement(NimTokenType.,)(',')
                  PsiWhiteSpace(' ')
                  NimDoubleQuotedStringLiteralImpl(DOUBLE_QUOTED_STRING_LITERAL)
                    PsiElement(NimTokenType.DOUBLE_QUOTED_LITERAL)('"bit more empty input"')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('    ')
                NimSimpleStatementImpl(SIMPLE_STATEMENT)
                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                  PsiWhiteSpace(' ')
                  NimSimpleStatementImpl(SIMPLE_STATEMENT)
                    NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                      NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                        NimCallExpressionImpl(CALL_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('product')
                          NimArgumentListImpl(ARGUMENT_LIST)
                            PsiElement(NimTokenType.()('(')
                            NimAtExpressionImpl(AT_EXPRESSION)
                              PsiElement(NimTokenType.@)('@')
                              NimArrayLiteralImpl(ARRAY_LITERAL)
                                PsiElement(NimTokenType.[)('[')
                                NimOptionalIndentImpl(OPTIONAL_INDENT)
                                  NimAtExpressionImpl(AT_EXPRESSION)
                                    PsiElement(NimTokenType.@)('@')
                                    NimArrayLiteralImpl(ARRAY_LITERAL)
                                      PsiElement(NimTokenType.[)('[')
                                      NimOptionalIndentImpl(OPTIONAL_INDENT)
                                        NimLiteralImpl(LITERAL)
                                          NimIntegerImpl(INTEGER)
                                            NimSignedIntegerImpl(SIGNED_INTEGER)
                                              PsiElement(NimTokenType.INT_LIT)('1')
                                        PsiElement(NimTokenType.,)(',')
                                        NimLiteralImpl(LITERAL)
                                          NimIntegerImpl(INTEGER)
                                            NimSignedIntegerImpl(SIGNED_INTEGER)
                                              PsiElement(NimTokenType.INT_LIT)('2')
                                      PsiElement(NimTokenType.])(']')
                                PsiElement(NimTokenType.])(']')
                            PsiElement(NimTokenType.))(')')
                        PsiWhiteSpace(' ')
                        PsiElement(NimTokenType.EQUALS)('==')
                        PsiWhiteSpace(' ')
                        NimAtExpressionImpl(AT_EXPRESSION)
                          PsiElement(NimTokenType.@)('@')
                          NimArrayLiteralImpl(ARRAY_LITERAL)
                            PsiElement(NimTokenType.[)('[')
                            NimOptionalIndentImpl(OPTIONAL_INDENT)
                              NimAtExpressionImpl(AT_EXPRESSION)
                                PsiElement(NimTokenType.@)('@')
                                NimArrayLiteralImpl(ARRAY_LITERAL)
                                  PsiElement(NimTokenType.[)('[')
                                  NimOptionalIndentImpl(OPTIONAL_INDENT)
                                    NimLiteralImpl(LITERAL)
                                      NimIntegerImpl(INTEGER)
                                        NimSignedIntegerImpl(SIGNED_INTEGER)
                                          PsiElement(NimTokenType.INT_LIT)('1')
                                    PsiElement(NimTokenType.,)(',')
                                    NimLiteralImpl(LITERAL)
                                      NimIntegerImpl(INTEGER)
                                        NimSignedIntegerImpl(SIGNED_INTEGER)
                                          PsiElement(NimTokenType.INT_LIT)('2')
                                  PsiElement(NimTokenType.])(']')
                            PsiElement(NimTokenType.])(']')
                      PsiElement(NimTokenType.,)(',')
                      PsiWhiteSpace(' ')
                      NimDoubleQuotedStringLiteralImpl(DOUBLE_QUOTED_STRING_LITERAL)
                        PsiElement(NimTokenType.DOUBLE_QUOTED_LITERAL)('"a simple case of one element"')
                    PsiWhiteSpace('\n')
                    PsiWhiteSpace('    ')
                    NimSimpleStatementImpl(SIMPLE_STATEMENT)
                      NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                      PsiWhiteSpace(' ')
                      NimSimpleStatementImpl(SIMPLE_STATEMENT)
                        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                            NimCallExpressionImpl(CALL_EXPRESSION)
                              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                PsiElement(NimTokenType.IDENTIFIER)('product')
                              NimArgumentListImpl(ARGUMENT_LIST)
                                PsiElement(NimTokenType.()('(')
                                NimAtExpressionImpl(AT_EXPRESSION)
                                  PsiElement(NimTokenType.@)('@')
                                  NimArrayLiteralImpl(ARRAY_LITERAL)
                                    PsiElement(NimTokenType.[)('[')
                                    NimOptionalIndentImpl(OPTIONAL_INDENT)
                                      NimAtExpressionImpl(AT_EXPRESSION)
                                        PsiElement(NimTokenType.@)('@')
                                        NimArrayLiteralImpl(ARRAY_LITERAL)
                                          PsiElement(NimTokenType.[)('[')
                                          NimOptionalIndentImpl(OPTIONAL_INDENT)
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('1')
                                            PsiElement(NimTokenType.,)(',')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('2')
                                          PsiElement(NimTokenType.])(']')
                                      PsiElement(NimTokenType.,)(',')
                                      PsiWhiteSpace(' ')
                                      NimAtExpressionImpl(AT_EXPRESSION)
                                        PsiElement(NimTokenType.@)('@')
                                        NimArrayLiteralImpl(ARRAY_LITERAL)
                                          PsiElement(NimTokenType.[)('[')
                                          NimOptionalIndentImpl(OPTIONAL_INDENT)
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('3')
                                            PsiElement(NimTokenType.,)(',')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('4')
                                          PsiElement(NimTokenType.])(']')
                                    PsiElement(NimTokenType.])(']')
                                PsiElement(NimTokenType.))(')')
                            PsiWhiteSpace(' ')
                            PsiElement(NimTokenType.EQUALS)('==')
                            PsiWhiteSpace(' ')
                            NimAtExpressionImpl(AT_EXPRESSION)
                              PsiElement(NimTokenType.@)('@')
                              NimArrayLiteralImpl(ARRAY_LITERAL)
                                PsiElement(NimTokenType.[)('[')
                                NimOptionalIndentImpl(OPTIONAL_INDENT)
                                  NimAtExpressionImpl(AT_EXPRESSION)
                                    PsiElement(NimTokenType.@)('@')
                                    NimArrayLiteralImpl(ARRAY_LITERAL)
                                      PsiElement(NimTokenType.[)('[')
                                      NimOptionalIndentImpl(OPTIONAL_INDENT)
                                        NimLiteralImpl(LITERAL)
                                          NimIntegerImpl(INTEGER)
                                            NimSignedIntegerImpl(SIGNED_INTEGER)
                                              PsiElement(NimTokenType.INT_LIT)('2')
                                        PsiElement(NimTokenType.,)(',')
                                        NimLiteralImpl(LITERAL)
                                          NimIntegerImpl(INTEGER)
                                            NimSignedIntegerImpl(SIGNED_INTEGER)
                                              PsiElement(NimTokenType.INT_LIT)('4')
                                      PsiElement(NimTokenType.])(']')
                                  PsiElement(NimTokenType.,)(',')
                                  NimAtExpressionImpl(AT_EXPRESSION)
                                    PsiElement(NimTokenType.@)('@')
                                    NimArrayLiteralImpl(ARRAY_LITERAL)
                                      PsiElement(NimTokenType.[)('[')
                                      NimOptionalIndentImpl(OPTIONAL_INDENT)
                                        NimLiteralImpl(LITERAL)
                                          NimIntegerImpl(INTEGER)
                                            NimSignedIntegerImpl(SIGNED_INTEGER)
                                              PsiElement(NimTokenType.INT_LIT)('1')
                                        PsiElement(NimTokenType.,)(',')
                                        NimLiteralImpl(LITERAL)
                                          NimIntegerImpl(INTEGER)
                                            NimSignedIntegerImpl(SIGNED_INTEGER)
                                              PsiElement(NimTokenType.INT_LIT)('4')
                                      PsiElement(NimTokenType.])(']')
                                  PsiElement(NimTokenType.,)(',')
                                  NimAtExpressionImpl(AT_EXPRESSION)
                                    PsiElement(NimTokenType.@)('@')
                                    NimArrayLiteralImpl(ARRAY_LITERAL)
                                      PsiElement(NimTokenType.[)('[')
                                      NimOptionalIndentImpl(OPTIONAL_INDENT)
                                        NimLiteralImpl(LITERAL)
                                          NimIntegerImpl(INTEGER)
                                            NimSignedIntegerImpl(SIGNED_INTEGER)
                                              PsiElement(NimTokenType.INT_LIT)('2')
                                        PsiElement(NimTokenType.,)(',')
                                        NimLiteralImpl(LITERAL)
                                          NimIntegerImpl(INTEGER)
                                            NimSignedIntegerImpl(SIGNED_INTEGER)
                                              PsiElement(NimTokenType.INT_LIT)('3')
                                      PsiElement(NimTokenType.])(']')
                                  PsiElement(NimTokenType.,)(',')
                                  NimAtExpressionImpl(AT_EXPRESSION)
                                    PsiElement(NimTokenType.@)('@')
                                    NimArrayLiteralImpl(ARRAY_LITERAL)
                                      PsiElement(NimTokenType.[)('[')
                                      NimOptionalIndentImpl(OPTIONAL_INDENT)
                                        NimLiteralImpl(LITERAL)
                                          NimIntegerImpl(INTEGER)
                                            NimSignedIntegerImpl(SIGNED_INTEGER)
                                              PsiElement(NimTokenType.INT_LIT)('1')
                                        PsiElement(NimTokenType.,)(',')
                                        NimLiteralImpl(LITERAL)
                                          NimIntegerImpl(INTEGER)
                                            NimSignedIntegerImpl(SIGNED_INTEGER)
                                              PsiElement(NimTokenType.INT_LIT)('3')
                                      PsiElement(NimTokenType.])(']')
                                PsiElement(NimTokenType.])(']')
                          PsiElement(NimTokenType.,)(',')
                          PsiWhiteSpace(' ')
                          NimDoubleQuotedStringLiteralImpl(DOUBLE_QUOTED_STRING_LITERAL)
                            PsiElement(NimTokenType.DOUBLE_QUOTED_LITERAL)('"two elements"')
                        PsiWhiteSpace('\n')
                        PsiWhiteSpace('    ')
                        NimSimpleStatementImpl(SIMPLE_STATEMENT)
                          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                          PsiWhiteSpace(' ')
                          NimSimpleStatementImpl(SIMPLE_STATEMENT)
                            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                              NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                                NimCallExpressionImpl(CALL_EXPRESSION)
                                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                    PsiElement(NimTokenType.IDENTIFIER)('product')
                                  NimArgumentListImpl(ARGUMENT_LIST)
                                    PsiElement(NimTokenType.()('(')
                                    NimAtExpressionImpl(AT_EXPRESSION)
                                      PsiElement(NimTokenType.@)('@')
                                      NimArrayLiteralImpl(ARRAY_LITERAL)
                                        PsiElement(NimTokenType.[)('[')
                                        NimOptionalIndentImpl(OPTIONAL_INDENT)
                                          NimAtExpressionImpl(AT_EXPRESSION)
                                            PsiElement(NimTokenType.@)('@')
                                            NimArrayLiteralImpl(ARRAY_LITERAL)
                                              PsiElement(NimTokenType.[)('[')
                                              NimOptionalIndentImpl(OPTIONAL_INDENT)
                                                NimLiteralImpl(LITERAL)
                                                  NimIntegerImpl(INTEGER)
                                                    NimSignedIntegerImpl(SIGNED_INTEGER)
                                                      PsiElement(NimTokenType.INT_LIT)('1')
                                                PsiElement(NimTokenType.,)(',')
                                                NimLiteralImpl(LITERAL)
                                                  NimIntegerImpl(INTEGER)
                                                    NimSignedIntegerImpl(SIGNED_INTEGER)
                                                      PsiElement(NimTokenType.INT_LIT)('2')
                                              PsiElement(NimTokenType.])(']')
                                          PsiElement(NimTokenType.,)(',')
                                          PsiWhiteSpace(' ')
                                          NimAtExpressionImpl(AT_EXPRESSION)
                                            PsiElement(NimTokenType.@)('@')
                                            NimArrayLiteralImpl(ARRAY_LITERAL)
                                              PsiElement(NimTokenType.[)('[')
                                              NimOptionalIndentImpl(OPTIONAL_INDENT)
                                                NimLiteralImpl(LITERAL)
                                                  NimIntegerImpl(INTEGER)
                                                    NimSignedIntegerImpl(SIGNED_INTEGER)
                                                      PsiElement(NimTokenType.INT_LIT)('3')
                                                PsiElement(NimTokenType.,)(',')
                                                NimLiteralImpl(LITERAL)
                                                  NimIntegerImpl(INTEGER)
                                                    NimSignedIntegerImpl(SIGNED_INTEGER)
                                                      PsiElement(NimTokenType.INT_LIT)('4')
                                              PsiElement(NimTokenType.])(']')
                                          PsiElement(NimTokenType.,)(',')
                                          PsiWhiteSpace(' ')
                                          NimAtExpressionImpl(AT_EXPRESSION)
                                            PsiElement(NimTokenType.@)('@')
                                            NimArrayLiteralImpl(ARRAY_LITERAL)
                                              PsiElement(NimTokenType.[)('[')
                                              NimOptionalIndentImpl(OPTIONAL_INDENT)
                                                NimLiteralImpl(LITERAL)
                                                  NimIntegerImpl(INTEGER)
                                                    NimSignedIntegerImpl(SIGNED_INTEGER)
                                                      PsiElement(NimTokenType.INT_LIT)('5')
                                                PsiElement(NimTokenType.,)(',')
                                                NimLiteralImpl(LITERAL)
                                                  NimIntegerImpl(INTEGER)
                                                    NimSignedIntegerImpl(SIGNED_INTEGER)
                                                      PsiElement(NimTokenType.INT_LIT)('6')
                                              PsiElement(NimTokenType.])(']')
                                        PsiElement(NimTokenType.])(']')
                                    PsiElement(NimTokenType.))(')')
                                PsiWhiteSpace(' ')
                                PsiElement(NimTokenType.EQUALS)('==')
                                PsiWhiteSpace(' ')
                                NimAtExpressionImpl(AT_EXPRESSION)
                                  PsiElement(NimTokenType.@)('@')
                                  NimArrayLiteralImpl(ARRAY_LITERAL)
                                    PsiElement(NimTokenType.[)('[')
                                    NimOptionalIndentImpl(OPTIONAL_INDENT)
                                      NimAtExpressionImpl(AT_EXPRESSION)
                                        PsiElement(NimTokenType.@)('@')
                                        NimArrayLiteralImpl(ARRAY_LITERAL)
                                          PsiElement(NimTokenType.[)('[')
                                          NimOptionalIndentImpl(OPTIONAL_INDENT)
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('2')
                                            PsiElement(NimTokenType.,)(',')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('4')
                                            PsiElement(NimTokenType.,)(',')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('6')
                                          PsiElement(NimTokenType.])(']')
                                      PsiElement(NimTokenType.,)(',')
                                      NimAtExpressionImpl(AT_EXPRESSION)
                                        PsiElement(NimTokenType.@)('@')
                                        NimArrayLiteralImpl(ARRAY_LITERAL)
                                          PsiElement(NimTokenType.[)('[')
                                          NimOptionalIndentImpl(OPTIONAL_INDENT)
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('1')
                                            PsiElement(NimTokenType.,)(',')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('4')
                                            PsiElement(NimTokenType.,)(',')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('6')
                                          PsiElement(NimTokenType.])(']')
                                      PsiElement(NimTokenType.,)(',')
                                      NimAtExpressionImpl(AT_EXPRESSION)
                                        PsiElement(NimTokenType.@)('@')
                                        NimArrayLiteralImpl(ARRAY_LITERAL)
                                          PsiElement(NimTokenType.[)('[')
                                          NimOptionalIndentImpl(OPTIONAL_INDENT)
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('2')
                                            PsiElement(NimTokenType.,)(',')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('3')
                                            PsiElement(NimTokenType.,)(',')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('6')
                                          PsiElement(NimTokenType.])(']')
                                      PsiElement(NimTokenType.,)(',')
                                      NimAtExpressionImpl(AT_EXPRESSION)
                                        PsiElement(NimTokenType.@)('@')
                                        NimArrayLiteralImpl(ARRAY_LITERAL)
                                          PsiElement(NimTokenType.[)('[')
                                          NimOptionalIndentImpl(OPTIONAL_INDENT)
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('1')
                                            PsiElement(NimTokenType.,)(',')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('3')
                                            PsiElement(NimTokenType.,)(',')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('6')
                                          PsiElement(NimTokenType.])(']')
                                      PsiElement(NimTokenType.,)(',')
                                      PsiWhiteSpace(' ')
                                      NimAtExpressionImpl(AT_EXPRESSION)
                                        PsiElement(NimTokenType.@)('@')
                                        NimArrayLiteralImpl(ARRAY_LITERAL)
                                          PsiElement(NimTokenType.[)('[')
                                          NimOptionalIndentImpl(OPTIONAL_INDENT)
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('2')
                                            PsiElement(NimTokenType.,)(',')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('4')
                                            PsiElement(NimTokenType.,)(',')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('5')
                                          PsiElement(NimTokenType.])(']')
                                      PsiElement(NimTokenType.,)(',')
                                      NimAtExpressionImpl(AT_EXPRESSION)
                                        PsiElement(NimTokenType.@)('@')
                                        NimArrayLiteralImpl(ARRAY_LITERAL)
                                          PsiElement(NimTokenType.[)('[')
                                          NimOptionalIndentImpl(OPTIONAL_INDENT)
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('1')
                                            PsiElement(NimTokenType.,)(',')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('4')
                                            PsiElement(NimTokenType.,)(',')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('5')
                                          PsiElement(NimTokenType.])(']')
                                      PsiElement(NimTokenType.,)(',')
                                      NimAtExpressionImpl(AT_EXPRESSION)
                                        PsiElement(NimTokenType.@)('@')
                                        NimArrayLiteralImpl(ARRAY_LITERAL)
                                          PsiElement(NimTokenType.[)('[')
                                          NimOptionalIndentImpl(OPTIONAL_INDENT)
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('2')
                                            PsiElement(NimTokenType.,)(',')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('3')
                                            PsiElement(NimTokenType.,)(',')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('5')
                                          PsiElement(NimTokenType.])(']')
                                      PsiElement(NimTokenType.,)(',')
                                      NimAtExpressionImpl(AT_EXPRESSION)
                                        PsiElement(NimTokenType.@)('@')
                                        NimArrayLiteralImpl(ARRAY_LITERAL)
                                          PsiElement(NimTokenType.[)('[')
                                          NimOptionalIndentImpl(OPTIONAL_INDENT)
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('1')
                                            PsiElement(NimTokenType.,)(',')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('3')
                                            PsiElement(NimTokenType.,)(',')
                                            NimLiteralImpl(LITERAL)
                                              NimIntegerImpl(INTEGER)
                                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                                  PsiElement(NimTokenType.INT_LIT)('5')
                                          PsiElement(NimTokenType.])(']')
                                    PsiElement(NimTokenType.])(']')
                              PsiElement(NimTokenType.,)(',')
                              PsiWhiteSpace(' ')
                              NimDoubleQuotedStringLiteralImpl(DOUBLE_QUOTED_STRING_LITERAL)
                                PsiElement(NimTokenType.DOUBLE_QUOTED_LITERAL)('"three elements"')
                            PsiWhiteSpace('\n')
                            PsiWhiteSpace('    ')
                            NimSimpleStatementImpl(SIMPLE_STATEMENT)
                              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                  PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                              PsiWhiteSpace(' ')
                              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                                  NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                                    NimCallExpressionImpl(CALL_EXPRESSION)
                                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                        PsiElement(NimTokenType.IDENTIFIER)('product')
                                      NimArgumentListImpl(ARGUMENT_LIST)
                                        PsiElement(NimTokenType.()('(')
                                        NimAtExpressionImpl(AT_EXPRESSION)
                                          PsiElement(NimTokenType.@)('@')
                                          NimArrayLiteralImpl(ARRAY_LITERAL)
                                            PsiElement(NimTokenType.[)('[')
                                            NimOptionalIndentImpl(OPTIONAL_INDENT)
                                              NimAtExpressionImpl(AT_EXPRESSION)
                                                PsiElement(NimTokenType.@)('@')
                                                NimArrayLiteralImpl(ARRAY_LITERAL)
                                                  PsiElement(NimTokenType.[)('[')
                                                  NimOptionalIndentImpl(OPTIONAL_INDENT)
                                                    NimLiteralImpl(LITERAL)
                                                      NimIntegerImpl(INTEGER)
                                                        NimSignedIntegerImpl(SIGNED_INTEGER)
                                                          PsiElement(NimTokenType.INT_LIT)('1')
                                                    PsiElement(NimTokenType.,)(',')
                                                    NimLiteralImpl(LITERAL)
                                                      NimIntegerImpl(INTEGER)
                                                        NimSignedIntegerImpl(SIGNED_INTEGER)
                                                          PsiElement(NimTokenType.INT_LIT)('2')
                                                  PsiElement(NimTokenType.])(']')
                                              PsiElement(NimTokenType.,)(',')
                                              PsiWhiteSpace(' ')
                                              NimAtExpressionImpl(AT_EXPRESSION)
                                                PsiElement(NimTokenType.@)('@')
                                                NimArrayLiteralImpl(ARRAY_LITERAL)
                                                  PsiElement(NimTokenType.[)('[')
                                                  PsiElement(NimTokenType.])(']')
                                            PsiElement(NimTokenType.])(']')
                                        PsiElement(NimTokenType.))(')')
                                    PsiWhiteSpace(' ')
                                    PsiElement(NimTokenType.EQUALS)('==')
                                    PsiWhiteSpace(' ')
                                    NimCallExpressionImpl(CALL_EXPRESSION)
                                      NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                          PsiElement(NimTokenType.IDENTIFIER)('newSeq')
                                        PsiElement(NimTokenType.[)('[')
                                        NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                            PsiElement(NimTokenType.IDENTIFIER)('seq')
                                          PsiElement(NimTokenType.[)('[')
                                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                            PsiElement(NimTokenType.IDENTIFIER)('int')
                                          PsiElement(NimTokenType.])(']')
                                        PsiElement(NimTokenType.])(']')
                                      NimArgumentListImpl(ARGUMENT_LIST)
                                        PsiElement(NimTokenType.()('(')
                                        PsiElement(NimTokenType.))(')')
                                  PsiElement(NimTokenType.,)(',')
                                  PsiWhiteSpace(' ')
                                  NimDoubleQuotedStringLiteralImpl(DOUBLE_QUOTED_STRING_LITERAL)
                                    PsiElement(NimTokenType.DOUBLE_QUOTED_LITERAL)('"two elements, but one empty"')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimBlockDeclarationImpl(BLOCK_DECLARATION)
        PsiElement(NimTokenType.block)('block')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('doAssert')
          PsiWhiteSpace(' ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimArrayLiteralImpl(ARRAY_LITERAL)
                      PsiElement(NimTokenType.[)('[')
                      NimOptionalIndentImpl(OPTIONAL_INDENT)
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('1')
                        PsiElement(NimTokenType.,)(',')
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('2')
                        PsiElement(NimTokenType.,)(',')
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('4')
                      PsiElement(NimTokenType.])(']')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('3')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('system')
                        PsiElement(NimTokenType..)('.')
                        PsiElement(NimTokenType.IDENTIFIER)('cmp')
                      PsiElement(NimTokenType.[)('[')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('int')
                      PsiElement(NimTokenType.])(']')
                    PsiElement(NimTokenType.))(')')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.EQUALS)('==')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('2')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('doAssert')
              PsiWhiteSpace(' ')
              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                    NimCallExpressionImpl(CALL_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
                      NimArgumentListImpl(ARGUMENT_LIST)
                        PsiElement(NimTokenType.()('(')
                        NimArrayLiteralImpl(ARRAY_LITERAL)
                          PsiElement(NimTokenType.[)('[')
                          NimOptionalIndentImpl(OPTIONAL_INDENT)
                            NimLiteralImpl(LITERAL)
                              NimIntegerImpl(INTEGER)
                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                  PsiElement(NimTokenType.INT_LIT)('1')
                            PsiElement(NimTokenType.,)(',')
                            NimLiteralImpl(LITERAL)
                              NimIntegerImpl(INTEGER)
                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                  PsiElement(NimTokenType.INT_LIT)('2')
                            PsiElement(NimTokenType.,)(',')
                            NimLiteralImpl(LITERAL)
                              NimIntegerImpl(INTEGER)
                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                  PsiElement(NimTokenType.INT_LIT)('2')
                            PsiElement(NimTokenType.,)(',')
                            NimLiteralImpl(LITERAL)
                              NimIntegerImpl(INTEGER)
                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                  PsiElement(NimTokenType.INT_LIT)('3')
                          PsiElement(NimTokenType.])(']')
                        PsiElement(NimTokenType.,)(',')
                        PsiWhiteSpace(' ')
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('4')
                        PsiElement(NimTokenType.,)(',')
                        PsiWhiteSpace(' ')
                        NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(NimTokenType.IDENTIFIER)('system')
                            PsiElement(NimTokenType..)('.')
                            PsiElement(NimTokenType.IDENTIFIER)('cmp')
                          PsiElement(NimTokenType.[)('[')
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('int')
                          PsiElement(NimTokenType.])(']')
                        PsiElement(NimTokenType.))(')')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.EQUALS)('==')
                    PsiWhiteSpace(' ')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('4')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('    ')
                NimSimpleStatementImpl(SIMPLE_STATEMENT)
                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                  PsiWhiteSpace(' ')
                  NimSimpleStatementImpl(SIMPLE_STATEMENT)
                    NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                      NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                        NimCallExpressionImpl(CALL_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('lowerBound')
                          NimArgumentListImpl(ARGUMENT_LIST)
                            PsiElement(NimTokenType.()('(')
                            NimArrayLiteralImpl(ARRAY_LITERAL)
                              PsiElement(NimTokenType.[)('[')
                              NimOptionalIndentImpl(OPTIONAL_INDENT)
                                NimLiteralImpl(LITERAL)
                                  NimIntegerImpl(INTEGER)
                                    NimSignedIntegerImpl(SIGNED_INTEGER)
                                      PsiElement(NimTokenType.INT_LIT)('1')
                                PsiElement(NimTokenType.,)(',')
                                NimLiteralImpl(LITERAL)
                                  NimIntegerImpl(INTEGER)
                                    NimSignedIntegerImpl(SIGNED_INTEGER)
                                      PsiElement(NimTokenType.INT_LIT)('2')
                                PsiElement(NimTokenType.,)(',')
                                NimLiteralImpl(LITERAL)
                                  NimIntegerImpl(INTEGER)
                                    NimSignedIntegerImpl(SIGNED_INTEGER)
                                      PsiElement(NimTokenType.INT_LIT)('3')
                                PsiElement(NimTokenType.,)(',')
                                NimLiteralImpl(LITERAL)
                                  NimIntegerImpl(INTEGER)
                                    NimSignedIntegerImpl(SIGNED_INTEGER)
                                      PsiElement(NimTokenType.INT_LIT)('10')
                              PsiElement(NimTokenType.])(']')
                            PsiElement(NimTokenType.,)(',')
                            PsiWhiteSpace(' ')
                            NimLiteralImpl(LITERAL)
                              NimIntegerImpl(INTEGER)
                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                  PsiElement(NimTokenType.INT_LIT)('11')
                            PsiElement(NimTokenType.))(')')
                        PsiWhiteSpace(' ')
                        PsiElement(NimTokenType.EQUALS)('==')
                        PsiWhiteSpace(' ')
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('4')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimBlockDeclarationImpl(BLOCK_DECLARATION)
        PsiElement(NimTokenType.block)('block')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('upperBound')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('doAssert')
          PsiWhiteSpace(' ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('upperBound')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimArrayLiteralImpl(ARRAY_LITERAL)
                      PsiElement(NimTokenType.[)('[')
                      NimOptionalIndentImpl(OPTIONAL_INDENT)
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('1')
                        PsiElement(NimTokenType.,)(',')
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('2')
                        PsiElement(NimTokenType.,)(',')
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('4')
                      PsiElement(NimTokenType.])(']')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('3')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('system')
                        PsiElement(NimTokenType..)('.')
                        PsiElement(NimTokenType.IDENTIFIER)('cmp')
                      PsiElement(NimTokenType.[)('[')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('int')
                      PsiElement(NimTokenType.])(']')
                    PsiElement(NimTokenType.))(')')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.EQUALS)('==')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('2')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('doAssert')
              PsiWhiteSpace(' ')
              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                    NimCallExpressionImpl(CALL_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('upperBound')
                      NimArgumentListImpl(ARGUMENT_LIST)
                        PsiElement(NimTokenType.()('(')
                        NimArrayLiteralImpl(ARRAY_LITERAL)
                          PsiElement(NimTokenType.[)('[')
                          NimOptionalIndentImpl(OPTIONAL_INDENT)
                            NimLiteralImpl(LITERAL)
                              NimIntegerImpl(INTEGER)
                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                  PsiElement(NimTokenType.INT_LIT)('1')
                            PsiElement(NimTokenType.,)(',')
                            NimLiteralImpl(LITERAL)
                              NimIntegerImpl(INTEGER)
                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                  PsiElement(NimTokenType.INT_LIT)('2')
                            PsiElement(NimTokenType.,)(',')
                            NimLiteralImpl(LITERAL)
                              NimIntegerImpl(INTEGER)
                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                  PsiElement(NimTokenType.INT_LIT)('2')
                            PsiElement(NimTokenType.,)(',')
                            NimLiteralImpl(LITERAL)
                              NimIntegerImpl(INTEGER)
                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                  PsiElement(NimTokenType.INT_LIT)('3')
                          PsiElement(NimTokenType.])(']')
                        PsiElement(NimTokenType.,)(',')
                        PsiWhiteSpace(' ')
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('3')
                        PsiElement(NimTokenType.,)(',')
                        PsiWhiteSpace(' ')
                        NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(NimTokenType.IDENTIFIER)('system')
                            PsiElement(NimTokenType..)('.')
                            PsiElement(NimTokenType.IDENTIFIER)('cmp')
                          PsiElement(NimTokenType.[)('[')
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('int')
                          PsiElement(NimTokenType.])(']')
                        PsiElement(NimTokenType.))(')')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.EQUALS)('==')
                    PsiWhiteSpace(' ')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('4')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('    ')
                NimSimpleStatementImpl(SIMPLE_STATEMENT)
                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                  PsiWhiteSpace(' ')
                  NimSimpleStatementImpl(SIMPLE_STATEMENT)
                    NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                      NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                        NimCallExpressionImpl(CALL_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('upperBound')
                          NimArgumentListImpl(ARGUMENT_LIST)
                            PsiElement(NimTokenType.()('(')
                            NimArrayLiteralImpl(ARRAY_LITERAL)
                              PsiElement(NimTokenType.[)('[')
                              NimOptionalIndentImpl(OPTIONAL_INDENT)
                                NimLiteralImpl(LITERAL)
                                  NimIntegerImpl(INTEGER)
                                    NimSignedIntegerImpl(SIGNED_INTEGER)
                                      PsiElement(NimTokenType.INT_LIT)('1')
                                PsiElement(NimTokenType.,)(',')
                                NimLiteralImpl(LITERAL)
                                  NimIntegerImpl(INTEGER)
                                    NimSignedIntegerImpl(SIGNED_INTEGER)
                                      PsiElement(NimTokenType.INT_LIT)('2')
                                PsiElement(NimTokenType.,)(',')
                                NimLiteralImpl(LITERAL)
                                  NimIntegerImpl(INTEGER)
                                    NimSignedIntegerImpl(SIGNED_INTEGER)
                                      PsiElement(NimTokenType.INT_LIT)('3')
                                PsiElement(NimTokenType.,)(',')
                                NimLiteralImpl(LITERAL)
                                  NimIntegerImpl(INTEGER)
                                    NimSignedIntegerImpl(SIGNED_INTEGER)
                                      PsiElement(NimTokenType.INT_LIT)('5')
                              PsiElement(NimTokenType.])(']')
                            PsiElement(NimTokenType.,)(',')
                            PsiWhiteSpace(' ')
                            NimLiteralImpl(LITERAL)
                              NimIntegerImpl(INTEGER)
                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                  PsiElement(NimTokenType.INT_LIT)('3')
                            PsiElement(NimTokenType.))(')')
                        PsiWhiteSpace(' ')
                        PsiElement(NimTokenType.EQUALS)('==')
                        PsiWhiteSpace(' ')
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('3')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimBlockDeclarationImpl(BLOCK_DECLARATION)
        PsiElement(NimTokenType.block)('block')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('fillEmptySeq')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimStatementImpl(STATEMENT)
          NimVarDeclarationImpl(VAR_DECLARATION)
            PsiElement(NimTokenType.var)('var')
            PsiWhiteSpace(' ')
            NimVarAssignmentImpl(VAR_ASSIGNMENT)
              NimCommasImpl(COMMAS)
                NimVarDefinitionImpl(VAR_DEFINITION)
                  PsiElement(NimTokenType.IDENTIFIER)('s')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimCallExpressionImpl(CALL_EXPRESSION)
                NimIndexOrSliceExpressionImpl(INDEX_OR_SLICE_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('newSeq')
                  PsiElement(NimTokenType.[)('[')
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('int')
                  PsiElement(NimTokenType.])(']')
                NimArgumentListImpl(ARGUMENT_LIST)
                  PsiElement(NimTokenType.()('(')
                  PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimCallExpressionImpl(CALL_EXPRESSION)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('s')
                PsiElement(NimTokenType..)('.')
                PsiElement(NimTokenType.IDENTIFIER)('fill')
              NimArgumentListImpl(ARGUMENT_LIST)
                PsiElement(NimTokenType.()('(')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('0')
                PsiElement(NimTokenType.))(')')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimBlockDeclarationImpl(BLOCK_DECLARATION)
        PsiElement(NimTokenType.block)('block')
        PsiWhiteSpace(' ')
        PsiElement(NimTokenType.IDENTIFIER)('testBinarySearch')
        PsiElement(NimTokenType.:)(':')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimIndentationImpl(INDENTATION)
          <empty list>
        NimStatementImpl(STATEMENT)
          NimVarDeclarationImpl(VAR_DECLARATION)
            PsiElement(NimTokenType.var)('var')
            PsiWhiteSpace(' ')
            NimVarAssignmentImpl(VAR_ASSIGNMENT)
              NimCommasImpl(COMMAS)
                NimVarDefinitionImpl(VAR_DEFINITION)
                  PsiElement(NimTokenType.IDENTIFIER)('noData')
              PsiElement(NimTokenType.:)(':')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.IDENTIFIER)('seq')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimArrayLiteralImpl(ARRAY_LITERAL)
              PsiElement(NimTokenType.[)('[')
              NimOptionalIndentImpl(OPTIONAL_INDENT)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('int')
              PsiElement(NimTokenType.])(']')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(NimTokenType.IDENTIFIER)('doAssert')
            PsiWhiteSpace(' ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                  NimCallExpressionImpl(CALL_EXPRESSION)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
                    NimArgumentListImpl(ARGUMENT_LIST)
                      PsiElement(NimTokenType.()('(')
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('noData')
                      PsiElement(NimTokenType.,)(',')
                      PsiWhiteSpace(' ')
                      NimLiteralImpl(LITERAL)
                        NimIntegerImpl(INTEGER)
                          NimSignedIntegerImpl(SIGNED_INTEGER)
                            PsiElement(NimTokenType.INT_LIT)('7')
                      PsiElement(NimTokenType.))(')')
                  PsiWhiteSpace(' ')
                  PsiElement(NimTokenType.EQUALS)('==')
                  PsiWhiteSpace(' ')
                  NimUnaryExpressionImpl(UNARY_EXPRESSION)
                    NimUnaryOpImpl(UNARY_OP)
                      PsiElement(NimTokenType.-)('-')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimStatementImpl(STATEMENT)
          NimVarDeclarationImpl(VAR_DECLARATION)
            PsiElement(NimTokenType.let)('let')
            PsiWhiteSpace(' ')
            NimVarAssignmentImpl(VAR_ASSIGNMENT)
              NimCommasImpl(COMMAS)
                NimVarDefinitionImpl(VAR_DEFINITION)
                  PsiElement(NimTokenType.IDENTIFIER)('oneData')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimAtExpressionImpl(AT_EXPRESSION)
                PsiElement(NimTokenType.@)('@')
                NimArrayLiteralImpl(ARRAY_LITERAL)
                  PsiElement(NimTokenType.[)('[')
                  NimOptionalIndentImpl(OPTIONAL_INDENT)
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('1')
                  PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('doAssert')
          PsiWhiteSpace(' ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('oneData')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('1')
                    PsiElement(NimTokenType.))(')')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.EQUALS)('==')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('0')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('doAssert')
              PsiWhiteSpace(' ')
              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                    NimCallExpressionImpl(CALL_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
                      NimArgumentListImpl(ARGUMENT_LIST)
                        PsiElement(NimTokenType.()('(')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('onedata')
                        PsiElement(NimTokenType.,)(',')
                        PsiWhiteSpace(' ')
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('7')
                        PsiElement(NimTokenType.))(')')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.EQUALS)('==')
                    PsiWhiteSpace(' ')
                    NimUnaryExpressionImpl(UNARY_EXPRESSION)
                      NimUnaryOpImpl(UNARY_OP)
                        PsiElement(NimTokenType.-)('-')
                      NimLiteralImpl(LITERAL)
                        NimIntegerImpl(INTEGER)
                          NimSignedIntegerImpl(SIGNED_INTEGER)
                            PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimStatementImpl(STATEMENT)
          NimVarDeclarationImpl(VAR_DECLARATION)
            PsiElement(NimTokenType.let)('let')
            PsiWhiteSpace(' ')
            NimVarAssignmentImpl(VAR_ASSIGNMENT)
              NimCommasImpl(COMMAS)
                NimVarDefinitionImpl(VAR_DEFINITION)
                  PsiElement(NimTokenType.IDENTIFIER)('someData')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimAtExpressionImpl(AT_EXPRESSION)
                PsiElement(NimTokenType.@)('@')
                NimArrayLiteralImpl(ARRAY_LITERAL)
                  PsiElement(NimTokenType.[)('[')
                  NimOptionalIndentImpl(OPTIONAL_INDENT)
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('1')
                    PsiElement(NimTokenType.,)(',')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('3')
                    PsiElement(NimTokenType.,)(',')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('4')
                    PsiElement(NimTokenType.,)(',')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('7')
                  PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('doAssert')
          PsiWhiteSpace(' ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('someData')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('1')
                    PsiElement(NimTokenType.))(')')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.EQUALS)('==')
                PsiWhiteSpace(' ')
                NimLiteralImpl(LITERAL)
                  NimIntegerImpl(INTEGER)
                    NimSignedIntegerImpl(SIGNED_INTEGER)
                      PsiElement(NimTokenType.INT_LIT)('0')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('doAssert')
              PsiWhiteSpace(' ')
              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                    NimCallExpressionImpl(CALL_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
                      NimArgumentListImpl(ARGUMENT_LIST)
                        PsiElement(NimTokenType.()('(')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('somedata')
                        PsiElement(NimTokenType.,)(',')
                        PsiWhiteSpace(' ')
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('7')
                        PsiElement(NimTokenType.))(')')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.EQUALS)('==')
                    PsiWhiteSpace(' ')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('3')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('    ')
                NimSimpleStatementImpl(SIMPLE_STATEMENT)
                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                  PsiWhiteSpace(' ')
                  NimSimpleStatementImpl(SIMPLE_STATEMENT)
                    NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                      NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                        NimCallExpressionImpl(CALL_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
                          NimArgumentListImpl(ARGUMENT_LIST)
                            PsiElement(NimTokenType.()('(')
                            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(NimTokenType.IDENTIFIER)('someData')
                            PsiElement(NimTokenType.,)(',')
                            PsiWhiteSpace(' ')
                            NimUnaryExpressionImpl(UNARY_EXPRESSION)
                              NimUnaryOpImpl(UNARY_OP)
                                PsiElement(NimTokenType.-)('-')
                              NimLiteralImpl(LITERAL)
                                NimIntegerImpl(INTEGER)
                                  NimSignedIntegerImpl(SIGNED_INTEGER)
                                    PsiElement(NimTokenType.INT_LIT)('1')
                            PsiElement(NimTokenType.))(')')
                        PsiWhiteSpace(' ')
                        PsiElement(NimTokenType.EQUALS)('==')
                        PsiWhiteSpace(' ')
                        NimUnaryExpressionImpl(UNARY_EXPRESSION)
                          NimUnaryOpImpl(UNARY_OP)
                            PsiElement(NimTokenType.-)('-')
                          NimLiteralImpl(LITERAL)
                            NimIntegerImpl(INTEGER)
                              NimSignedIntegerImpl(SIGNED_INTEGER)
                                PsiElement(NimTokenType.INT_LIT)('1')
                    PsiWhiteSpace('\n')
                    PsiWhiteSpace('    ')
                    NimSimpleStatementImpl(SIMPLE_STATEMENT)
                      NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                      PsiWhiteSpace(' ')
                      NimSimpleStatementImpl(SIMPLE_STATEMENT)
                        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                            NimCallExpressionImpl(CALL_EXPRESSION)
                              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
                              NimArgumentListImpl(ARGUMENT_LIST)
                                PsiElement(NimTokenType.()('(')
                                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                  PsiElement(NimTokenType.IDENTIFIER)('someData')
                                PsiElement(NimTokenType.,)(',')
                                PsiWhiteSpace(' ')
                                NimLiteralImpl(LITERAL)
                                  NimIntegerImpl(INTEGER)
                                    NimSignedIntegerImpl(SIGNED_INTEGER)
                                      PsiElement(NimTokenType.INT_LIT)('5')
                                PsiElement(NimTokenType.))(')')
                            PsiWhiteSpace(' ')
                            PsiElement(NimTokenType.EQUALS)('==')
                            PsiWhiteSpace(' ')
                            NimUnaryExpressionImpl(UNARY_EXPRESSION)
                              NimUnaryOpImpl(UNARY_OP)
                                PsiElement(NimTokenType.-)('-')
                              NimLiteralImpl(LITERAL)
                                NimIntegerImpl(INTEGER)
                                  NimSignedIntegerImpl(SIGNED_INTEGER)
                                    PsiElement(NimTokenType.INT_LIT)('1')
                        PsiWhiteSpace('\n')
                        PsiWhiteSpace('    ')
                        NimSimpleStatementImpl(SIMPLE_STATEMENT)
                          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                          PsiWhiteSpace(' ')
                          NimSimpleStatementImpl(SIMPLE_STATEMENT)
                            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                              NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                                NimCallExpressionImpl(CALL_EXPRESSION)
                                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                    PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
                                  NimArgumentListImpl(ARGUMENT_LIST)
                                    PsiElement(NimTokenType.()('(')
                                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                      PsiElement(NimTokenType.IDENTIFIER)('someData')
                                    PsiElement(NimTokenType.,)(',')
                                    PsiWhiteSpace(' ')
                                    NimLiteralImpl(LITERAL)
                                      NimIntegerImpl(INTEGER)
                                        NimSignedIntegerImpl(SIGNED_INTEGER)
                                          PsiElement(NimTokenType.INT_LIT)('13')
                                    PsiElement(NimTokenType.))(')')
                                PsiWhiteSpace(' ')
                                PsiElement(NimTokenType.EQUALS)('==')
                                PsiWhiteSpace(' ')
                                NimUnaryExpressionImpl(UNARY_EXPRESSION)
                                  NimUnaryOpImpl(UNARY_OP)
                                    PsiElement(NimTokenType.-)('-')
                                  NimLiteralImpl(LITERAL)
                                    NimIntegerImpl(INTEGER)
                                      NimSignedIntegerImpl(SIGNED_INTEGER)
                                        PsiElement(NimTokenType.INT_LIT)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimStatementImpl(STATEMENT)
          NimVarDeclarationImpl(VAR_DECLARATION)
            PsiElement(NimTokenType.let)('let')
            PsiWhiteSpace(' ')
            NimVarAssignmentImpl(VAR_ASSIGNMENT)
              NimCommasImpl(COMMAS)
                NimVarDefinitionImpl(VAR_DEFINITION)
                  PsiElement(NimTokenType.IDENTIFIER)('moreData')
              PsiWhiteSpace(' ')
              PsiElement(NimTokenType.=)('=')
              PsiWhiteSpace(' ')
              NimAtExpressionImpl(AT_EXPRESSION)
                PsiElement(NimTokenType.@)('@')
                NimArrayLiteralImpl(ARRAY_LITERAL)
                  PsiElement(NimTokenType.[)('[')
                  NimOptionalIndentImpl(OPTIONAL_INDENT)
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('1')
                    PsiElement(NimTokenType.,)(',')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('3')
                    PsiElement(NimTokenType.,)(',')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('5')
                    PsiElement(NimTokenType.,)(',')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('7')
                    PsiElement(NimTokenType.,)(',')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('4711')
                  PsiElement(NimTokenType.])(']')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        NimSimpleStatementImpl(SIMPLE_STATEMENT)
          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(NimTokenType.IDENTIFIER)('doAssert')
          PsiWhiteSpace(' ')
          NimSimpleStatementImpl(SIMPLE_STATEMENT)
            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
              NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                NimCallExpressionImpl(CALL_EXPRESSION)
                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
                  NimArgumentListImpl(ARGUMENT_LIST)
                    PsiElement(NimTokenType.()('(')
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('moreData')
                    PsiElement(NimTokenType.,)(',')
                    PsiWhiteSpace(' ')
                    NimUnaryExpressionImpl(UNARY_EXPRESSION)
                      NimUnaryOpImpl(UNARY_OP)
                        PsiElement(NimTokenType.-)('-')
                      NimLiteralImpl(LITERAL)
                        NimIntegerImpl(INTEGER)
                          NimSignedIntegerImpl(SIGNED_INTEGER)
                            PsiElement(NimTokenType.INT_LIT)('1')
                    PsiElement(NimTokenType.))(')')
                PsiWhiteSpace(' ')
                PsiElement(NimTokenType.EQUALS)('==')
                PsiWhiteSpace(' ')
                NimUnaryExpressionImpl(UNARY_EXPRESSION)
                  NimUnaryOpImpl(UNARY_OP)
                    PsiElement(NimTokenType.-)('-')
                  NimLiteralImpl(LITERAL)
                    NimIntegerImpl(INTEGER)
                      NimSignedIntegerImpl(SIGNED_INTEGER)
                        PsiElement(NimTokenType.INT_LIT)('1')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            NimSimpleStatementImpl(SIMPLE_STATEMENT)
              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(NimTokenType.IDENTIFIER)('doAssert')
              PsiWhiteSpace(' ')
              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                  NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                    NimCallExpressionImpl(CALL_EXPRESSION)
                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
                      NimArgumentListImpl(ARGUMENT_LIST)
                        PsiElement(NimTokenType.()('(')
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('moreData')
                        PsiElement(NimTokenType.,)(',')
                        PsiWhiteSpace(' ')
                        PsiWhiteSpace(' ')
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('1')
                        PsiElement(NimTokenType.))(')')
                    PsiWhiteSpace(' ')
                    PsiElement(NimTokenType.EQUALS)('==')
                    PsiWhiteSpace(' ')
                    NimLiteralImpl(LITERAL)
                      NimIntegerImpl(INTEGER)
                        NimSignedIntegerImpl(SIGNED_INTEGER)
                          PsiElement(NimTokenType.INT_LIT)('0')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('    ')
                NimSimpleStatementImpl(SIMPLE_STATEMENT)
                  NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                  PsiWhiteSpace(' ')
                  NimSimpleStatementImpl(SIMPLE_STATEMENT)
                    NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                      NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                        NimCallExpressionImpl(CALL_EXPRESSION)
                          NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
                          NimArgumentListImpl(ARGUMENT_LIST)
                            PsiElement(NimTokenType.()('(')
                            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(NimTokenType.IDENTIFIER)('moreData')
                            PsiElement(NimTokenType.,)(',')
                            PsiWhiteSpace(' ')
                            PsiWhiteSpace(' ')
                            NimLiteralImpl(LITERAL)
                              NimIntegerImpl(INTEGER)
                                NimSignedIntegerImpl(SIGNED_INTEGER)
                                  PsiElement(NimTokenType.INT_LIT)('5')
                            PsiElement(NimTokenType.))(')')
                        PsiWhiteSpace(' ')
                        PsiElement(NimTokenType.EQUALS)('==')
                        PsiWhiteSpace(' ')
                        NimLiteralImpl(LITERAL)
                          NimIntegerImpl(INTEGER)
                            NimSignedIntegerImpl(SIGNED_INTEGER)
                              PsiElement(NimTokenType.INT_LIT)('2')
                    PsiWhiteSpace('\n')
                    PsiWhiteSpace('    ')
                    NimSimpleStatementImpl(SIMPLE_STATEMENT)
                      NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                      PsiWhiteSpace(' ')
                      NimSimpleStatementImpl(SIMPLE_STATEMENT)
                        NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                          NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                            NimCallExpressionImpl(CALL_EXPRESSION)
                              NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
                              NimArgumentListImpl(ARGUMENT_LIST)
                                PsiElement(NimTokenType.()('(')
                                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                  PsiElement(NimTokenType.IDENTIFIER)('moreData')
                                PsiElement(NimTokenType.,)(',')
                                PsiWhiteSpace(' ')
                                PsiWhiteSpace(' ')
                                NimLiteralImpl(LITERAL)
                                  NimIntegerImpl(INTEGER)
                                    NimSignedIntegerImpl(SIGNED_INTEGER)
                                      PsiElement(NimTokenType.INT_LIT)('6')
                                PsiElement(NimTokenType.))(')')
                            PsiWhiteSpace(' ')
                            PsiElement(NimTokenType.EQUALS)('==')
                            PsiWhiteSpace(' ')
                            NimUnaryExpressionImpl(UNARY_EXPRESSION)
                              NimUnaryOpImpl(UNARY_OP)
                                PsiElement(NimTokenType.-)('-')
                              NimLiteralImpl(LITERAL)
                                NimIntegerImpl(INTEGER)
                                  NimSignedIntegerImpl(SIGNED_INTEGER)
                                    PsiElement(NimTokenType.INT_LIT)('1')
                        PsiWhiteSpace('\n')
                        PsiWhiteSpace('    ')
                        NimSimpleStatementImpl(SIMPLE_STATEMENT)
                          NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                            NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                          PsiWhiteSpace(' ')
                          NimSimpleStatementImpl(SIMPLE_STATEMENT)
                            NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                              NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                                NimCallExpressionImpl(CALL_EXPRESSION)
                                  NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                    PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
                                  NimArgumentListImpl(ARGUMENT_LIST)
                                    PsiElement(NimTokenType.()('(')
                                    NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                      PsiElement(NimTokenType.IDENTIFIER)('moreData')
                                    PsiElement(NimTokenType.,)(',')
                                    PsiWhiteSpace(' ')
                                    PsiWhiteSpace(' ')
                                    NimLiteralImpl(LITERAL)
                                      NimIntegerImpl(INTEGER)
                                        NimSignedIntegerImpl(SIGNED_INTEGER)
                                          PsiElement(NimTokenType.INT_LIT)('4711')
                                    PsiElement(NimTokenType.))(')')
                                PsiWhiteSpace(' ')
                                PsiElement(NimTokenType.EQUALS)('==')
                                PsiWhiteSpace(' ')
                                NimLiteralImpl(LITERAL)
                                  NimIntegerImpl(INTEGER)
                                    NimSignedIntegerImpl(SIGNED_INTEGER)
                                      PsiElement(NimTokenType.INT_LIT)('4')
                            PsiWhiteSpace('\n')
                            PsiWhiteSpace('    ')
                            NimSimpleStatementImpl(SIMPLE_STATEMENT)
                              NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                                NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                  PsiElement(NimTokenType.IDENTIFIER)('doAssert')
                              PsiWhiteSpace(' ')
                              NimSimpleStatementImpl(SIMPLE_STATEMENT)
                                NimLeftHandExprListImpl(LEFT_HAND_EXPR_LIST)
                                  NimConditionalExpressionImpl(CONDITIONAL_EXPRESSION)
                                    NimCallExpressionImpl(CALL_EXPRESSION)
                                      NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                        PsiElement(NimTokenType.IDENTIFIER)('binarySearch')
                                      NimArgumentListImpl(ARGUMENT_LIST)
                                        PsiElement(NimTokenType.()('(')
                                        NimReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                          PsiElement(NimTokenType.IDENTIFIER)('moreData')
                                        PsiElement(NimTokenType.,)(',')
                                        PsiWhiteSpace(' ')
                                        PsiWhiteSpace(' ')
                                        NimLiteralImpl(LITERAL)
                                          NimIntegerImpl(INTEGER)
                                            NimSignedIntegerImpl(SIGNED_INTEGER)
                                              PsiElement(NimTokenType.INT_LIT)('4712')
                                        PsiElement(NimTokenType.))(')')
                                    PsiWhiteSpace(' ')
                                    PsiElement(NimTokenType.EQUALS)('==')
                                    PsiWhiteSpace(' ')
                                    NimUnaryExpressionImpl(UNARY_EXPRESSION)
                                      NimUnaryOpImpl(UNARY_OP)
                                        PsiElement(NimTokenType.-)('-')
                                      NimLiteralImpl(LITERAL)
                                        NimIntegerImpl(INTEGER)
                                          NimSignedIntegerImpl(SIGNED_INTEGER)
                                            PsiElement(NimTokenType.INT_LIT)('1')
        NimDedentationImpl(DEDENTATION)
          <empty list>
      NimDedentationImpl(DEDENTATION)
        <empty list>